<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-03-28T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>NHS Design Sprint Day Two</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/28/nhs-design-sprint-day-two/"/>
    <id>http://blog.url.com/2017/03/28/nhs-design-sprint-day-two/</id>
    <published>2017-03-28T01:00:00+01:00</published>
    <updated>2017-05-08T22:31:57+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="design sprint" src="/images/design_sprint.png" /&gt;&lt;/p&gt;

&lt;p&gt;So I was heading into London for the second day in a row to continue our impromptu design sprint with the Healthy London Partnership (HLP).  According to the Google Ventures book on the subject, &amp;ldquo;Day One&amp;rdquo; of a design sprint consists of the following elements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ ] Set long term goal&lt;/li&gt;
&lt;li&gt;[ ] List sprint questions&lt;/li&gt;
&lt;li&gt;[ ] Make a map&lt;/li&gt;
&lt;li&gt;[ ] Ask the experts&lt;/li&gt;
&lt;li&gt;[ ] Generate &amp;ldquo;How Might We &amp;hellip;?&amp;rdquo; notes&lt;/li&gt;
&lt;li&gt;[ ] Organise notes&lt;/li&gt;
&lt;li&gt;[ ] Vote on notes&lt;/li&gt;
&lt;li&gt;[ ] Pick target&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This sequence of events is designed to fit in a period from 10:00am to 4:30pm on a single day with a few breaks and an hour for lunch.  Actually there&amp;rsquo;s a fair bit of preparation before you can get started on day one:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ ] Choose a big challenge&lt;/li&gt;
&lt;li&gt;[ ] Get a Decider&lt;/li&gt;
&lt;li&gt;[ ] Recruit a Sprint Team&lt;/li&gt;
&lt;li&gt;[ ] Schedule extra Experts&lt;/li&gt;
&lt;li&gt;[ ] Pick a facilitator&lt;/li&gt;
&lt;li&gt;[ ] Block off five calendar days for whole team&lt;/li&gt;
&lt;li&gt;[ ] Book a room with two whiteboards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The challenge had already been set, of trying to increase the chances that Social Prescription and Self Care programs would be rolled out in many locations in London to benefit the health of individuals and communities while helping to control the rising cost of healthcare.  The team lead, who I&amp;rsquo;d met on Friday was the decider, but he was extraordinarily busy, and so had appointed his change manager as his delegate.  It wasn&amp;rsquo;t realistic to grab a full week of anyone else&amp;rsquo;s time, so the sprint team was going to be the change manager and myself, as facilitator.  If we were doing a Sprint by the book, we&amp;rsquo;d have more people involved for the week and would have scheduled extra experts to be available to talk to on the Monday, but this was all at short notice and we were planning and doing in quick succession.  The change manager had reached out to people via email on Friday, and already had interest from 8 different people, but they were going to be a mixed bag of people who could talk either only on the phone or people who could come to the HLP offices in person.&lt;/p&gt;

&lt;p&gt;I suggested that we try and split folks into experts and testers, and those who were only available electronically would give expert input at the beginning of the week, while those who could come in person could test the prototypes that we would generate by the end of the week.  We had a room with two whiteboards, but there was information we couldn&amp;rsquo;t rub off on one, and the wrong kinds of pens, so ultimately we ended up going with sheets of A3 paper as we tried to knock off as much of day one as possible.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Long Term Goal" src="https://www.dropbox.com/s/4tkxujc3bd75w25/long_term_goal_image.jpg?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Our long term goal didn&amp;rsquo;t boil down into a wonderfully pithy statement, but the change manager and I seemed to be speaking the same language about what the project might want to achieve.&lt;/p&gt;

&lt;p&gt;We generated two pages of &amp;ldquo;how might we fail&amp;rdquo; notes:&lt;/p&gt;

&lt;p&gt;&lt;img alt="How we might fail (1)" src="https://www.dropbox.com/s/iaty72ys9211fe2/how_might_we_fail_one_image.jpg?dl=1" /&gt;
&lt;img alt="How we might fail (2)" src="https://www.dropbox.com/s/wen8yxuct4wq5tw/how_might_we_fail_two_image.jpg?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I was doing a lot of writing, and the change manager was throwing out lots of ideas - I was adding mine in too.  We had the cart a little before the horse in the sense that we were already stacked towards thinking about a wiki solution that was proposed in the project tender, but either way I was definitely improving my understanding of how Clinical Commissioning Groups (CCGs) worked within the NHS in order to allocate resources for healthcare.  &lt;/p&gt;

&lt;p&gt;We moved on to map-making, identifying key stakeholders.  The first map had a lot:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Patient (&amp;amp; Carer)&lt;/li&gt;
&lt;li&gt;Commissioner&lt;/li&gt;
&lt;li&gt;HLP Researcher&lt;/li&gt;
&lt;li&gt;HLP Implementor&lt;/li&gt;
&lt;li&gt;Patient Champion&lt;/li&gt;
&lt;li&gt;Community Resource Provider&lt;/li&gt;
&lt;li&gt;Social Prescription Service provider&lt;/li&gt;
&lt;li&gt;G.P.s (General Practitioners &amp;ndash;&amp;gt; U.K. doctors)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt="First Stakeholder Map" src="https://www.dropbox.com/s/dgicpsrce70xfze/map_one_image.jpg?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;Which we pruned back in a second version:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Second Stakeholder Map" src="https://www.dropbox.com/s/62v1nl8vjb7ktva/map_two_image.jpg?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;We identified the key component of the point of influencing the commissioners, and dove in deeper on that in another map that focused on just an HLP researcher and the commissioner as stakeholders, and what it would take to have the commissioner become aware of the material, absorb information from it and then actually take action:&lt;/p&gt;

&lt;p&gt;&lt;img alt="HLP Researcher and Commissioner Map" src="https://www.dropbox.com/s/pslia27srgxazwg/map_three_image.jpg?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;Then we ended up with a fourth diagram assuming that other stakeholders could participate in the creation of the materials, which pulled in another Stakeholder - a moderator:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Extended Commissioner influence Map" src="https://www.dropbox.com/s/fjvqqyqb906v5q9/map_four_image.jpg?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;Brendan and I seemed to be making good progress, at least in terms of me better understanding the complexities of the interactions between the different stakeholders.  Given a stronger sprint structure we would now have our experts on tap to come in and be interviewed, talked through our high level goals, notes on how we might fail and associated maps.  However we were still in the process of booking our experts, and our time in the room had ended, so we called that a day.&lt;/p&gt;

&lt;p&gt;I spent the rest of the afternoon catching up with email, and putting out feelers for legal advice on the project&amp;rsquo;s terms &amp;amp; conditions.  I&amp;rsquo;d like to have digitalised all the notes and maps, but there wasn&amp;rsquo;t time, and the big question going in for day two was how were we going to fit the different components of the design sprint into the rest of the week.  Should we split day one over two days? Jump straight to day two?  Find out what we did in tomorrow&amp;rsquo;s blog! :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>NHS Design Sprint Day One</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/27/nhs-design-sprint-day-one/"/>
    <id>http://blog.url.com/2017/03/27/nhs-design-sprint-day-one/</id>
    <published>2017-03-27T01:00:00+01:00</published>
    <updated>2017-05-08T22:17:23+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="design sprint" src="/images/design_sprint.png" /&gt;&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;m heading in to central London again to work on this new UK National Health Service (NHS) wiki contract.  I&amp;rsquo;d already taken the train south of the river to meet with &amp;ldquo;Healthy London Partnership&amp;rdquo; (HLP) staff at NHS headquarters on Friday.  The AgileVentures charity (with support from AV Trustee Steve of Capable Communities and Mina of Enterprise Wellness) put in a proposal on an NHS &amp;ldquo;invitation to tender&amp;rdquo; a couple of weeks ago, and we&amp;rsquo;ve been awarded the contract.  The NHS headquarters is an imposing building just outside Elephant &amp;amp; Castle underground station, and the work comes from HLP itself which is is a collaborative enterprise of the 32 &lt;a href="https://en.wikipedia.org/wiki/Clinical_commissioning_group"&gt;Clinical Commissioning Groups (CCGs)&lt;/a&gt; in London and NHS England (London region), tasked with improving the health of Londoners.&lt;/p&gt;

&lt;p&gt;The first thing I had to ask on Friday was what a &amp;ldquo;Clinical Commissioning Group&amp;rdquo; (or CCG) was, and apparently they are the management teams in charge of healthcare provision (and budget allocation) for a particular geographical region.  So, for example, if a new hospital was being built, or a new mental health care support framework was being rolled out, the local CCG would be choosing how to spend the money, and perhaps more importantly, what kind of services are being made available in a particular area. According to Wikipedia:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CCGs are clinically led groups that include all of the GP groups in their geographical area. The aim of this is to give GPs and other clinicians the power to influence commissioning decisions for their patients&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;CCGs can be of different sizes, but usually (always?) have a director of commissioning who is the key decision maker.  The director receives recommendations from individual commissioners, of whom there might be 15-20.  In a given CCG one commissioner will have a brief that covers the self-care (SC) and social-prescribing (SP) that HLP believe can lead to better health and well-being for Londoners while avoiding rising costs.&lt;/p&gt;

&lt;p&gt;HLP are trying to support the local CCG&amp;rsquo;s to make effective choices for improving Londoners&amp;rsquo; health care.  In the context of the current project they&amp;rsquo;ve produced two documents to help NHS commissioners develop social-prescribing and self-care in their local areas.  The &lt;a href="https://www.healthylondon.org/latest/publications/steps-towards-implementing-self-care"&gt;first document&lt;/a&gt; is already available online.  Social prescribing is about doctors providing patients with &amp;ldquo;prescriptions&amp;rdquo; for things other than drugs and medical treatment, such as activities with local volunteer groups; while self-care is all about empowering individuals to go out and take part in community activities.  There&amp;rsquo;s some evidence to suggest that volunteering and connection to the community are good for individual&amp;rsquo;s health and can lead to big cost savings for the health service.&lt;/p&gt;

&lt;p&gt;HLP&amp;rsquo;s concern is that while they are getting good feedback on the documents they have produced, they are likely to go out of date quickly.  They have a vision for living documents that will be updated by the commissioners themselves and other stakeholders in the voluntary sector.  For example, they imagine one commissioner having developed their own model and sharing that back so that all commissioners can learn from it.&lt;/p&gt;

&lt;p&gt;The commissioners who might recommend (and/or implement) SC and SP in their local areas may be working alone, or with a small team, and will recommend service provisions and changes to the director of commissioning who will make the ultimate decision.  HLP works with a number of NHS public champions, who are people with long term experience as a patient or a carer.  One of the public champions suggested a wiki as a possible way of managing all the documents.  HLP are excited about the idea of &amp;ldquo;open sourcing&amp;rdquo; their materials to allow for collaborative development of living documents.   They have a small amount of money for developing and hosting a wiki system and also for moderating it for the next couple of years.&lt;/p&gt;

&lt;p&gt;They are concerned about possible legal issues around who can post to the wiki, and so it seems we need a careful process to tease out their needs, and to work out what kind of system could achieve the outcomes they are looking for.  In discussion on Friday we came up with this very rough timeline of outcomes:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;2 weeks: live with collaborative solution&lt;/li&gt;
&lt;li&gt;3 months: can see people are using the system - see that people are contributing - see that it works&lt;/li&gt;
&lt;li&gt;&lt;p&gt;6 months: starting to see online community - people are responding to each other&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;12 months: understand the broader impact this is having - and we&amp;rsquo;re seeing more SP and SC in London &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;36 months: see positive health and finance impacts&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ve proposed doing a design sprint to try and ensure we pick a solution that will give them the outcomes they are looking for.  There isn&amp;rsquo;t sufficient money to build a custom solution, so we will need to go with an existing hosted wiki service, or an existing open source wiki that we can host for them.  It turns out that everyone on the HLP team is extraordinarily busy, so I&amp;rsquo;ll be working with their outgoing change officer this week for the design sprint.  He&amp;rsquo;s going to be the decider delegate and I&amp;rsquo;m going to be the facilitator, and while ideally we&amp;rsquo;d have many more people involved and more time in both our schedules, we&amp;rsquo;re going to do the best we can.  The change officer has already reached out to various stakeholders to participate as experts or test users during the course of the week.  Design sprints are organised along these approximate lines:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Monday: Frame and understand the problem&lt;/li&gt;
&lt;li&gt;Tuesday: Diverge and consider multiple solutions&lt;/li&gt;
&lt;li&gt;Wednesday: Converge on specific solutions&lt;/li&gt;
&lt;li&gt;Thursday: Prototype a solution&lt;/li&gt;
&lt;li&gt;Friday: Test with real users&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and I&amp;rsquo;m taking components of Google and Thoughtbot&amp;rsquo;s approaches to Design Sprints to create a week long process that handles the various constraints imposed by the context of the project.  Stay tuned to find out how it goes :-)&lt;/p&gt;

&lt;h3&gt;Related Links:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Clinical_commissioning_group"&gt;Wikipedia on Clinical Commissioning Groups (CCGs)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.healthylondon.org/latest/publications/steps-towards-implementing-self-care"&gt;HLPs document on Social Prescribing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.gv.com/sprint/"&gt;Google Design Sprints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thoughtbot.com/product-design-sprint/guide"&gt;ThoughtBot Design Sprints&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Conflicted</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/24/conflicted/"/>
    <id>http://blog.url.com/2017/03/24/conflicted/</id>
    <published>2017-03-24T00:00:00+00:00</published>
    <updated>2017-05-03T21:40:59+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="conflicted" src="/images/conflicted.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;What a week!  So many developments and me so internally conflicted.  Let me summarise some of the developments:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The UK Health Service (NHS) awards the AgileVentures charity a small grant to develop, host and moderate a &amp;ldquo;Social Prescribing&amp;rdquo; wiki&lt;/li&gt;
&lt;li&gt;I land a medium sized private closed-source contract for an educational site through my company NeuroGrid&lt;/li&gt;
&lt;li&gt;edX gives us the all clear to start another run of the MOOC in April&lt;/li&gt;
&lt;li&gt;With some success I used my last two blogging sessions to grapple with some sticky issues on the LocalSupport codebase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So having the UK&amp;rsquo;s NHS as a client of the AgileVentures charity could be a big step forward.  It&amp;rsquo;s a small grant and I&amp;rsquo;m going into town today to get more details, but combine it with the small grant from WikiMedia EDU and we start to look like a respectable organisation that should be taken seriously :-)  I should be overjoyed, but I find myself conflicted because while it&amp;rsquo;s great news, I need to take better paying gigs now to pay the bills.  To that end, landing this medium-sized closed source contract is another fantastic breakthrough.  It&amp;rsquo;s a really interesting project, but the closed-source part of it makes me feel crestfallen.&lt;/p&gt;

&lt;p&gt;I just love not having to be secretive about things.  I love the potential for everyone learning when we do all our coding out in the open.  Of course when people are putting money on the line for a business proposition they are not incentivized to share - they want to minimise the chance that others can capitalize on their breakthroughs.  And sometimes, at least superficially, closed-source is needed to close the deal, so to speak.  I feel crestfallen because I&amp;rsquo;d prefer to have 100% of my time spent on open-source code, open-access pairing with the AgileVentures community.  The new private project won&amp;rsquo;t stop that completely, but it&amp;rsquo;ll probably take up 50% of my time for a few months.  Of course that may be just what the community needs, me stepping back a bit in order to allow other community members to take the lead.  And based on my personality I know I&amp;rsquo;d carry on doing some things exactly the same way till I drove myself into the ground, so it&amp;rsquo;s good to mix things up a bit.&lt;/p&gt;

&lt;p&gt;In parallel I&amp;rsquo;m caught slightly off guard by the MOOC being able to go live.  The pressure is on me to come up with start dates and my quandry at the moment is working out if/how we run the TA training course in advance of it.  Running the MOOC takes me away from what I love the most, which is just coding and pairing, and we still don&amp;rsquo;t have a great scalable framework for everyone doing that through the MOOC, or even via AgileVentures.  I managed to force myself to focus on unblocking some issues on the LocalSupport project this week by blogging about them, but I haven&amp;rsquo;t really wrapped up other jobs that I&amp;rsquo;m only part way through on WebsiteOne, AsyncVoter and Redeemify.  Managing too many projects? Me? Argh, we need some mechanism to scaffold folks into project management roles or something &amp;hellip;&lt;/p&gt;

&lt;p&gt;Could the combination of ongoing work by the marketing team and the start up of the MOOC take AgileVentures Premium subscriptions to the next level? At least I&amp;rsquo;m not going to be completely distracted by a new full time job.  I&amp;rsquo;m also doing remote pairing on toy-kata and other folks&amp;rsquo; personal projects just to mix things up, which is fun, but doesn&amp;rsquo;t move forward the devops blocks on our Agile projects for non-profits.  I just wish we had a seemless framework in place to let folks pair online.  Google have split Hangouts into separate chat and meetup which seems insanity to me in terms of the gamified pairing experience I keep imagining.  Of course Google has their eye on other things.  Maybe once I&amp;rsquo;ve finished this private project we can do a design sprint on how to build (and fund) such a thing &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://youtu.be/QqMTSqux9Gs"&gt;Pairing on Tennis Kata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Pull Request Feedback by Blog</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/23/pullrequest-feedback-by-blog/"/>
    <id>http://blog.url.com/2017/03/23/pullrequest-feedback-by-blog/</id>
    <published>2017-03-23T00:00:00+00:00</published>
    <updated>2017-05-02T21:38:27+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="feedback" src="/images/feedback2.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So in the blogs over the last two days I managed to get to the bottom of the problems on one LocalSupport pull request from a Premium member (Zmago).  It&amp;rsquo;s clear from that experience that I&amp;rsquo;ve got to adjust the develop branch so that VCR/PuffingBilly caches are all up to date and correct, or no other developers are going to get a correct read on what&amp;rsquo;s going on with network connections.  I&amp;rsquo;ve also got another pull request on a complex three point feature, that I need to spend some concentrated review time on.&lt;/p&gt;

&lt;p&gt;Maybe I should have been opening another PR to fix up precisely that issue but I started by pulling down Marouen&amp;rsquo;s &amp;ldquo;Post Volunteer Opportunities to DoIt&amp;rdquo; branch locally and re-running it with the caches in place - I opened a PR on that basis - but it went to my old tansaku fork. I really need to disconnect that.&lt;/p&gt;

&lt;p&gt;Then I got down to reviewing Marouen&amp;rsquo;s PR, file by file, using the &amp;ldquo;compare with develop branch&amp;rdquo; feature in RubyMine, which is maybe a funny way to review, but well - start at the beginning.  I made the following notes as I worked through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;doit&lt;em&gt;volunteer&lt;/em&gt;ops.js file being loaded on every page&lt;/li&gt;
&lt;li&gt;doit&lt;em&gt;volunteer&lt;/em&gt;ops.js hits local &lt;code&gt;/doit_organisations&lt;/code&gt; end point but does nothing with result?&lt;/li&gt;
&lt;li&gt;bootstrap datepicker being incorporated&lt;/li&gt;
&lt;li&gt;DoitOrganisationsController providing us local? endpoint to new service &lt;code&gt;Doit::GetManagedOrganisations.call&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;new DoitVolunteerOpsController to handle creation of new op on DoIt&lt;/li&gt;
&lt;li&gt;VolunteerOpsController has check for whether to display publish button (could be in helper or separate method)&lt;/li&gt;
&lt;li&gt;long running job PostToDoitJob&lt;/li&gt;
&lt;li&gt;new model DoitTrace to store DoIt publication status (VolunteerOp has_one) (in db)&lt;/li&gt;
&lt;li&gt;new model DoitVolunteerOp to store more data about doit op? (not in db - stored temporarily)&lt;/li&gt;
&lt;li&gt;Doit::PostToDoit service to do posting&lt;/li&gt;
&lt;li&gt;dropdown_list partial to allow for selection of doit orgs &amp;hellip;&lt;/li&gt;
&lt;li&gt;doit_orgs index.js.erb - not sure how this fits in&lt;/li&gt;
&lt;li&gt;new form for creating DoitVolunteerOps&lt;/li&gt;
&lt;li&gt;volunteer ops show page broken up into more partials&lt;/li&gt;
&lt;li&gt;sucker punch async job handling added&lt;/li&gt;
&lt;li&gt;doit_volunteer ops nested in volop URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Marouen had a good summary in his PR description:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add new model for tracing published vol ops to Doit&lt;/li&gt;
&lt;li&gt;add 2 services to interact with Doit API&lt;/li&gt;
&lt;li&gt;add form object to manage posting to Doit&lt;/li&gt;
&lt;li&gt;implement active&lt;em&gt;job with sucker&lt;/em&gt;punch as backend to avoid extra cost from Heroku&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but it took me going through the code, making my own notes, to really work out what was going on.  Then I ran the system locally to review how the UI looked:&lt;/p&gt;

&lt;p&gt;&lt;img alt="submitting a DoIt Volop" src="https://www.dropbox.com/s/90viie9yi9r7knu/Screenshot%202017-03-23%2014.20.56.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It was great to see a complete solution from Marouen, but we hadn&amp;rsquo;t done a UI mockup of how this should all work in advance.  Marouen was pushing up the code and driving from tests, but I hadn&amp;rsquo;t given him wireframes, which should have been the first step.  I had just assumed that publishing a doit opportunity would be done through the existing volunteer op form with a checkbox.  A checkbox that when checked might reveal the other possible fields. Zmago had done something like that in the past, but of course Marouen hadn&amp;rsquo;t necessarily seen that.&lt;/p&gt;

&lt;p&gt;I notice that we&amp;rsquo;ve lost some of the layout on the forms, presumably as a consequence of the bootstrap upgrade.  Gah!  I think the user experience would probably make more sense if we just had a single form.  I&amp;rsquo;m thinking about a user wanting to update the description at the point that they are published to DoIt:&lt;/p&gt;

&lt;p&gt;&lt;img alt="existing form" src="https://www.dropbox.com/s/g9rj5plfli4zz2o/Screenshot%202017-03-23%2014.28.05.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I made this scrappy mockup to show Marouen what I mean:&lt;/p&gt;

&lt;p&gt;&lt;img alt="mockup for merging two forms" src="https://www.dropbox.com/s/9a02yw28ypm7qte/Screenshot%202017-03-23%2018.24.47.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I guess I should get input from the client on this, but my intuition is that this will be simpler in terms of our URLs and the workflow for the end user.  The risk is that I&amp;rsquo;m pushing for changes that will just exhaust Marouen.  The buck stops with me here of course - I should have ensured we provided a mockup earlier, or made sure to check out the PR earlier.  So many PRs, so little time &amp;hellip;&lt;/p&gt;

&lt;p&gt;p.s. we won the nhs-wiki contract!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Debugging by Blog</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/22/debugging-by-blog/"/>
    <id>http://blog.url.com/2017/03/22/debugging-by-blog/</id>
    <published>2017-03-22T00:00:00+00:00</published>
    <updated>2017-04-27T21:51:22+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="debugging" src="/images/debugging.png" /&gt;&lt;/p&gt;

&lt;p&gt;Right, on to part 2 of &amp;ldquo;debugging by blog&amp;rdquo;, my attempt to force myself to work through code blockers while debugging.  Currently it&amp;rsquo;s LocalSupport, where we&amp;rsquo;ve had a weird CI failure that wasn&amp;rsquo;t replicated locally for myself or Zmago on our respective machines.  As I poked at it yesterday while &amp;ldquo;blog debugging&amp;rdquo; I found that the cached fixture files for VCR and PuffingBilly had been added to .gitignore.  This meant that the CI was hitting the 3rd party endpoints such as Google, Do-It, ReachSkills etc. as part of our CI test runs.  I can see why those folders would get added to .gitignore.  Whenever there is some change in the outgoing network connections from our code, those files will change.  Developers will see all these changes in their &lt;code&gt;git status&lt;/code&gt; checks and not think them worth checking in.  They may even fully understand that they are creating a network sandbox around our code, but just not want to deal with the hassle of them.&lt;/p&gt;

&lt;p&gt;The danger of not checking them in is that when developing a new feature, the cached network responses will be saved on a local developers machine, and then subsequent code changes may not necessarily produce the same outputs if the system was actively connected to the network.  I suspect this is what has happened with Zmago&amp;rsquo;s pull request.  Now that I removed those folders from the .gitignore file and reset the VCR/PuffingBilly fixture caches I am able to replicate the error locally.  Here is the error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ cucumber features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
[Coveralls] Using SimpleCov's 'rails' settings.
[DEPRECATION] `require 'billy/cucumber'` is deprecated. Please use `require 'billy/capybara/cucumber'` instead.
Using the default profile...
@vcr @javascript @billy
Feature: Reachskills volunteer opportunities
  As a member of the public
  So that I can see where organisations with volunteer opportunities are located
  I would like to see a map of reachskills volunteer opportunities

  Background:                                                          # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:7
    Given that the doit_volunteer_opportunities flag is enabled        # features/step_definitions/volunteer_op_steps.rb:60
    Given that the reachskills_volunteer_opportunities flag is enabled # features/step_definitions/volunteer_op_steps.rb:60
    And I run the import reachskills service                           # features/step_definitions/volunteer_op_steps.rb:35
    And cookies are approved                                           # features/step_definitions/authentication_steps.rb:98

  Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page                        # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
    Given I visit the volunteer opportunities page                                                                            # features/step_definitions/navigation_steps.rb:49
      #    And wait for 3 seconds
    Then the index should contain:                                                                                            # features/step_definitions/basic_steps.rb:521
      | Fundraising Volunteer | The volunteer will be required to work with the fundraising consultant research trusts and corporate grant making foundations appropriate to the ... | Chalkhill Community Centre |
      expected to find text "Fundraising Volunteer" in "Search Text &amp;lt;snip&amp;gt; ..." (RSpec::Expectations::ExpectationNotMetError)
      ./features/step_definitions/basic_steps.rb:525:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/basic_steps.rb:524:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/basic_steps.rb:523:in `each'
      ./features/step_definitions/basic_steps.rb:523:in `/^the index should( not)? contain:$/'
      features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:35:in `Then the index should contain:'
    Then I should see a link to "Chalkhill Community Centre" page "https://reachskills.org.uk/org/chalkhill-community-centre" # features/step_definitions/volunteer_op_steps.rb:80

Failing Scenarios:
cucumber features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32 # Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page

1 scenario (1 failed)
7 steps (1 failed, 1 skipped, 5 passed)
0m4.523s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem here is that this test is relying on some data from a ReachSkills opportunity that is no longer on the ReachSkills site.  The test passes if I update the details on the volunteer opportunity that is being checked for in the test.  Now the critical thing is to commit the relevant VCR files into git in along with the test and everything should pass on CI.  Irritatingly, failing test runs and runs of tests on other branches can generate a lot of noise in the VCR/PuffingBilly caches, so I use the following strategy to get ready for a commit:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ rm -rf features/req_cache
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ rm -rf features/vcr_cassettes
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ git checkout features/req_cache
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ git checkout features/vcr_cassettes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although it does get more complicated than that if some files have already been added or committed.  Then I run the working tests to generate the VCR and PuffingBilly cache files which show up in git status like so:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ gst
On branch 133663043_add_reachskills_vol_ops
Your branch is up-to-date with 'zmago/133663043_add_reachskills_vol_ops'.
Changes to be committed:
  (use "git reset HEAD &amp;lt;file&amp;gt;..." to unstage)

    modified:   .gitignore

Changes not staged for commit:
  (use "git add &amp;lt;file&amp;gt;..." to update what will be committed)
  (use "git checkout -- &amp;lt;file&amp;gt;..." to discard changes in working directory)

    modified:   db/schema.rb
    modified:   features/volunteer_opportunities/reachskills_volunteer_opportunities.feature

Untracked files:
  (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)

    features/req_cache/get_maps.google.com_003bbc256d1363a112f914cfb75db8bfd1ba9186.yml
    features/req_cache/get_maps.google.com_4907fe14430b7875f162d6a087ab9fe810cef4c4.yml
    features/req_cache/get_maps.google.com_4b140e4c1e7dd61c9ed03042a6ea3173b0f93c21.yml
    features/req_cache/get_maps.google.com_59e27d9935cf723e2f772afbbb6222428b8f7303.yml
    features/req_cache/get_maps.google.com_903f013d4d1032501baea6f534b38e924321b4b6.yml
    features/req_cache/get_maps.google.com_9bb449f46f323b9bb6bf3ffb8d4e3d1f4c0bdb9b.yml
    features/req_cache/get_maps.google.com_b10b2089367dc41afe11f20775ff8cd4aad2f31e.yml
    features/req_cache/get_maps.google.com_b43294d3c3efeaa9c1138646be862df98e08a75a.yml
    features/req_cache/get_maps.google.com_d02253d8c9679439fe590dae8bf9b93cadefe83c.yml
    features/req_cache/get_maps.googleapis.com_f0a259f6b2f5f73b6d54fa224b954d14213b7bc0.yml
    features/req_cache/get_maps.gstatic.com_7b3f3d37460a085af155862dc94328ad3916985d.yml
    features/vcr_cassettes/Reachskills_volunteer_opportunities/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which I can now add, and things should pass reliably on CI.  So my original diagnosis of a JavaScript timing issue was incorrect.  VCR/PuffingBilly are powerful tools, but it seems rather easy for developers of all skills levels to impale themselves on them.  I&amp;rsquo;m not sure what the best way forward is.  It reminds me of Donald Norman&amp;rsquo;s &amp;ldquo;The Design of Everyday Things&amp;rdquo; in which he points out how an incorrect mental model of something can make its use terribly problematic.  His example is from a fridge thermostat, but I can see exactly the same pattern here.&lt;/p&gt;

&lt;p&gt;The real difficulty in some ways is the interaction between the caching of network interaction and the git version management.  We&amp;rsquo;ve got some similar issues on WebSiteOne.  More blogs to come on this I think.  I also wanted to get onto outstanding questions on other PRs from Marouen and Olena, but that will need to wait till tomorrow as it looks like the MOOC might be cranking up to go live and so I&amp;rsquo;m needing to get alot of things in gear very quickly.  At least blogging about the debugging process is helping ensure that I actually get some sticky things unblocked, rather than just navel gazing about why all socio-technical processes seem so hard :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Long Running PRs</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/21/long-running-pull-requests/"/>
    <id>http://blog.url.com/2017/03/21/long-running-pull-requests/</id>
    <published>2017-03-21T00:00:00+00:00</published>
    <updated>2017-04-26T21:33:57+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="security" src="/images/long_running.JPG" /&gt;&lt;/p&gt;

&lt;p&gt;So the SSL encryption is all now working on &lt;a href="https://www.agileventures.org/"&gt;AgileVenture&amp;rsquo;s production site&lt;/a&gt;.  The slight login oddities on staging appear to have been just staging oddities.  I think maybe we could address them by re-cloning the production database to staging.  That would require upgrading the database plan there, but I guess we can afford that extra $9 a month to make sure our staging environment is closer to production.  Having staging replicate production as closely as possible is generally a good idea to increase the chances that production bugs can be solved on staging.  I took a risk yesterday pushing out to production, and it could have blown up in my face.  I followed a hunch and it seemed to work out.  I probably should pay fate back by doing that upgrade.&lt;/p&gt;

&lt;p&gt;Anyhow, so that means I completed 1 of the 4 story points that I committed to in last week&amp;rsquo;s WebSiteOne sprint.  I haven&amp;rsquo;t taken on any new points for this next sprint, and will see if I can close the others out this week.  We had the LocalSupport kick-off meeting yesterday and that&amp;rsquo;s not quite following the same format as the WebSiteOne kick-off where the stakeholders bring tickets for discussion and voting.  The big difference is that any AgileVentures community member is a client for WebSiteOne.  For LocalSupport we have a specific charity client who I&amp;rsquo;m now meeting every two weeks.  Maybe both sprints would be better off being two weeks long rather than a single week.  Although, with WebSiteOne I&amp;rsquo;m still happy voting every week, even if we don&amp;rsquo;t start on tickets.  That said, it seems like it&amp;rsquo;s important to work on tickets soon after you vote on them, otherwise the voting goes stale and it becomes wasted effort.&lt;/p&gt;

&lt;p&gt;In the LocalSupport kick-off yesterday there were both new and old PRs that needed to be dealt with.  Rather than voting on new tickets, I suggested we focus on getting them sorted.  That gives me an idea for a model for the kick-off meetings going forward&amp;ndash;that they could alternate between being voting sessions and board/PR clearing sessions.  I think the danger with fortnightly or bi-weekly meetings is that it&amp;rsquo;s confusing to remember whether the meeting is on or not, and it&amp;rsquo;s simpler and you get better attendance if the meeting is weekly.  Maybe the activity of the meeting can be determined as a function of the state of the project board.&lt;/p&gt;

&lt;p&gt;Anyhow, the state of the LocalSupport project was with five open pull-requests, three of which were long-running:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/427"&gt;Post our volunteer ops to Do-it via API key (Marouen)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/421"&gt;Incorporate reachskills volunteer opportunities (Zmago)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/424"&gt;Added unit test and a placeholder for integrated test (Marcelo)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last was a learning activity on a refactoring ticket from Marcelo, and I got his permission to close it and that we would work on it again when he was free.  Marcelo is busy with his day job, and that&amp;rsquo;s totally fair enough.  It&amp;rsquo;s a shame as I think there is a kind of critical mass for learning from pull-requests.  If the gaps between working on something are too great you end up forgeting pieces of the things you were focusing on and the results of earlier effort are lost.  Zmago&amp;rsquo;s PR, related to ReachSkills integration, is stuck with a failure that&amp;rsquo;s only happening on CI, and Marouen had just finished a big PR for posting volunteer opportunities to the DoIt API.  Marouen needs input and I know it will take me a run up to get into it and give good feedback.  Zmago&amp;rsquo;s CI-only (JavaScript timing?) failure is one of the frustrating long debug cycle issues that&amp;rsquo;s a real pain to fix.  I spent the first part of the kick-off outlining these PRs to Mahesh, Sigu, Cess and Stella.  As relative newcomers to the project it would be difficult for these four to move us forward on the outstanding PRs, but I encouraged them to take a look over and comment if they could.  Every little helps :-)&lt;/p&gt;

&lt;p&gt;Then the second half of the meeting we focused on the CodeClimate issues that were being flagged up on Cess and Stella&amp;rsquo;s pull-requests.  They were mainly class length and method length issues.  Reducing class size on the relevant controller would involve pulling out a service; a refactoring that I judged too complicated to get into right there.  I focused on the class length issue and how we could refactor out new methods, and even use before/after actions in the Rails controller.  We wrapped up looking at Mahesh&amp;rsquo;s proposal to add binding.pry support.  I wasn&amp;rsquo;t convinced that binding.pry let us do anything we couldn&amp;rsquo;t do with byebug, but Sigu pointed out that there was no harm in having both, and letting devs choose whichever they prefer.  I agreed, but I wonder if I&amp;rsquo;d quashed Mahesh&amp;rsquo;s enthusiasm.  That&amp;rsquo;s the old Sam coming back.  I hear statements like &amp;ldquo;binding.pry let&amp;rsquo;s us step into methods and has code completion&amp;rdquo;, and I know I can do both these things in byebug, so the academic in me wants to show that.  However showing that can be considered a block.  Perhaps better to just to express unalloyed enthusiasm for binding.pry to encourage Mahesh to submit a PR?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got another cold and I wasn&amp;rsquo;t on the ball yesterday.  I don&amp;rsquo;t know what the right thing is to do.  My natural flow of mind is just to say what I think, and if something seems unnecessary I say so, but that can quash people&amp;rsquo;s enthusiasm.  Does it follow that learners need to be working on toy projects where it doesn&amp;rsquo;t matter what code they add and an explosion of complexity is a learning experience that doesn&amp;rsquo;t have any negative impact on the end-user?  At some point folks do need to graduate beyond toy projects if they want to increase the chances of building things of value to others; balancing the different needs of the different project stakeholders.  In this case I think I should have just expressed enthusiasm for the &amp;ldquo;offer&amp;rdquo;.  It wasn&amp;rsquo;t worth making the point about byebug works.  It could have been an opportunity for me to learn more about binding.pry.  Instead of demo-ing byebug features, I could have had Mahesh work me through the binding.pry install locally and I could have started the PR with him in collaboration.  Oh well, we live and learn :-)&lt;/p&gt;

&lt;p&gt;But still, the critical thing that I should have been directing my attention to was Zmago and Marouen&amp;rsquo;s pull-requests.  Zmago is a Premium Mob member and Marouen is a Premium mentor.  I&amp;rsquo;m blogging about this all partly to force myself to analyze the issues more deeply. Zmago had tried adding some time-outs to his CI failing acceptance tests, but now the CI seemed to be stuck on an unrelated install error.  Zmago had previously given me access to his forked repo, so I thought I&amp;rsquo;d try to roll back to the previous error and take a closer look.  In the process of doing that I realised I could grab the previous error from the older Travis logs.  What we were getting is this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page                        # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
    Given I visit the volunteer opportunities page                                                                            # features/step_definitions/navigation_steps.rb:49
    Then the index should contain:                                                                                            # features/step_definitions/basic_steps.rb:521
      | Fundraising Volunteer | The volunteer will be required to work with the fundraising consultant research trusts and corporate grant making foundations appropriate to the ... | Chalkhill Community Centre |
      expected to find text "Fundraising Volunteer" in " ...

cucumber -p first_try features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Google Geocoding API error: over query limit.
  Scenario: Reachskills volunteer opportunities are opened in a new page # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:42
    Given I visit the volunteer opportunities page                       # features/step_definitions/navigation_steps.rb:49
    Then I should open "Fundraising Volunteer" in a new window           # features/step_definitions/volunteer_op_steps.rb:98
      Unable to find link "Fundraising Volunteer" (Capybara::ElementNotFound) ...

cucumber -p first_try features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:42      

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I noticed a &amp;ldquo;Google Geocoding API error: over query limit.&amp;rdquo; message - I wondered what was happening with the cache.  The billy and vcr caches should be preventing the CI tests from hitting the real Google server. That lead me to notice that Piotr added the vcr and puffing billy caches to the .gitignore file last November. &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;features/vcr_cassettes
features/req_cache
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Probably as part of the bootstrap upgrade.  It&amp;rsquo;s understandable - those changing caches make PRs and checking git status a pain.  I hadn&amp;rsquo;t noticed that change.  Could that be a factor here?  A red herring - even with the timeout&amp;rsquo;s removed, Zmago&amp;rsquo;s CI was still stuck on installing a gem &amp;hellip;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Installing eventmachine_httpserver 0.2.1 with native extensions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;was that some other weird timeout unrelated?  CI was passing for Stella and Cess. I decided to remove the VCR and billy fixtures from .gitignore.  That showed me loads of local files in the caches on git status, arising from my local test runs.  I deleted all caches (labelled fixtures) locally and re-checked out from git, and then kicked off a full cucumber test run to bring the local caches up to date.  The plan being to get full caches from a complete test run checked in and then pushed up to CI.  Perhaps that would allow Zmago&amp;rsquo;s PR to pass?  Actually it allowed me to replicate the error locally - now we were getting somewhere &amp;hellip; to be continued tomorrow!&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/D62ZcBOnNsc"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum and LocalSupport kick off&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. for Cucumber and RSpec I&amp;rsquo;d really like to adjust the output on CI so that it was progress dots for the passing tests, and full stack traces for the failure - I should investigate or open an &lt;a href="https://github.com/cucumber/cucumber-ruby/issues/new"&gt;issue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;p.p.s. opened &lt;a href="https://github.com/cucumber/cucumber-ruby/issues/1094"&gt;one&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
</feed>
