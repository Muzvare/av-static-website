<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-10-17T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Something for the Weekend</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/17/something-for-the-weekend/"/>
    <id>http://blog.url.com/2016/10/17/something-for-the-weekend/</id>
    <published>2016-10-17T01:00:00+01:00</published>
    <updated>2016-10-17T20:54:06+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I usually try and keep my weekends work free.  I’ve done that for a long time, since I was about 25 and I had a period where I had worked through a few weekends and felt pretty damn drained and exhausted the following week.  It made me really unpleasantly unhappy at the time.  Since then I’ve tried to have a rule about not working at weekends and where possible not looking at work email or chat during the weekend.  That’s become even more important to me since I had kids and the stresses of the work week have escalated as my paycheque is not just for me but for my dependents.&lt;/p&gt;

&lt;p&gt;There have been times when chat applications on my phone have allowed work to intrude into my family time.  My wife jokes about me helping my three sons with their homework and then being distracted by questions from students on Skype on my phone.  To be fair there was a good five years where I was supporting students in a very different timezone and I felt obliged to be available.  However for family balance I’ve recently become stricter with myself and over the last three years I’ve been pretty good at confining my work communication to the 9-6.  We hear things like the French making it illegal to send work emails after 6pm and I have some sympathy with that.  I do worry that the stress of being constantly connected is bad for our health.  I really do want to spend quality time with my family.  Once my kids have grown up that chance to connect with them will have gone and I don’t want to have been completely distracted from it by work.&lt;/p&gt;

&lt;p&gt;That said I need to provide food and shelter for my kids as well as attention, and for some jobs you need to be always on?  Maybe for all jobs you need to be going above and beyond to keep your job?  Maybe the father who is never there, but always provides the financial support is the better father than the one who is always available for a chat, but can’t keep the lights on?  Ironically for the professional development support that AgileVentures gives, a lot of people want extra support at the weekends.  Many people are working full time jobs, and the weekend is their chance to do some programming, to develop new skills and so forth.  Weekends and evenings - the time that I try to set aside to spend with my family.  &lt;/p&gt;

&lt;p&gt;I’ve been bending my own rules recently.  I took on a Saturday evening Mentive class to bring in some more money and also to see Mentive&amp;rsquo;s full process and how it integrates with the “Agile Development using Ruby on Rails” MOOC.  Also since my knee surgery two weeks back I’ve been distracted by pain in my knee and I’ve been using the dopamine squirts from checking messages and emails on my phone to keep me from dwelling on it.  The last two weekends I’ve been checking slack and email.  In general I haven’t been getting too stressed.  Focusing full-time on AgileVentures is nowhere near as stressful as dealing with a full time bootcamp, or even a university position.&lt;/p&gt;

&lt;p&gt;I think bootcamps are particularly stressful because the students are giving up full time jobs, paying their life savings, and going all in on a massive career change.  They’re also taking on a field in which you learn by experiencing failures again and again and again.  Universities are stressful because the majority of students are still thinking of them as an extension of school and there’s a kind of apathy and disjointedness that’s very frustrating as an instructor.  Often the students will be trying to game your grading system rather than actually being interested in learning.  I’d rather be an educator at a bootcamp than a university, because at least at the bootcamp the students are 100% committed to learning.  Ultimately though I don’t want to be an instructor at either.  I want to build code, and I want to build code with others who &lt;em&gt;want&lt;/em&gt; to build code.&lt;/p&gt;

&lt;p&gt;The AgileVentures model is all about people coding when they want to code.  We’ve got some new members who are particularly keen to code at the weekend, and we just re-branded and re-started the weekend scrum that had been unused for a while.  I can’t join those as I’m coaching my kids soccer team at the weekend, but I’ll do everything I can to support that initiative:&lt;/p&gt;

&lt;p&gt;http://www.agileventures.org/events/bob-martin-weekend-scrum-and-pair-hookup&lt;/p&gt;

&lt;p&gt;There’s a good logical argument for me checking slack and email occasionally at the weekend if it’s to help sustain the community.  My fear is that it’s a kind of addiction.  I think I have a somewhat addictive personality.  My wife talks about me having good will-power, but I think it’s second order will-power.  Faced with something that I want, I find it difficult to resist.  However, if I can arrange circumstances so that I don’t encounter the thing I want, I can generally stay on the wagon.   I struggled for years to give up smoking, but was able to quit when I moved to Japan.  I find it difficult to be motivated to exercise or blog, but if I work it into my routine I can keep doing it for months at a time.  If slack or whatsapp is pinging me on my phone I find it difficult not to respond, but if I turn off the notifications, or uninstall the app, then I can go for a good long time avoiding distraction.&lt;/p&gt;

&lt;p&gt;I’ve definitely learned that there’s a big danger in the kind of reactive conversation one can get into on chat systems; sometimes also in person, and even in email.  You can read something, have a reaction to it and launch into a set of reactionary responses that are not always the most helpful.  That’s partly the motivation for my daily morning blogging.  I’m trying to avoid spending 30 minutes to an hour just reacting to what everyone has said on slack and in email.   The pain in my knee is making it harder to keep to that rule.  I listen to a tech podcast in the morning and I seem to use sharing that on slack as an excuse that I have to check a few other channels.  I was distracted for 20 minutes before this blog because of a comment in tech talk, that lead me to review all the unanswered entries in the MOOC discussion forum!  &lt;/p&gt;

&lt;p&gt;Maybe that was reasonable station-keeping.  Over the last two weeks as I check email/slack in dribs and drabs in my downtime I have less of a build up of messages post-blog.  I’m still worried that my responses may be too reactionary.  There’s a kind of “whack-a-mole” mentality that you can get into where you want to have replied to everything, want to have addressed everything, so you whack each message as it comes up.  Sometimes it would be better to leave things for others to answer.  Some questions are not critical to answer immediately, and more importantly, they may be distracting you from the activities that will keep you your current job, or sustain your existing business/charity.  Sometimes it can feel like wasting precious seconds on frivolities?&lt;/p&gt;

&lt;p&gt;One thing I start to sense is that too strong a reaction is usually counter-productive, as is worrying too intensely about whether something is an effective use of your time.  Not that you shouldn’t reflect, but that should be done at intervals.  As my father used to say “it’s better to spend 10 minutes doing something, rather than spend 10 minutes worrying about the fact that you haven’t done anything for 10 minutes”.  Make a quick plan for the day, or the half day, do that and see how you feel.  Right - time to get on with my day, and maybe I’ll see you at the weekend :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Online Conferences</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/14/online-conferences/"/>
    <id>http://blog.url.com/2016/10/14/online-conferences/</id>
    <published>2016-10-14T01:00:00+01:00</published>
    <updated>2016-10-14T21:53:55+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Gave my first ever talk at a remote online conference on Thursday.  It&amp;rsquo;s been a while since I spoke at any kind of conference actually.  I used to give talks pretty regularly as an academic and running meet ups, but I&amp;rsquo;ve got out of the swing of it.  And giving a talk isn&amp;rsquo;t coding, which is what I really want to be doing.  Although by the look of it most of my time is now taken up blogging, devops and reviewing pull requests, but anyway.  I&amp;rsquo;ve given talks in SecondLife and I&amp;rsquo;ve been hosting online tutorials, remote pair programming and recording online lectures for students lots and lots over the last five years.  &lt;/p&gt;

&lt;p&gt;So presenting for &lt;a href="https://allremoteconfs.com/rails-2016"&gt;Rails Remote Conf&lt;/a&gt; was not such a huge difference.  It was a hangout and there was a separate custom chat app from webinarjam to take incoming questions and comments from the audience.  I&amp;rsquo;d done a fair amount of prep during the week, from sharing some &lt;a href="https://dl.dropboxusercontent.com/u/13196858/RailsRemoteConf-OpenSourceRailsCharityProject-SamJoseph.pdf"&gt;draft slides&lt;/a&gt; with our core team, although looking back at it now and considering some of the other talks I saw at the conference I should have animated in the different bullets, and/or replaced all the text with images, and used the slides as speaker notes.  Next time I guess.&lt;/p&gt;

&lt;p&gt;I was a little self-conscious that I wasn&amp;rsquo;t deep diving on Rails tech, but conference organiser and host Charles Max Wood reassured me that he likes to have a couple of less technical talks in the conference, so I launched into the talk, trying to remind myself to speak slowly.  My bane.  I talk too fast.  Listening to lectures and podcasts on 2x doesn&amp;rsquo;t help I&amp;rsquo;m sure, but it&amp;rsquo;s been a problem since my youth.  I guess I am a gabbler.  Maybe the text on the talk slides was not such a bad idea.  If people couldn&amp;rsquo;t understand my accent or pace of delivery, they could at least read the slides :-)&lt;/p&gt;

&lt;p&gt;I got a few comments and questions during the talk, which like usual hangout chat appear to have been lost to the ether when the session ended.  There was a question about how time-pressed project maintainers can manage lots of pull requests, and I responded with Pat Bolger&amp;rsquo;s great points on my first draft about getting the whole team involved in the review of pull requests, and of course my big favourite, &amp;ldquo;small PRs&amp;rdquo;.  There wasn&amp;rsquo;t extensive questioning at the end, hopefully because what I had said was transparently clear rather than just unutterably dull :-) Reassuringly I had some positive feedback by email afterwards from one audience member.&lt;/p&gt;

&lt;p&gt;Despite the time zone difference I managed to catch a few of the other talks, which were pretty good.    &lt;a href="https://twitter.com/philnash"&gt;Phil Nash&lt;/a&gt; spoke about two factor authentication, &lt;a href="https://twitter.com/cmaxw"&gt;Charles&lt;/a&gt; about freelancing and &lt;a href="http://nellshamrell.com/"&gt;Nell Shamrell&lt;/a&gt; about estimates that don&amp;rsquo;t suck.  Nell had a particularly interesting deep dive slide where she took apart a user story in terms of the technical specifics and gave points to each of those elements:&lt;/p&gt;

&lt;p&gt;&lt;img alt="detailed tech estimate" src="https://www.dropbox.com/s/7kmkkxvqgl2zmrh/Screenshot%202016-10-14%2010.05.22.png?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;The &lt;a href="http://www.slideshare.net/NellShamrell/estimates-that-dont-suck"&gt;full slides from Nell&amp;rsquo;s talk&lt;/a&gt; have even more.  That 44 points Nell gets for the user story are multiplied by some factor, and that gives a 66.  Which using a scale introduced earlier:&lt;/p&gt;

&lt;p&gt;&lt;img alt="points in days" src="https://www.dropbox.com/s/104oec3yghsk1im/Screenshot%202016-10-14%2010.07.14.png?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;Implying that this feature would take about 8 days.  I asked Nell whether there was a danger in over specifying the implementation of the feature here, and she said that that was a possibility and that many teams just stayed at the user story level.   I was interested in this lower level estimating process, and I could imagine how if you had a really serious pressure to deliver, that this would be a very useful process.  In our pro-bono AgileVentures charity projects things take as long as they take, and the process of estimating is more about giving new developers a coherent idea of how long something might take, rather than giving higher ups information to make key business decisions; although we do need to do some of that as well.&lt;/p&gt;

&lt;p&gt;I was probably too chatty in the limited time for chat after Nell&amp;rsquo;s talk.  There was one other question from an audience member, and Charles mentioned an app for voting on estimates.  I was hoping to get more info on that since we&amp;rsquo;re starting an AgileVentures project to build a tool for that.  The overall online conference format was fairly cool, but it was a shame to lose the chat history when each chat session shut down.  I would prefer a Slack instance for the conference where you could have a chat room for each talk that was persistent, and also some general hang-out rooms where people could continue conversations they had started in talk chats etc.&lt;/p&gt;

&lt;p&gt;I wonder if we should do an AgileVentures conference at some point, and use our existing Slack instance to support the chat.  We&amp;rsquo;ve got all the infrastructure we need with our AV events and hangouts system &amp;hellip; would be great to get the project maintainers to each present on their projects, and get one or two devs to each also present on some of the work they&amp;rsquo;ve been doing on the project.  I&amp;rsquo;m always worried about meetings and conferences taking time away from coding, but maybe some sort of online conference is what we need for people to understand what we&amp;rsquo;re all doing at AgileVentures?  I was also just listening to a podcast about Gitlab, which has 100&amp;rsquo;s of purely remote employees, and how they have specific coffee-break, friendly chat hangouts.  Maybe AgileVentures needs more of these social get together things &amp;hellip;?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Agile Pricing Plans</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/13/agile-pricing-plans/"/>
    <id>http://blog.url.com/2016/10/13/agile-pricing-plans/</id>
    <published>2016-10-13T01:00:00+01:00</published>
    <updated>2016-10-13T20:41:01+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Continuing with my non-pairing streak, I got a fair few things sorted today.  A highlight being prototyping the new pricing plans for AgileVentures.  The current draft looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;£10/month: Premium - private slack group, RubyMine license, eligibility for paid and priority projects&lt;/li&gt;
&lt;li&gt;£25/month: Premium 121 - private text chat with mentor, 10 year professional development plan&lt;/li&gt;
&lt;li&gt;£50/month: Premium F2F - face to face hangouts with mentor, voting rights in charity meetings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In creating the draft, I appeared to fall foul of the difference between ActiveRecord &lt;code&gt;dup&lt;/code&gt; and &lt;code&gt;clone&lt;/code&gt;.  I was taking the existing pricing static page and copying it for tweaks to the new approach, but I used &lt;code&gt;clone&lt;/code&gt; instead of &lt;code&gt;dup&lt;/code&gt; and so ended up over-writing the existing plan, doh!  Fortunately we have versioning via the papertrail gem so I pulled out the old version and then used &lt;code&gt;dup&lt;/code&gt; to create a version without an id, and save it into place. Phew!&lt;/p&gt;

&lt;p&gt;I shared the new plan draft with some of the core team.  On reflection, perhaps I should have been following Scott Klemmer&amp;rsquo;s advice to always share multiple prototypes, but anyway, I&amp;rsquo;m getting great feedback from Federico about page layout to try and highlight the three-way choice, and from Thomas about a mob programming plan.  I guess an alternate could be something like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;£10/month: Premium - private slack group, RubyMine license, eligibility for paid and priority projects&lt;/li&gt;
&lt;li&gt;£25/month: Premium Mob - mob programming with mentor, 10 year professional development plan&lt;/li&gt;
&lt;li&gt;£50/month: Premium F2F - face to face hangouts with mentor, voting rights in charity meetings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and mob programming is fun.  Different mentors are likely to have different preferences about whether they want to give 121 text support or hosting mob programming sessions, or 121 pairing hangouts.  Much as I love mobbing and pairing, my intuition from the last 5 years of doing online education is that the majority of people seem to really prefer 121 communication.  Once you can get people bitten by the mobbing or pairing bug, then sure they can convert, but that&amp;rsquo;s potentially a slow uphill process.&lt;/p&gt;

&lt;p&gt;We could be throwing in all these options with even more types of plans, but the prevailing wisdom seems to be to have fewer plans to make the decision process easier.  I&amp;rsquo;m certainly not thinking of imposing 121 support on any of the AV mentors; I just seem to be under near constant pressure from MOOC students to give 121 support, so if I can offer them a plan where I do give them 121 support then that makes my life a lot easier and I&amp;rsquo;m giving people what they are asking for.  I haven&amp;rsquo;t yet heard from any learners that they want mob programming.  Now maybe what they &lt;em&gt;need&lt;/em&gt; is mob programming and pair programming.  It&amp;rsquo;s this funny divide between listening to your users and them asking for a &amp;ldquo;faster horse&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I always thought we&amp;rsquo;d have more people taking up the free pair programming that AgileVentures tries to support.  Some did, but it never got to the critical mass I imagined.  My current working hypothesis is that it is just too intimidating for many people.  It would never occur to me online to conceal my name, or my face, or that I would be put off from attending a google hangout on air because of the message that pops up that says other people can see this broadcast, but over the last few years I&amp;rsquo;ve encountered that a great deal.&lt;/p&gt;

&lt;p&gt;Now we can say: &amp;ldquo;Be strong! If you push through that fear you&amp;rsquo;ll discover a brave new world of learning!&amp;rdquo;.  And I really believe that&amp;rsquo;s true, but I think you can only get so far exhorting people to overcome their fears.  In my mind if you have 100 people, there will be five who are happy to say almost anything in front of the group.  You can probably get those five to do almost anything.  They may also do inappropriate things that causes the group to disperse, so watch out for that.  Of the remaining people, if you&amp;rsquo;re charismatic and articulate you can probably get another five to join in a public learning process through convincing them that it is a great thing.&lt;/p&gt;

&lt;p&gt;However that leaves the remaining 90 people.  There are some who are never going to participate in public learning.  However I&amp;rsquo;d guess there are about 40 who if you are willing to connect to them individually, hear about their fears and needs in a safe space, that you can help them build up to the point that they stop being held back by a fear of failure, particularly public failure.&lt;/p&gt;

&lt;p&gt;Now everyone will probably put different numbers on these different types of people (that I&amp;rsquo;ve just made up).  I&amp;rsquo;m going with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Happy to learn and fail in public 5%&lt;/li&gt;
&lt;li&gt;Can be convinced by general arguments 5%&lt;/li&gt;
&lt;li&gt;Can be convinced by personal support 40%&lt;/li&gt;
&lt;li&gt;Not ready to learn in public 50%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be great to find some experimental studies to work out real values for these numbers, or even conduct some, although I think my days of doing purely scientific work are over :-)  Counter-arguments might come from saying that well, you think that giving that 121 support is going to help you bring 40% of folks to a place where they are participating at a new level, but actually that&amp;rsquo;s just one or two people and what you&amp;rsquo;ll end up doing is a lot of individual hand holding for not much gain.&lt;/p&gt;

&lt;p&gt;Maybe so, I have no omniscient power.  However my intuition says that sustainability will be hard if we&amp;rsquo;re relying on only those few willing to take the plunge for learning in crowd format.  Besides I love connecting with people individually on a 121 basis.  I love hearing about what&amp;rsquo;s going on for them and throwing my cognitive resources at trying to hook them up with resources, people and activities that will help them achieve their goals.&lt;/p&gt;

&lt;p&gt;What I can&amp;rsquo;t do, if I want to feed my kids, is spend all my time giving 121 support for free.  It even takes up time just saying no politely to all the people asking for 121 support.  Anyway, brain dump!  The tricky thing now, compared to when I first created the pricing page, is that we have other plans like the &amp;ldquo;premium plan&amp;rdquo; melded into the software of the AgileVentures site, so rolling out a new pricing plan will require coordination with some PRs, which is not as lightweight as I would like. Hence the creation of the beta pricing page, blogging about this, and so forth.  One thing that feels really great though is that we really are living the Agile process, and big thanks to Stripe for making it straightforward to take credit card payments.  Creating the new plans on the Stripe dashboard will be trivial, and the complexity of rolling them out to our users will be what we make it to be.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Non Pairing Day</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/12/non-pairing-day/"/>
    <id>http://blog.url.com/2016/10/12/non-pairing-day/</id>
    <published>2016-10-12T01:00:00+01:00</published>
    <updated>2016-10-12T20:32:03+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So another day on non-pairing while me knee heals.  Managed to crunch through what feels like two or three async votes on LocalSupport and WebSiteOne.  That&amp;rsquo;s starting to flow nicely, although I would love to get the AsyncVoter project up and running so I don&amp;rsquo;t have to manage the logistics for the voting.  Main hangover business from yesterday was getting some example code up related to SEO with meta-tags on LocalSupport.  A CraftAcademy bootcamp graduate had put in a great pull request, and after I&amp;rsquo;d dithered about how to give feedback, we&amp;rsquo;d agree I&amp;rsquo;d push up a separate branch.  In the meantime, I was passing along Pat Bolger&amp;rsquo;s fantastic advice about having all team members review PRs to the LocalSupport and WebSiteOne projects, and while I&amp;rsquo;d dithered, Raoul and John had both given feedback on the graduate&amp;rsquo;s PR covering several of the points that I&amp;rsquo;d been thinking of.&lt;/p&gt;

&lt;p&gt;There was still some refactoring work that wasn&amp;rsquo;t covered, and I thought it was still easier to show rather than to explain, so I pulled some of the controller logic into &lt;code&gt;before_filter&lt;/code&gt;s and pushed that up.  I also refocused the cucumber story and fixed some of the issues Jon and Raoul had raised.   What was super-awesome was to see John and Raoul interacting in the PR like so:&lt;/p&gt;

&lt;p&gt;&lt;img alt="raoul answering jon's question" src="https://www.dropbox.com/s/029rqql7qrb5fdn/Screenshot%202016-10-11%2010.38.27.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;In my book this is the total antidote to the developer who&amp;rsquo;s intimidated to submit PRs for fear of having someone criticise their code.  Here, Jon, one of our more experienced developers is perfectly comfortable just asking what &amp;lsquo;og&amp;rsquo; means?  And Raoul, another experienced developer is supplying the answer. No shame, no embarrassment, just learning; and all this in the pull request of a recent bootcamp graduate.  Huge credit all round.&lt;/p&gt;

&lt;p&gt;Part of the reason I had wanted to play with my own branch was to look at the app holistically outside of the GitHub view of the pull request.  Having tweaked a little (you can see my &lt;a href="https://github.com/AgileVentures/LocalSupport/pull/371"&gt;branch here&lt;/a&gt;), I saw that while the new code was allowing our individual organisation show pages to have a more specific (and search-engine friendly) title, the changes were also removing some of the default meta-tags from the rest of the site.  After the &amp;ldquo;Martin Fowler&amp;rdquo; scrum, where I was pleased to introduce Kenyan Bootcamp founder Sigu to MetPlus project coordinator Pat, I did a quick hangout with the bootcamp graduate.  Not required, but I sensed that between John, Raoul and myself, we were at risk of overloading our new team member.  Having a hangout might have made that worse, but I went for it.&lt;/p&gt;

&lt;p&gt;I was pleased that I did.  I think we were able to reach a good shared understanding, and find that yes, the new code was removing some functionality from the existing system, but, shock, there weren&amp;rsquo;t any tests in our existing codebase for the meta-tag stuff that was removed.  We talked about how some default methods in the ApplicationController could fix this, but also how that was maybe sensibly the subject of another pull request.  It would be easy to be strict here and say, &amp;ldquo;hey, you need to not remove any functionality in this PR&amp;rdquo;; but if that functionality doesn&amp;rsquo;t have tests, then that&amp;rsquo;s not really in the remit of the person submitting the PR, particularly if they are a volunteer.  Far better to get the current PR fixed up and pulled in and create refactoring tickets for the other tasks, which allows the original submitter to get a sense of completion, keep the team in the loop by voting on those other tickets, and allow someone else to jump in and help with tickets, or the original submitter to carry on if they want - great flexibility.&lt;/p&gt;

&lt;p&gt;This all fed into a dry run of my Rails Remote conference talk on learning through pull requests, which I was really pleased to get done and share with the AV premium members and get feedback.  The key question seems to be how can I get myself to talk slower without a teleprompter? :-)  And that was pretty much the day. I reviewed other PRs, had little chats in Slack, posted to the MOOC TAs to say that the next week&amp;rsquo;s material was ready for review.  Really not sure what to do with the AV102 course and the MOOC support infrastructure there when we go self-paced next year &amp;hellip;&lt;/p&gt;

&lt;p&gt;One other thing that I did do as part of an async vote on a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1319"&gt;story&lt;/a&gt; about coordinating our events with Meetup.com.  I&amp;rsquo;m an admin on the RemotePairProgramming group there, which keeps getting new sign ups but has been kind of dormant recently.  Actually as part of the discussion of that ticket I went ahead and created a parallel repeating event on Meetup to mirror the &amp;ldquo;Kent Beck&amp;rdquo; scrum, and several people signed up and we had one new person join the scrum and tell us about the Elm and OCaml stuff they were doing.  That was really cool, particularly since I was able to do another pair hookup and new premium member, Sasha, and Elm/OCaml dude, Junior, chatted Elm and AgileVentures for an hour or so off the back of the scrum.&lt;/p&gt;

&lt;p&gt;I just love manual prototyping!  Coding and automating is great, but it&amp;rsquo;s so lovely to validate that the thing you&amp;rsquo;re about to automate (async voting, event syncing with another system) will actually reap some dividends.  So it was a non-pairing day for me, but I loved helping bring some others together, even if only for a chat :-)  &lt;/p&gt;

&lt;p&gt;Related Videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BLM8cmLBkWc"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/S-zJT6rp-Xo"&gt;LocalSupport PR review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SfMb5n6Xsrs"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Three Day Week</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/11/three-day-week/"/>
    <id>http://blog.url.com/2016/10/11/three-day-week/</id>
    <published>2016-10-11T01:00:00+01:00</published>
    <updated>2016-10-12T09:46:54+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Had dinner with a couple of friends recently and one of them was telling us about how he&amp;rsquo;d managed to switch to a three day week. Largely through being a freelancer working on lucrative Clojure jobs.  It sounded pretty damn awesome.  Ironically, here I am doing a solid five day week for negative income.  My friend is pretty skilled in Ruby on Rails, but he really wanted to do more data science, and so learned Clojure and hasn&amp;rsquo;t looked back.  It&amp;rsquo;s funny because I have a machine learning background and there&amp;rsquo;s been times where I&amp;rsquo;ve been totally absorbed by data-analysis, but at the moment I just love Ruby (and JavaScript) and I love building things that you can interact with in real time, and potentially solve immediate logistical problems for an organisation.&lt;/p&gt;

&lt;p&gt;Of course data science can be really interactive, and can solve even bigger issues for businesses, charities and everyday folks; but it tends to be light on the user experience side, although even then, my friend was telling me about how one group he was working with was using big data to work out how to insert the point at which a web system suggested the user upgrade to premium.  If that&amp;rsquo;s not relevant to the day to day of AgileVentures then I don&amp;rsquo;t know what is :-) I guess the difference is whether you&amp;rsquo;re doing that, and just that, for some other group running a for-profit closed-source system; or, like me, you&amp;rsquo;re also trying to do all the devops on a non-profit, open-sourced system like AgileVentures.  Michael and I both look forward to being able to do further analysis on the pairing data and other streams coming out of AgileVentures, but there&amp;rsquo;s a lot of manual coding that gets in the way.&lt;/p&gt;

&lt;p&gt;This week we&amp;rsquo;re taking a break from pairing.  My knee is pretty painful, and there&amp;rsquo;s an admin backlog and this rails remote conference talk to give.  What did I do in my day without pairing?  I created two SPOCs (Small Private Online Classes) i.e. clones of the &amp;ldquo;Agile Development using Ruby on Rails&amp;rdquo; MOOC for instructors in the US and Brazil.  I had the &amp;ldquo;eliminate, simplify, delegate, automate&amp;rdquo; phrase going round in my head.  I knew that there was an element that I could automate that would involve manipulating some XML archives.  I didn&amp;rsquo;t feel like getting into it. Is that a good metric? Or sloppy thinking?  I err&amp;rsquo;d on the side that if I wasn&amp;rsquo;t feeling enthusiastic about XML manipulation then I probably wouldn&amp;rsquo;t do a good job, and it was connected to a bigger task about MOOC merging that I would need to do in January, so I&amp;rsquo;d probably be more enthusiastic about it then.  Besides, no one apart from me would get excited about that automation now, so I pushed on.  It was two MOOCs.  It took a minute to do the manual updates.  I did update the code though, so that the URL of the course was spat out correctly - that&amp;rsquo;ll save me a few minutes over the next few months.&lt;/p&gt;

&lt;p&gt;I pushed on, got the materials from the Mentive class pushed up onto my github:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https://github.com/tansaku/learner_dictionary&lt;/li&gt;
&lt;li&gt;https://github.com/tansaku/learner&lt;em&gt;dictionary&lt;/em&gt;rails&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Doing that I found that I could use &lt;code&gt;hub create&lt;/code&gt; from the command line to create the new repos without having to go to the GitHub Web UI - that&amp;rsquo;ll save me a few minutes over the next year, although to make it work I had to burn some time re-authenticating with GitHub locally.  I also reviewed slack, email, commented on various tickets in pivotal tracker and GitHub raised by my premium AV members.  I iterated on a couple of asynchronous votes and was pleased to see more movement on the websiteone tickets now that we onboarded a couple of new premium members to that project.&lt;/p&gt;

&lt;p&gt;I dithered over a PR on LocalSupport - should I push in some changes directly?  Should I list out all the changes I might make?  Would that be too aggressive and burdensome for the new bootcamp graduate who was submitting the PR?  I asked and got the answer later in the day that I should make the changes myself - will try to do that today.  I also realised I needed to update Heroku authentication for Travis on LocalSupport, but I knew I was putting off working on the talk I&amp;rsquo;m giving for Rails Remote conference.  There&amp;rsquo;s always station keeping for projects, but this talk on learning via pull-requests needed to be prepared early so I could practice and get feedback.  I went through the slides, tried to improve them and shared them with our premium group, getting some great feedback from Pat.&lt;/p&gt;

&lt;p&gt;I was into the time that I might usually be pairing with Michael.  I took a breather after the slides, and greeted new folks in our #general channel, replied to some emails, and then got down to trying to fix our LocalSupport automated deploys to Heroku.  I had worked out previously that we probably needed to update the auth token in Travis.  I had to install the Travis gem in LocalSupport in order to regenerate the token, but then the install failed in Travis CI itself.  I ended up breaking through by removing the Travis gem and just checking in the authentication change.  Travis gem in a project breaks Travis?  Kind of meta :-)&lt;/p&gt;

&lt;p&gt;I thought a similar issue might be affecting our automated PR deploys on WebSiteOne AND LocalSupport, but for some reason the automated deploys on LocalSupport were switched off.   They were on, on WSO, but not happening.  I kicked some off manually, and switched them on, on LocalSupport.  The Heroku PR automated deploy is way cool, but temperamental. To be fair, due to Heroku&amp;rsquo;s ninja charging changes recently, we&amp;rsquo;ve been switching accounts and that may have reset some confif.&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t get down to any serious coding, but did manage to get through a set of important devops stuff.  I ran the &amp;ldquo;Kent Beck&amp;rdquo; scrum and was really pleased to catch up with Sigu, who&amp;rsquo;s running a coding bootcamp in Kenya.  He tells me that the students pay $60 for the 3 month course on Ruby and Rails.  He&amp;rsquo;s planning a meetup for all his students&amp;ndash;past, present and future&amp;ndash;and hoping to run through some basic ruby stuff, 3rd party APIs etc., and he asked if I would make an intro video for him, which I totally will.  It&amp;rsquo;s staggering to think that people pay $10000+ or so for coding bootcamps in the US and Europe.&lt;/p&gt;

&lt;p&gt;So I think I managed to create a few minor efficiencies that will save me time over the coming months, but I don&amp;rsquo;t suspect I&amp;rsquo;ll get down to a three-day week any time soon.  Particularly when there are initiatives like Sigu&amp;rsquo;s to support in Kenya.  Students there are the ones that AgileVentures&amp;rsquo; fellowship program could really help.  I&amp;rsquo;d love to give all those Kenyan students AgileVentures premium support, like we do for CraftAcademy students from Sweden.  I really need to build out our fellowship materials and payment framework.  Sod the three-day week, there&amp;rsquo;s a world to change here!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>MultiDimensional Learning Economics</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/10/multidimensional-learning-economics/"/>
    <id>http://blog.url.com/2016/10/10/multidimensional-learning-economics/</id>
    <published>2016-10-10T01:00:00+01:00</published>
    <updated>2016-10-12T14:42:07+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This weekend I ran my first Mentive class.  Mentive is an educational startup that provides tutoring for a number of different Massively Open Online Courses (MOOCs), including our “Agile Development using Ruby on Rails”.  We’re currently running the part 2 or “advanced” course that corresponds to the second half of the UCBerkeley Software Engineering class.  It’s my first time trying out the Mentive system which uses GotoMeeting rather than Hangouts.  Myself and John Rofrano are leading tutorial sessions through Mentive on this run.  We’ve both got a couple of students signed up.  I think the numbers might be down for a couple of reasons; one, we removed all the deadlines on the “advanced” course as part of a move towards taking the classes completely self-paced next year.  That probably reduces the sense of urgency as regards sign up.  Also, I hear that Mentive increased their prices, and they may have tipped a limit that we’re also seeing with AgileVentures PremiumPlus.  I’ve had conversations with a few people that the £100 a month price tag on PremiumPlus is beyond their means.  Tweaking those prices and offerings are ultimately what makes all the difference perhaps.&lt;/p&gt;

&lt;p&gt;So anyway, I usually have a rule of not doing any work on the weekends, but I had agreed to take a class on Saturday evenings, since weekday evenings are challenging for me due to early starts to support the daily school run.  Also I’m keen to support Mentive, understand their platform, and furthermore I need to bring in some cash while AgileVentures works its way out of the red.  So I’m running my Mentive class at 8:30pm UTC on Saturday evenings, which makes it practical for anyone from UTC-7 to UTC+2 to attend, which encompasses most of the Americas, Europe and Africa.  I just had one student on this first instance, and so they got a focused one to one session.  We talked about how they had found the previous course, and what they were hoping to get out of this advanced course.  They shared that RSpec had been challenging and I reflected that they weren’t alone.  The common refrain from the different instructors using the MOOC materials around the world was that people tended to get Cucumber, but struggled with RSpec.  So in the session we worked through driving the creation of a small domain model of plain old Ruby objects via RSpec tests, and then did the same for a small Rails app that would use that domain model, driving the creation of an API with RSpecRails tests.  My student seemed pretty pleased with that, and I’m looking forward to developing that further in future sessions.&lt;/p&gt;

&lt;p&gt;Mentive classes are intended to support up to 20 students, and it would be interesting to see if the same guided app creation technique would work with a larger class, keep them engaged and so forth.  Doing it with a single student is not so far removed from what we do in PremiumPlus pairing sessions.  On Saturday my student was on a tablet, and so couldn’t easily type code, but I set up pairing intervention elements by stopping at points and asking my student what they thought I should do next, and that seemed to work well.  Obviously since it was only a single student I was able to tailor what we did and the pace directly to their preference.  Something that’s much more difficult to do with a larger group.&lt;/p&gt;

&lt;p&gt;The big difference between Mentive sessions and AgileVentures Premium/PremiumPlus, is that everything AgileVentures is OpenSource and &amp;ldquo;in context&amp;rdquo;.  All the coding work done with AgileVentures is on a real open source code base, has some relation to the need of a real charity customer or user base.  Of course some learners would much rather work on a more tightly constrained problem or exercise.  Hence the profusion of study tools like CodeWars, CodeCademy, HackerRank and so forth.  Even the majority of the ADuRoR course uses a toy application, although I really do love the legacy assignments which take an older version of the oldest OpenSource RoR project &amp;ldquo;publify&amp;rdquo; (when it was called typo), and sets the students to do bugfixes and add features fully in context of a working legacy app.  I think that&amp;rsquo;s an inspired choice on the part of Armando Fox, Dave Patterson and the Berkeley TAs who worked on the assignment with them.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s working on that assignment myself several years ago that made me want to do &lt;em&gt;all&lt;/em&gt; my learning in context.  It&amp;rsquo;s why I wanted AgileVentures to exist, a place that could help you do all your learning in context, and contribute to the greater good at the same time.  Of course systems like GitHub, BitBucket and SourceForge already provide a huge vista of OpenSource projects for ongoing learning, but a learner is often thankful for a pathway through the complexity.&lt;/p&gt;

&lt;p&gt;Now AgileVentures doesn&amp;rsquo;t provide as much of a pathway as FreeCodeCamp or CodeCademy or even CodeWars, and all of these still have some beautifully unstructured portions.  We&amp;rsquo;re still working on getting the balance right at AgileVentures, and also the economic model to make it sustainable.  It seems like both CodeWars and CodeCademy are leaning towards being solutions to help employers find job candidates, and FreeCodeCamp is operating as free forever for all non-profits and developers, while charging companies a hiring fee when FCC developers are placed (like many bootcamps).&lt;/p&gt;

&lt;p&gt;AgileVentures at the moment is closer to edX and Mentive in that individual learners are paying for additional services.  Actually AgileVentures is a charity so you could also look at it that every premium member is a sponsor who&amp;rsquo;s getting benefits KickStarter or Patreon style.  This is where the multidimensional economics of learning comes in.  What are people willing to contribute for what kind of perk or service?  We&amp;rsquo;ve had very few sign ups for PremiumPlus, but people are happy to pay a lot more money for a bootcamp, and many people pay similar amounts for MOOC course certificates.  &lt;/p&gt;

&lt;p&gt;There seems to be a prevaling view that taking courses equals education.  I guess I&amp;rsquo;m drinking my own kool-aid here, but I feel like learning comes from doing.  More and more courses are hands on these days, but I&amp;rsquo;m skeptical of the learning benefits of watching lots of lectures, or even toy &amp;ldquo;exercises&amp;rdquo;.  I guess it&amp;rsquo;s a relatively low impact way of floating your brain in some of the domain concepts.  Not everyone wants to become an expert in a particular field.  However if you&amp;rsquo;re in a rush to skill up and you can take the emotional pain of making lots of mistakes (really valuable for learning), then I think diving in to a real project is the way to go.&lt;/p&gt;

&lt;p&gt;AgileVentures tries to create a safe space to fail on an open source project with a real customer.  I don&amp;rsquo;t know how we can convey that more strongly.  What I&amp;rsquo;ve learnt from all the different educational environments I&amp;rsquo;ve taught in (university, MOOC, bootcamp) is that almost everyone hates failure, and that many of us would much rather spend a lot of time watching videos and reading rather than holding our feet to the learning fire.&lt;/p&gt;

&lt;p&gt;It was holding my feet to the learning fire that got me my AstroPhysics degree.  It was so tempting to keep reading and re-summarizing my notes.  It wasn&amp;rsquo;t until I forced myself to repeatedly answer old exam questions that I got my exam technique down and got the first class degree that got me on to higher education.  Not that I was ever really satisified with myself during my first masters and PhD.  It still felt trivial and isolated from the rest of the world.  Part of the problem was that I was studying in the dark ages before search engines like Google connected learners with the rest of the world.&lt;/p&gt;

&lt;p&gt;So anyhow, I&amp;rsquo;m thinking we need a new Premium tier for AgileVentures.  What I notice (and I&amp;rsquo;ve blogged about before) is how so many people prefer to ask me questions 121 rather than in group chat; and it takes a lot of persuasion before people will post publicly, and it&amp;rsquo;s rare that it becomes their default.  Some individuals will keep on asking for one to one help, even though there&amp;rsquo;s no financial incentive for me to help them.  I don&amp;rsquo;t want to come across as mercenary, but I&amp;rsquo;ve put in thousands of volunteer hours and a lot of my own savings to supporting learning online.  I&amp;rsquo;ve got to put up some toll booths to feed my kids.&lt;/p&gt;

&lt;p&gt;I guess some people are used to coming from a state education system where they can get 121 support from their instructors if they press hard enough.  I wonder if people realise that the time I spend answering their 121 question takes up time that I could be using to earn money to feed my kids?  And my three boys eat like horses! :-)  Maybe they realise and don&amp;rsquo;t care?  Maybe they&amp;rsquo;re just not thinking about it; they&amp;rsquo;re just focused on their own question, trying to solve their own problem.&lt;/p&gt;

&lt;p&gt;I want to get learners comfortable about asking in public so that others can benefit.  If they ask in group chat on AgileVentures it increases the activity in the community, and the community value keeps people around, and the rising tide lifts all the boats.  I could devote all my time to answering 121 questions, and I might get a few thanks from people, and I might learn a few things, but it&amp;rsquo;s not enough to feed my kids.  It makes me think that the new AgileVentures premium tier should be called &amp;ldquo;121&amp;rdquo;, cost about £25 a month, and get you an assigned mentor who can answer your questions on 121 chat.  And maybe a £50 a month version called Premium on Air that gets you an hour of hangout time.  We&amp;rsquo;ll have to work out the details.  We need to avoid changing and tweaking too much or we confuse people, muddy the water.  The problem really is in the complex space of &amp;ldquo;multidimensional economics of learning&amp;rdquo; &amp;hellip; &lt;/p&gt;
</content>
  </entry>
</feed>
