<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-10-02T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>The pilot+copilot organizational pattern</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/"/>
    <id>http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/</id>
    <published>2017-10-02T01:00:00+01:00</published>
    <updated>2017-10-04T21:52:30+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="pair flying" src="/images/pairflying.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;In 2002, I graduated a distance-learning masters in applied mathematics. Every month, the university mailed me an A4 enveloppe containing the course support. I was supposed to learn from the course material and returned the completed assignments within a month. A month later, I would receive an answer key.Â Should I have a question, I could mail it to the professor and wait for his reply. The whole process was cumbersome. I was often behind schedule. Interactivity was near to zero. &lt;/p&gt;

&lt;p&gt;Later on, I participated in the MOOC endeavour. The video of the instructor gave a feeling of a one-to-one training session. Discussion forums, deadlines, follow-up mails, peer-reviews grounded the learning process. There were meetups too. And a MOOC about Agile Development using Ruby On Rails offered remote pair-programming sessions between participants. &lt;/p&gt;

&lt;p&gt;Pair-programmming reuses the rather old organizational pattern of pilot+copilot : double-check, higher focusing, external view, and stronger engagement. You may object that programming is very different from flying. Yes, it is! &lt;/p&gt;

&lt;p&gt;But programming requires a strong level of accuracy too. Your pairing fellow is both a watch dog that tells you not to call a library without checking how it works, not to cut and paste code across your work, and an inspiration to experiment with new ways of coding. As some aerobatic aircrafts don&amp;rsquo;t include a copilot seat, some programs are implemented by lone wolves in the wild.&lt;/p&gt;

&lt;p&gt;Tools like teamviewer, logmein, skype, hangout or joinme have been instrumental to the success of remote pair working. There is still room for improvement:&lt;/p&gt;

&lt;p&gt;1) In a face-to-face meeting, there is a desk between the two interlocutors. Webcams should recreate this confortable spacing. I&amp;rsquo;m neither a barber nor a dental professional!
2) Remote working platforms lack of interoperability. Some only run on Windows, some require to install a software, others are more suitable for mobile use&amp;hellip; and don&amp;rsquo;t try to connect to hangout with skype
3) Security is a weak point for all of these platforms. Choosing which window you share, which you don&amp;rsquo;t, masking your passwords or your personal information are not intuitive. In my earlier days, I remembered displaying my passwords on a recorded session. Not so good a security practice!
4) Optimizing the screen definition so that everybody can watch comfortably is not supported either.&lt;/p&gt;

&lt;p&gt;Every desktop application from IDE to word processors will probably include some kind of remote pair working feature sooner or later. C9 already includes some simple pair-programming features, for instance.  &lt;/p&gt;

&lt;p&gt;Bugs in the code? Don&amp;rsquo;t blame me, it&amp;rsquo;s my pair programming partner who fooled around!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Another free refill?</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/22/another-free-refill/"/>
    <id>http://blog.url.com/2017/09/22/another-free-refill/</id>
    <published>2017-09-22T01:00:00+01:00</published>
    <updated>2017-09-27T21:07:18+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="free refill" src="/images/freerefill.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Earlier this year, I undertook a training session targeting small business manager to teach them how to improve profitability of business projects. The course instructor showed us a rather clear way to deal with profitabiliy. First, you estimate your break-even hourly rate, based on your history. Then, you don&amp;rsquo;t sell any project under the bottom line. After that, you prioritize your work to put the highest priority on the most profitable projects. Finally, you keep any accepted project above the bottom line. &lt;/p&gt;

&lt;p&gt;The idea is quite simple. It&amp;rsquo;s all down to the execution. I began to schedule my workday according to business priorities preferably to a sense of urgency that overcame me before. Then, everytime I felt I was at risk to hit the bottom line, I shifted my attention towards what I really sold to the client annd I reduced my objectives accordingly. Finally, I was trying to become a project reviewer for a well known MOOC platform. But the hourly rate was much too low. I felt relief to drop my candidature. Paid projects management improved greatly. But, a significant part of my workday, dedicated to volunteer projects, was out of the scope of this effort.  &lt;/p&gt;

&lt;p&gt;Too many commitments, workaholism, things we begin and we never achieve, any freelance worker faces these contradictions. The inherent contradiction is even stronger when you work on non-paid project. How to prioritize your volunteer works?&lt;/p&gt;

&lt;p&gt;Ten working hours a day is my upper limit, considering that I&amp;rsquo;m not a computer nerd, I&amp;rsquo;ve got a family, hobbies, and a social life &amp;hellip; I was already busy ten hours a day. Adding anything to my schedule implied removing something else. I have been more or less active on professional social networks for three years. I first thought this commitment would improve my reputation and fuel my prospect pipeline. But in three years, the return was not very encouraging. I felt that my social network activity was fueled by bitterness or anxiety or ego or the three rather than by a clear sense of business opportunity! I decided to forget social networks. Two to three hours a week were freed thanks to this good resolution.&lt;/p&gt;

&lt;p&gt;I chose to devote these hours to Agile Venture mob programming sessions. It&amp;rsquo;s a real community, with real developers. You can both learn by observing how skilled developers work and by doing things by yourself. &lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still in the midstream of my prioritization effort. I&amp;rsquo;ve been very actively participating in MOOCs for five years. My skills greatly improved as a result of this effort.  But choosing which courses to invest on is not easy. Knowledge is a bit like indirects costs. You don&amp;rsquo;t really know how to assign it to your achievements. During the first years, the offer flourished. I tried many courses, from Economy to Computer Sciences. I progressively focused on Computer Science and left courses as they switched to paid offers. &lt;/p&gt;

&lt;p&gt;As I was giving up, a prominent MOOC platform offers me to beta-test courses for free. Free refill is the end of resolution and the beginning of passive hyperactivity! You may begin your training week with a course on Embedded systems and end, on friday, with a course on PythonML on friday, without completing any. Does it make sense to participate in a mob programming session about RSPEC on monday, another one about phoenix on wednesday, on the last one about React on friday, when you only need to develop a small web app with React?&lt;/p&gt;

&lt;p&gt;AgileVenture Premium Mob includes some kind of Professional Development Planning Support. I may ask the team to help me clean my training plan. But I&amp;rsquo;m still afraid they will tell me to stop learning Tensor Flow or the nitty gritty of Intel Parallel Architecture if I don&amp;rsquo;t have any prospect to work in these fields in the next year! &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Athletic Reps</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/06/av-ecosystem-review-athletic-reps/"/>
    <id>http://blog.url.com/2017/09/06/av-ecosystem-review-athletic-reps/</id>
    <published>2017-09-06T01:00:00+01:00</published>
    <updated>2017-11-02T20:34:41+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="meeting" src="/images/reps.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;ve managed to get to the blog-face a little earlier today despite Slack/Twitter/Email distractions, but I&amp;rsquo;m going to stick to the adding tests flow that I started yesterday as a way of getting some athletic reps in on node testing.  That said, we&amp;rsquo;ve got a fairly serious bleed on our emails getting marked as spam that may prevent me from spending much more time on code in these sessions.  Can I afford a 15 minute rep on node tests every morning for the next two weeks?  So many regular station keeping activities that the days are packed!&lt;/p&gt;

&lt;p&gt;Anyhow, so at least from yesterday we have some tests in the &lt;code&gt;greeter_bot&lt;/code&gt; project.  Let&amp;rsquo;s get to the &lt;code&gt;project_greeter_bot&lt;/code&gt; project.  Where would I start?  Grab the issue id for creating tests from the project itself, that&amp;rsquo;s &lt;a href="https://github.com/AgileVentures/project_greeter_bot/issues/5"&gt;https://github.com/AgileVentures/project&lt;em&gt;greeter&lt;/em&gt;bot/issues/5&lt;/a&gt; - funny how it feels like breaking the ice on something in order to push through the little &amp;ldquo;I&amp;rsquo;m not sure where to start&amp;rdquo; feeling.  Bring up the terminal in the right directory.  No outstanding pull requests on the project, pull the latest code from master:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â git pull origin master
remote: Counting objects: 1, &lt;span class="k"&gt;done&lt;/span&gt;.
remote: Total 1 &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;, reused 1 &lt;span class="o"&gt;(&lt;/span&gt;delta 0&lt;span class="o"&gt;)&lt;/span&gt;, pack-reused 0
Unpacking objects: 100% &lt;span class="o"&gt;(&lt;/span&gt;1/1&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="k"&gt;done&lt;/span&gt;.
From https://github.com/AgileVentures/project_greeter_bot
 &lt;span class="k"&gt;*&lt;/span&gt; branch            master     -&amp;gt; FETCH_HEAD
   bc396db..46944ce  master     -&amp;gt; origin/master
Updating bc396db..46944ce
Fast-forward
 server.js | 14 +++++++-------
 1 file changed, 7 insertions&lt;span class="o"&gt;(&lt;/span&gt;+&lt;span class="o"&gt;)&lt;/span&gt;, 7 deletions&lt;span class="o"&gt;(&lt;/span&gt;-&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create a branch for the new tests&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;â git checkout -b 5_add_tests
Switched to a new branch &lt;span class="s1"&gt;'5_add_tests'&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;install mocha&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â npm install mocha --save-dev
project_greeter_bot@0.0.0 /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
âââ¬ mocha@3.5.0 
  âââ browser-stdout@1.3.0 
  âââ¬ commander@2.9.0 
  â âââ graceful-readlink@1.0.1 
  âââ debug@2.6.8 
  âââ diff@3.2.0 
  âââ¬ glob@7.1.1 
  â âââ fs.realpath@1.0.0 
  â âââ¬ inflight@1.0.6 
  â â âââ wrappy@1.0.2 
  â âââ¬ minimatch@3.0.4 
  â â âââ¬ brace-expansion@1.1.8 
  â â   âââ balanced-match@1.0.0 
  â â   âââ concat-map@0.0.1 
  â âââ once@1.4.0 
  â âââ path-is-absolute@1.0.1 
  âââ growl@1.9.2 
  âââ json3@3.3.2 
  âââ¬ lodash.create@3.1.1 
  â âââ¬ lodash._baseassign@3.2.0 
  â â âââ lodash._basecopy@3.0.1 
  â â âââ¬ lodash.keys@3.1.2 
  â â   âââ lodash._getnative@3.9.1 
  â â   âââ lodash.isarguments@3.1.0 
  â â   âââ lodash.isarray@3.0.4 
  â âââ lodash._basecreate@3.0.3 
  â âââ lodash._isiterateecall@3.0.9 
  âââ¬ supports-color@3.1.2 
    âââ has-flag@1.0.0 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and chai, since I have trouble remembering the &lt;code&gt;assert&lt;/code&gt; syntax:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â npm install chai --save-dev
project_greeter_bot@0.0.0 /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
âââ¬ chai@4.1.2 
  âââ assertion-error@1.0.2 
  âââ check-error@1.0.2 
  âââ deep-eql@3.0.0 
  âââ get-func-name@2.0.0 
  âââ pathval@1.1.0 
  âââ &lt;span class="nb"&gt;type&lt;/span&gt;-detect@4.0.3 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So I searched for a &lt;code&gt;mocha init&lt;/code&gt; commmand equivalent to &lt;code&gt;rspec --init&lt;/code&gt; or &lt;code&gt;bundle init&lt;/code&gt; and there is one, but it seems to generate a client side scaffold with html etc.&amp;ndash;so not what we need here.  Feels like there&amp;rsquo;s room for a little automation there &amp;hellip; I&amp;rsquo;ve opened a &lt;a href="https://github.com/mochajs/mocha/issues/2989"&gt;feature suggestion&lt;/a&gt; with Mocha, and in the meantime updated the projects package.json with:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  &lt;span class="s2"&gt;"scripts"&lt;/span&gt;: &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;"test"&lt;/span&gt;: &lt;span class="s2"&gt;"mocha test/**/*.js"&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;,
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and dumped the following in &lt;code&gt;test/greeter_spec.js&lt;/code&gt;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â mkdir &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â touch &lt;span class="nb"&gt;test&lt;/span&gt;/greeter_spec.js
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Project Greeter bot'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should have greetings'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and got this error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot (5_add_tests)]$ 
â npm test

&amp;gt; project_greeter_bot@0.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
&amp;gt; mocha test/**/*.js

/Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot/test/greeter_spec.js:1
(function (exports, require, module, __filename, __dirname) { require { expect } from 'chai';
                                                                      ^

SyntaxError: Unexpected token {
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;ve not remembered some of the syntax from yesterday.  This is the point of the rep - find the pain point that you would not otherwise find if you just copied and pasted the code.  Can I now solve this without resorting to looking up the solution &amp;hellip; It&amp;rsquo;s so tempting to just go look at the correct syntax, but I will force myself to slowly read the error message, &lt;code&gt;SyntaxError: Unexpected token {&lt;/code&gt; so maybe just try dropping the curly braces &amp;hellip; no both the following fail:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s1"&gt;'expect'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="nx"&gt;from&lt;/span&gt; &lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, going to look at yesterday&amp;rsquo;s code &amp;hellip; ah, here&amp;rsquo;s what it should be:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;hmm, have I been throwing in a mix of Python/React syntax there? :-)  Okay, hopefully this pain point will help me remember - would be great to repeat every day for a few to nail it down - now let&amp;rsquo;s see if I can hook up the test to real code again.&lt;/p&gt;

&lt;p&gt;Took a bit of a big bite here - moved all the js code into a lib dir, moved all the greetings text/variables to a &lt;code&gt;greetings.js&lt;/code&gt; file, renamed the test files, made loads of things consts, updated package.json with &lt;code&gt;&amp;quot;start&amp;quot;: &amp;quot;node lib/server.js&amp;quot;&lt;/code&gt; and tried the following at the end of the &lt;code&gt;greetings.js&lt;/code&gt; file in order for it to be pulled into both test and &lt;code&gt;server.js&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kr"&gt;export&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which did not work &amp;hellip;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;5_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â npm &lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;project_greeter_bot@0.0.0 &lt;span class="nb"&gt;test&lt;/span&gt; /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;mocha &lt;span class="nb"&gt;test&lt;/span&gt;/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.js

module.js:471
    throw err;
    ^

Error: Cannot find module &lt;span class="s1"&gt;'greetings'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so I&amp;rsquo;m not remembering - try some alternatives?&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="k"&gt;default&lt;/span&gt; &lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;export&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;module&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;neither of these work - I think I&amp;rsquo;m throwing in React syntax again - what&amp;rsquo;s the solution?  Ah I was closer to start with, the export needs to be pluralized:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;module&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;exports&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but still not working - ah path needed in test with:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;greetings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'../lib/greetings'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Project Greeter bot'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should have greetings'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greetings&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;greeter&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'something'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Yes, that&amp;rsquo;s it.  Okay, must remember the pluralization on &lt;code&gt;module exports = ...&lt;/code&gt; and that this is different from React&amp;rsquo;s &lt;code&gt;export default &amp;lt;function&amp;gt;&lt;/code&gt;.  A quick update of the tests to something a little more meaningful, a check that things basically still work running the server locally against the old AV mentors instance and the pull request is in:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/project_greeter_bot/pull/23"&gt;https://github.com/AgileVentures/project&lt;em&gt;greeter&lt;/em&gt;bot/pull/23&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and I start having thoughts about all the other little pieces to make this into a serious, accessible project:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;use of develop/production modes to avoid confusion over slack IDs&lt;/li&gt;
&lt;li&gt;coherent instructions about getting the project running for new developers&lt;/li&gt;
&lt;li&gt;checking this deploys to Azure&lt;/li&gt;
&lt;li&gt;setting up GitHub notifications on a #bot-notify channel&lt;/li&gt;
&lt;li&gt;adding projects to AV getting started and projects &amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For another day I guess - back to the grindstone &amp;hellip;&lt;/p&gt;

&lt;p&gt;p.s. just wondering does the code of conduct hold the maintainers to treat all the contributors with respecting as well as the contributors treating each other with respect? looks like it does &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Adding NodeJS Tests</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/05/av-ecosystem-review-adding-nodejs-tests/"/>
    <id>http://blog.url.com/2017/09/05/av-ecosystem-review-adding-nodejs-tests/</id>
    <published>2017-09-05T01:00:00+01:00</published>
    <updated>2017-11-01T20:46:52+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Argh, so I got distracted by Slack and blogging and twitter and even though I sat down at the computer at 9am it&amp;rsquo;s 10am.  At least I got a few important emails and things out of the way (I think), but so after making a slew of changes to the Slack greeter bots, I feel I can&amp;rsquo;t put off adding test frameworks any longer.  There&amp;rsquo;s some bugs going out that I can&amp;rsquo;t catch with simple automated tests (the way messages get formatted in a real slack instance), but I&amp;rsquo;ve definitely wasted a little time on some silly bugs that automated tests would have caught.  In the meantime I can see that the new changes to the syntax for the main greeter bot are all in place:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/30216/30053660-798a6e8c-9221-11e7-927d-ea20f462cc55.png" /&gt;&lt;/p&gt;

&lt;p&gt;and similarly for usernames in the project greeter bot:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/30216/30053820-fc5adbee-9221-11e7-8287-2934a0cd501c.png" /&gt;&lt;/p&gt;

&lt;p&gt;although I note that even the bot mention of my own name in a channel does not appear to have created the kind of highlight I would like to see in the channel notifications (i.e. the number in the dot to indicate one mention of one&amp;rsquo;s name)&lt;/p&gt;

&lt;p&gt;&lt;img src="https://user-images.githubusercontent.com/30216/30053947-5a4bb106-9222-11e7-96de-eb3a1b66fddc.png" /&gt;&lt;/p&gt;

&lt;p&gt;but at least we&amp;rsquo;ve got an automated way of giving new users the message that they should flag the maintainer&amp;rsquo;s name, in order to get attention.  I was hoping that simply mentioning the maintainer in the bot message might have this effect, but not so.  If the user follows the instruction to flag the maintainer in any question, it should be fine, but some people don&amp;rsquo;t understand that part of flagging in Slack - I&amp;rsquo;m looking to ensure that any question from a new person joining the channel gets noticed, but I guess I&amp;rsquo;m pushing too hard on a corner case &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyway, as the number of features increases the need for tests mounts, and I think part of the problem here is that I haven&amp;rsquo;t yet mentally automatized the setup of tests in a NodeJS project.  I&amp;rsquo;ve done it so many times for Ruby that I can set up an RSpec or Cucumber suite from scratch without referring to any docs.  I have done it for NodeJS, but not enough that it&amp;rsquo;s second nature and it&amp;rsquo;s funny how a small thing like that can get in the way of getting something done.  Maybe I&amp;rsquo;ll need to athletic repeat that a few more times - I did do it every day for a couple of weeks in 2015, but not enough apparently &amp;hellip; :-)&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s so hard&amp;ndash;where do I start?  Get a branch checked out for the issue I have on adding tests:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â git checkout -b 4_add_tests
Switched to a new branch &lt;span class="s1"&gt;'4_add_tests'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;install mocha:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;4_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â npm install --save-dev mocha
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;make a test directory and create a test:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;4_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â mkdir &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;4_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â touch &lt;span class="nb"&gt;test&lt;/span&gt;/server_test.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;create a test file:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;assert&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'assert'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Bot'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should include channel names in message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;equal&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;update package.json&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"name"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"greeter_bot"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.0.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"description"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"main"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"server.js"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"dependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"botkit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^0.4.3"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"devDependencies"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"mocha"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.5.0"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"scripts"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nt"&gt;"test"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"mocha test/**/*.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"author"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"license"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ISC"&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and that works:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;4_add_tests&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
â npm &lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;greeter_bot@1.0.0 &lt;span class="nb"&gt;test&lt;/span&gt; /Users/tansaku/Documents/GitHub/AgileVentures/greeter_bot
&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;mocha &lt;span class="nb"&gt;test&lt;/span&gt;/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.js



  Bot
    â should include channel names &lt;span class="k"&gt;in &lt;/span&gt;message


  1 passing &lt;span class="o"&gt;(&lt;/span&gt;6ms&lt;span class="o"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I know how to do this - why was I hesitating? :-) But so now there&amp;rsquo;s not much to test in this project yet, at least not without some sophisticated mocking, which I&amp;rsquo;ll leave for later.  Let me at least check some trivial thing about the message being sent with the following code:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'chai'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;expect&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;chai&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'./../lib/greeting'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Bot'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should include linked techtalk channel in greeting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;#C02AA0ARR|techtalk&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should include linked new_members channel in greeting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;#C02G8J689|new_members&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should include linked random channel in greeting'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;#C0285CSUH|random&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, so I got a bit fancy and installed chai so I could work with the expect/include syntax I like, and then I got all like &amp;ldquo;this project needs a proper structure&amp;rdquo; and moved things around.  I think it still works.  With only a couple of unit tests and no acceptance tests, I may have completely broken the project - my little local test that it starts up may conceal other issues &amp;hellip; but at least I&amp;rsquo;ve broken down some little mental barriers.  Starting node tests from scratch and reminding myself how we go through re-structuring a node app.  Some progress today - on to the continuing review tomorrow &amp;hellip; or add tests to project&lt;em&gt;greeter&lt;/em&gt;bot &amp;hellip; jump from level to level, enjoy, code!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review More Greetings</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/04/av-ecosystem-review-more-greetings/"/>
    <id>http://blog.url.com/2017/09/04/av-ecosystem-review-more-greetings/</id>
    <published>2017-09-04T01:00:00+01:00</published>
    <updated>2017-10-31T20:36:55+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Got my jogging and podcasting/tweeting done this AM, but kids still off school, which means I&amp;rsquo;m late to the keyboard.  Lots to do - low hanging fruit is probably other changes to the greeter bots.  The change I rolled out on Friday seems to be working; that&amp;rsquo;s the quick fix to ensure that channel names are hyperlinked in messages:&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/Screenshot%202017-09-04%2010.16.25.png" /&gt;&lt;/p&gt;

&lt;p&gt;So I guess I should get that merged into master, and I can probably kick through the other minor changes there &amp;hellip; I&amp;rsquo;ve merged the license and code of conduct pull requests that I had outstanding.  So I punted on the code of conduct in the greeter bot, posting the following to our AV community channel:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;we&amp;rsquo;ve been discussing codes of conduct before and I know that various projects have them now, following GitHub&amp;rsquo;s lead of making them really easy to add.  I haven&amp;rsquo;t heard any objections yet, and I just added them as a recommendation in our &amp;ldquo;Getting Started&amp;rdquo; documentation.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m planning to add mention of them to our Slack greeter bot https://github.com/AgileVentures/greeter&lt;em&gt;bot/issues/6 but I thought I&amp;rsquo;d just check in with the community again before moving on that.  Would be good to discuss in a community meeting - which perhaps we should move to Fridays &amp;hellip; anyhow more on meeting times soon, but very interested in any input anyone cares to share here, or feel free to DM me directly :slightly&lt;/em&gt;smiling_face:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I got hyperlinks to our Premium mob offer and the user name in the main greeting bot, and pushed those live from a branch. I&amp;rsquo;m really promising myself that the next step is testing!&lt;/p&gt;

&lt;p&gt;But before that I can&amp;rsquo;t help myself but try and get the names and channels linked up in the project greeter bot, so I went ahead and did that and ended up doing a quick manual test on the now un-used AV mentors slack instance, that allowed for a quick round of debugging.  Gosh I&amp;rsquo;m really not setting this up to allow for easy-onboarding of others - will need a big documentation effort to get folks into the new AV bot testing slack instance &amp;hellip; can&amp;rsquo;t help myself but get these quick fixes out first - actually make it so that there will be the equivalent of a ping to the project maintainers on channel join - or at least see if hyperlinking their name in the bot post has that effect &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Greetings and Meetings</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/01/av-ecosystem-review-greetings-and-meetings/"/>
    <id>http://blog.url.com/2017/09/01/av-ecosystem-review-greetings-and-meetings/</id>
    <published>2017-09-01T01:00:00+01:00</published>
    <updated>2017-10-30T21:00:35+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="meeting" src="/images/meeting.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Set the alarm this morning but still a late start as all my boys wanted help with their codecombat programming challenges, and they&amp;rsquo;re still off school for the summer.  Anyhow, there are several niggling things about the various greeter bots we have for AgileVentures and individual channels.  I&amp;rsquo;ve directed a few people to the #bots channel to get involved, but so far no one has gotten very far.  Is there some critical mass of activity on a project, or some critical level of support that&amp;rsquo;s required before some people will start submitting code?  One comment I had was that these bots are just tiny nodejs projects.  I guess for those wanting to cut their teeth on open source node projects a challengingly complex project is appealing in some sense.  Personally I have had just about enough of complexity and the simpler the better.  The key metric for me continues to be can we deliver something of value to the end user?  It&amp;rsquo;s whether the project delivers something of value to someone somewhere.&lt;/p&gt;

&lt;p&gt;What was really simple this week was setting up Slack repeating reminders so that we get alerts about when the scrums are upcoming, some project meetings and some mobs.  The syntax is super simple, e.g. &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/remind #localsupport to prepare for weekly meeting @here in 30 minutes at 4:00pm every Thursday 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The exciting thing with the new fixed URL videoconferencing from Jitsi is that the meeting ping, itself, can be set as a recurriung reminder:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/remind #localsupport to join the weekly meeting @here in http://meet.jit.si at 4:30pm every Thursday 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;m thinking to make my participation in the project meetings a biweekly thing, so that I can get private project work done on the &amp;ldquo;off-weeks&amp;rdquo; so to speak.  My only complaint is that the reminders aren&amp;rsquo;t directly editable. However they are easily listable and deletable.  I also see that they can be controlled by API:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.slack.com/methods/reminders.list"&gt;https://api.slack.com/methods/reminders.list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;That makes me think we could possibly take the agile-bot out of the equation by simply having our main site hit Slack directly to set reminders based on events created or updated through the Rails interface &amp;hellip;  By having set up the LocalSupport meeting to rely on a permanent Jitsi URL, we take the need for a really experienced scrum master to start the videoconference out of the equation, and in principle anyone can stream the recording - although that is more fiddly in Jitsi.  It does seem like Jitsi performance might not be as good as Hangouts, particularly since they&amp;rsquo;re offering their new low latency setting, but I guess we should experiment with our own Jitsi hosting on Azure.&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s all very well for maintaining the run of existing projects, but that&amp;rsquo;s not going to immediately help with getting more folks involved in the greeter bots (or other new projects), or make the greeter bots seem a little more friendly.  Maybe I would be better off labelling them specifically as bots.  For the main project greeter, if I don&amp;rsquo;t have the message come from me, then I don&amp;rsquo;t get to see the response that people make to the bot.  In the group channels, it&amp;rsquo;s kind of weird to have an automated message from me when I&amp;rsquo;m inviting someone in for a vote.  What I really want to move towards is some kind of drip campaign that follows up with people who&amp;rsquo;ve joined project channels (and our community) to ask them if they need help and support.  I notice that Slack follows up with multiple emails after the fact when you&amp;rsquo;ve been invited to a Slack community, presumably to maximize the chances of getting new users into Slack.&lt;/p&gt;

&lt;p&gt;For the main greeter bot I&amp;rsquo;ve got four little changes to tick off:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;hyperlinking to our free premium mob page&lt;/li&gt;
&lt;li&gt;adding mention of our code of conduct&lt;/li&gt;
&lt;li&gt;referring to the new person by name&lt;/li&gt;
&lt;li&gt;hyperlinking to channel names&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For the project greeter bot I&amp;rsquo;ve got lots of issues, but my top ones are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;names of folks in message not being linked&lt;/li&gt;
&lt;li&gt;channel names not being linked&lt;/li&gt;
&lt;li&gt;avoid reposting the intro if we&amp;rsquo;ve recently done so&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This last would go a long way to making the bot seem more human, but it would also require the most complexity, i.e. some state would need to be held, or we&amp;rsquo;d need to pull messages out of the channel to check for recent posts.  That latter seems simpler, but also something that we should try after wrapping all this in tests.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m conflicted here - maybe the thing that would get more people involved would be making super-polished documentation on all this, or creatingnew project channels - project placeholders in our main site and getting started pages; but the itch I want to scratch is a few formatting issues, and also ensuring we have a global code of conduct in place (which should go in the getting started as well &amp;hellip;).  I guess I&amp;rsquo;ll let myself hit those issues first &amp;hellip;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve just picked off hyperlinking channels in the main greeter bot, and pushed that branch to production - hmm, no staging set up there - not so easy to test even on the bot-test instance I created - unless creating new accounts - can do &amp;hellip; should get set up with that properly.  Linking to channels and users from bot posts does seem like a relatively straightforward syntax fix:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://api.slack.com/docs/message-formatting#linking_to_channels_and_users"&gt;https://api.slack.com/docs/message-formatting#linking&lt;em&gt;to&lt;/em&gt;channels&lt;em&gt;and&lt;/em&gt;users&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Gonna stop there today since I&amp;rsquo;m behind and hopefully this will give me impetus to get the few other rough edges sorted before the big push, which is setting up some proper testing infrastructure on these projects &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
