<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-11-28T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title/>
    <link rel="alternate" href="http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/"/>
    <id>http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/</id>
    <published>2017-11-28T00:00:00+00:00</published>
    <updated>2018-03-06T21:43:24+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So, continuing to work from &lt;a href="https://gist.github.com/nodunayo/c919477906aab6c1af6065ff8e868d3e"&gt;Nadia&amp;rsquo;s README template&lt;/a&gt;: &lt;/p&gt;

&lt;h1&gt;AgileVentures WebSiteOne&lt;/h1&gt;

&lt;p&gt;This &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; app powers the &lt;a href="http://agileventures.org/"&gt;AgileVentures main developer site&lt;/a&gt;, showing lists of active &lt;a href="https://www.agileventures.org/projects"&gt;projects&lt;/a&gt;, &lt;a href="https://www.agileventures.org/users"&gt;members&lt;/a&gt;, &lt;a href="https://www.agileventures.org/events"&gt;upcoming events&lt;/a&gt;, &lt;a href="https://www.agileventures.org/scrums"&gt;past event recordings&lt;/a&gt;, as well as all the machinery for &lt;a href="https://www.agileventures.org/pricing"&gt;Premium membership payments&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;See the &lt;a href="docs/project_setup.md"&gt;Project Setup&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;:construction: UNDER CONSTRUCTION :construction:&lt;/p&gt;

&lt;p&gt;See the site &lt;a href="docs/how_to_use_the_site.md"&gt;How To&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Contributing&lt;/h2&gt;

&lt;p&gt;See our &lt;a href="CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;History&lt;/h2&gt;

&lt;p&gt;in 2011 Sam Joseph had the idea for an online pairing community where everyone worked together to use the agile development methodology to deliver solutions to IT charities and non-profits.  Thomas Ochman joined as project manager and led the development of the WebSiteOne codebase with Bryan Yap serving as technical lead.  Initialy Sam was the notional &amp;ldquo;client&amp;rdquo;, not getting involved in the tech development, and many different volunteers contributed code.  During this phase the events, projects and user systems were developed.  There was also a blog-like articles system.  Yaro Appletov led a tight integration with Google hangouts to allow recordable hangouts to be launched from the site and report back telemetry.&lt;/p&gt;

&lt;p&gt;Later Raoul Diffou joined to take over as project manager as Thomas and Bryan had less and less time for the project.  Sam took over the technical lead role in 2016 and also started pairing with Raoul as project manager.  Later in 2016 as Raoul had less and less time Sam became the sole project manager.  During the course of 2016 Sam and long time AV contributor, Michael, revised the events framework, and replaced the articles system with a Premium payments framework intended to help ensure AV was sustainable into the future.  In 2017 Google withdrew their Hangouts API, breaking various functionality in the site.  Sam and Lokesh Sharma replaced the API integration with manual updates, and Sam pulled in the agile-bot node microservice so that WSO now communicates directly with Slack to alert members about new online meetings and their recordings.&lt;/p&gt;

&lt;h2&gt;Approaches&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile Development

&lt;ul&gt;
&lt;li&gt;We try to work from user stories in regular sprints, offer daily standups, and get regular feedback from end users.  We try to reflect regularly on our process and experiment with incremental changes to how we get things done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behaviour Driven Development (BDD)

&lt;ul&gt;
&lt;li&gt;We use Cucumber and RSpec testing tools that describe the behaviours of the system and its units&lt;/li&gt;
&lt;li&gt;We try to work outside in, starting with acceptance tests, dropping to unit tests and then writing application code&lt;/li&gt;
&lt;li&gt;We do spike application code occasionally to work out what&amp;rsquo;s going on, but then either throw away the spike, or make sure all our tests break before wrapping the application code in tests (by strategically or globally breaking things)&lt;/li&gt;
&lt;li&gt;Where possible we go for declarative over imperative scenarios in our acceptance tests, trying to boil down the high level features to be easily comprehensible in terms of user intention&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Domain Driven Design (DDD)

&lt;ul&gt;
&lt;li&gt;Sometimes we switch to inside out, trying to adjust the underlying entity schema to better represent the domain model&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-documenting code

&lt;ul&gt;
&lt;li&gt;We prefer executable documentation (tests) and relatively short methods where the method and variable names effectively document the code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Reading material&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fasteragile.com/blog/2015/01/19/declarative-user-stories-translate-to-good-cucumber-features/"&gt;Imperative vs Declarative Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bibwild.wordpress.com/2016/02/18/struggling-towards-reliable-capybara-javascript-testing/"&gt;JavaScript Acceptance test trials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Walkthroughs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An example of a simple interface change&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L1"&gt;user story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L15"&gt;cucumber scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We did not write a spec, as this would have involved a view spec which we don&amp;rsquo;t feel add any value&lt;/li&gt;
&lt;li&gt;Here&amp;rsquo;s the &lt;a href="app/views/events/show.html.erb#L38"&gt;code&lt;/a&gt; that implemented the feature&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a new feature involving a database change
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a bug fix
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So looking through all the cucumber scenarios I&amp;rsquo;m not finding wonderful examples of the declarative style I think we should be using, and this is at least as true for the cucumber scenarios I have written myself :-(  I guess the edit future event timezone related work that Michael and I implemented is closest.  I&amp;rsquo;m going to have to go back through some old pull requests to work out other walkthrough examples.  I also note that we don&amp;rsquo;t have any documentation on how to use the website, either in git or on the site itself.  I guess I&amp;rsquo;ve always been slightly skeptical of the value of that sort of written documentation in that it becomes another thing to maintain that folks don&amp;rsquo;t even necessarily read.&lt;/p&gt;

&lt;p&gt;Blurgh, overall I don&amp;rsquo;t think things are very hospitable and it feels like a mountain to climb to try and make them so.  One step at a time I guess &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Code Hospitality</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/27/av-ecosystem-review-code-hospitality/"/>
    <id>http://blog.url.com/2017/11/27/av-ecosystem-review-code-hospitality/</id>
    <published>2017-11-27T00:00:00+00:00</published>
    <updated>2018-03-05T20:53:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/hospitality.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Pairing with Marian over the weekend we managed to clear up the last piece of junk in the RSpec log, the deprecation warning about the event_repeats boolean column in the events table.  It turned out that we could fix it simply by adjusting the specs, since it was they that were trying to force strings into the boolean column, not any part of the main app.  We drifted over a few other areas where issues could be investigated or things refactored.  We saw the code that was supposed to email notify us when there are 500 errors (which I never receive) and it looked like we could make the events code simpler, by pulling the string &amp;ndash;&amp;gt; boolean transformations into the select options.&lt;/p&gt;

&lt;p&gt;I wanted to focus this morning on code hospitality a la Nadia Odunayo, but I&amp;rsquo;ve been distracted by Slack and Email already, and putting the above items into new of existing issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1808#issuecomment-347133830"&gt;500 error notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1992"&gt;Event form refactoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anyhow, I found &lt;a href="https://gist.github.com/nodunayo/c919477906aab6c1af6065ff8e868d3e"&gt;Nadia&amp;rsquo;s README template&lt;/a&gt;, so perhaps I can just quickly do a version for AgileVentures WebSiteOne&lt;/p&gt;

&lt;h1&gt;AgileVentures WebSiteOne&lt;/h1&gt;

&lt;p&gt;This app powers the AgileVentures main developer site, showing lists of active projects, members, upcoming events, past event recordings, as well as all the machinery for Premium membership payments&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;link to installation doc&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;???&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Contributing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;link to contributing guide&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sam Joseph had the idea for an online pairing community where everyone worked together to use the agile development methodology to deliver solutions to IT charities and non-profits.  Thomas Ochman joined as project manager and led the development of the WebSiteOne codebase with Bryan Yap serving as technical lead.  Initialy Sam was the notional &amp;ldquo;client&amp;rdquo;, not getting involved in the tech development, and many different volunteers contributed code.  Later Raoul joined as project manager as Thomas and Bryan had less and less time for the project.  Sam switched roles joining Raoul as project manager, and is now the sole project manager as Raoul became unavailable.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Approaches&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile Development

&lt;ul&gt;
&lt;li&gt;We try to work from user stories in regular sprints, offer daily standups, and get regular feedback from end users&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behaviour Driven Development (BDD)

&lt;ul&gt;
&lt;li&gt;We use Cucumber and RSpec testing tools that describe the behaviours of the system and its units&lt;/li&gt;
&lt;li&gt;We try to work outside in, starting with acceptance tests, dropping to unit tests and then writing application code&lt;/li&gt;
&lt;li&gt;We do spike occasionally to work out what&amp;rsquo;s going on, but then either throw away the spike, or make sure all our tests break before wrapping in tests (by strategically or globally breaking things)&lt;/li&gt;
&lt;li&gt;Where possible we go for declarative over imperative scenarios in our acceptance tests, trying to boil down the high level features to be easily comprehensible in terms of user intention&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Domain Driven Design (DDD)

&lt;ul&gt;
&lt;li&gt;Sometimes we switch to inside out, trying to adjust the underlying entity schema to better represent the domain model&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-documenting code

&lt;ul&gt;
&lt;li&gt;We prefer executable documentation (tests) and relatively short methods where the method and variable names effectively document the code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Reading material&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#"&gt;Imperative vs Declarative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;JavaScript Accpetance test trials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;What is DDD?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Walkthroughs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some new feature we added &amp;hellip;

&lt;ul&gt;
&lt;li&gt;Here is the original feature request&lt;/li&gt;
&lt;li&gt;This is the &lt;a href="#"&gt;spec&lt;/a&gt; that was written&lt;/li&gt;
&lt;li&gt;Here&amp;rsquo;s the &lt;a href="#"&gt;code&lt;/a&gt; that fixed that spec&lt;/li&gt;
&lt;li&gt;And then &lt;a href="#"&gt;we refactored it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;rsquo;s a start - more tomorrow &amp;hellip;  &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Fixing Event Repeats</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/24/av-ecosystem-review-fixing-event-repeats/"/>
    <id>http://blog.url.com/2017/11/24/av-ecosystem-review-fixing-event-repeats/</id>
    <published>2017-11-24T00:00:00+00:00</published>
    <updated>2018-03-05T20:47:41+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/fixing.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So the Semaphore CI was busy burning away yesterday as it re-ran all the different dependabot pull requests, and a few of them have gone green &amp;hellip; and I can also now update the medium-editor PR to the base branch, which seemed to be blocked all day yesterday:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/zs5jgyf1bl5hx2z/Screenshot%202017-11-24%2010.32.46.png" /&gt;&lt;/p&gt;

&lt;p&gt;In the background I guess I&amp;rsquo;m supposed to be getting tweaks to the home page text out to production.  I rebase staging into production and push out, and see we&amp;rsquo;ve got a few things in there:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/l5bpb26nuklllp8/Screenshot%202017-11-24%2010.35.53.png" /&gt;&lt;/p&gt;

&lt;p&gt;Will be good to give them a chance to settle in on production &amp;hellip; there are eight dependabot PRs that are now green.  Shall I just dump them in to develop?  I do, but I&amp;rsquo;m burning time, and I didn&amp;rsquo;t leave myself much time for blogging today.  In addition, Fridays are now super busy with mobs and pairing.  I wanted to get into this deprecation warning about &lt;code&gt;repeat_ends&lt;/code&gt; for events &amp;hellip; maybe after the WSO meeting later today &amp;hellip;&lt;/p&gt;

&lt;p&gt;It would be great to work through and remove any gems we don&amp;rsquo;t need.  Some related items here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/14333963/how-to-find-unused-gems-in-my-gemfile/28628993#28628993"&gt;https://stackoverflow.com/questions/14333963/how-to-find-unused-gems-in-my-gemfile/28628993#28628993&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pboling/gem_bench"&gt;https://github.com/pboling/gem_bench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Okay, I managed to get us down to a single page of pull-requests, and opened all the others to look at the fails to see if they&amp;rsquo;re just intermittent ones.  There seems to be some really weird random fails from coveralls - that needs sorting too.&lt;/p&gt;

&lt;p&gt;End of day, and I&amp;rsquo;m still no closer to working on this event &lt;code&gt;repeat_ends&lt;/code&gt; issue.  Although I do feel like a new focus is called for - make the projects super developer friendly and easy to onboard and that way we get more folks working on all the small fixes that would make the main AV site more welcoming &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Sweeping Up</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/23/av-ecosystem-review-sweeping-up/"/>
    <id>http://blog.url.com/2017/11/23/av-ecosystem-review-sweeping-up/</id>
    <published>2017-11-23T00:00:00+00:00</published>
    <updated>2018-02-19T21:53:28+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/broom.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So confused about where to direct my efforts.  Maybe it doesn&amp;rsquo;t matter?  Maybe I should be avoiding code like Avdi Grimm?  I&amp;rsquo;m going to start by trying to clear up all the dependabot PRs.&lt;/p&gt;

&lt;p&gt;I just used my administrator privileges to merge in upgrades to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1898"&gt;Brakeman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1899"&gt;Bullet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1900"&gt;Bundler-Audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1901"&gt;Jasmine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m not really clear what the first three gems do.  Jasmine allows us to unit test our JavaScript.  Trying to update all these four in succession, leading to merges getting stuck through the GitHub UI.  I&amp;rsquo;ve banged on them and I think they&amp;rsquo;re all through now.  I pull those changes locally to update my gems locally.&lt;/p&gt;

&lt;p&gt;One project manager experienced a 500 error last night that I assume was performance related, but we get nothing from systems like AirBrake that are supposed to tell us about these things.  I sort of feel like for a system of this size, what we need is four full time engineers to keep maintaining it all.  Maybe upgrading to Rails 5 is the key?  Maybe spending no time with my family? Or maybe re-doing the whole thing in WordPress like Avdi and Chuck &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyway, I&amp;rsquo;m putting my head down and getting every dependabot automated gem upgrade PR through now.  I generally shy away from making multiple changes like this, but I&amp;rsquo;m sick of the dependabot PRs drowning out the human PRs.  Of course even once I&amp;rsquo;ve got the green ones through, there are all those that have come through and caught on the CI.  Now some are clearly failing because code needs to change, but others will just be from intermittent jasmine fails.  I think if we could rip out Mercury and replace it with a new editor, and that might get rid of half the intermittent fails, and maybe clear the way to get onto Rails 5.  However, I am unclear precisely what Rails 5 really buys us - maybe the ability to use websockets cleanly and so avoid a lot of stale data for our users in their browsers.  That said, realistically we could fix some of the current staleness issues with timers.&lt;/p&gt;

&lt;p&gt;The difficultly with this dependabot system is that we&amp;rsquo;ve got hundreds of gems and there&amp;rsquo;s always going to be gem versions being bumped.  So even if I get through the current lot, there&amp;rsquo;ll be more to come.  Perhaps the trick is to get new members merging these PRs?  Although that would mean needing to give them merge privileges &amp;hellip; the ones where there&amp;rsquo;s work required are generally tricky and not necessarily a good place for new members.  Perhaps just having them take the green PRs and running them locally to double check the CI?&lt;/p&gt;

&lt;p&gt;So as I try to merge in more, I get conflicts in the Gemfile and Gemfile.lock, which I try to patch up.  I go to all the other dependabot failing PRs and update their branches.  Am I just doing a very long slow drawn out &lt;code&gt;bundle update&lt;/code&gt; here?  Every single gem has to be tested with each other, in each combination.  The other issue is that every PR puts a load on our CI and our CI blocks deployment, so I&amp;rsquo;ve probably set us up to be unable to deploy anything today.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got a chunk of gems upgraded and I&amp;rsquo;m running the tests locally to check, but I don&amp;rsquo;t have so much faith in the tests. Hmmm.  What I do really want to do is get that new editor that Matt started working on and update the branch.  Matt&amp;rsquo;s been MIA for the longest of the different contributors.  I&amp;rsquo;m also seeing various messy messages in our build output.  When unclear about direction I guess maybe it&amp;rsquo;s best just to focus on cleaning things up &amp;hellip;&lt;/p&gt;

&lt;p&gt;Frustratingly when I run RSpec in progress mode I can&amp;rsquo;t see which tests the deprecation warnings are coming from.  The main ones I&amp;rsquo;m getting are:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:244)
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/github"]
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WARNING: Using the `raise_error` matcher without providing a specific error or message risks false positives, since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing the expectation to pass without even executing the method you are intending to call. Actual error raised was #&amp;lt;ActiveRecord::StatementInvalid: PG::NotNullViolation: ERROR:  null value in column "user_id" violat...
: UPDATE "authentications" SET "user_id" = $1, "updated_at" = $2 WHERE "authentications"."id" = $3&amp;gt;. Instead consider providing a specific error class or message. This message can be suppressed by setting: `RSpec::Expectations.configuration.on_potential_false_positives = :nothing`. Called from /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/authentication_spec.rb:12:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ah, actually some of the error messages are telling me where the problems are arising &amp;hellip;  of course kicking off a cucumber test run locally blocks me from doing any coding work on the project for 10 minutes+ since we still have these stupidly long running tests in places &amp;hellip; I guess I will do my station keeping (social media updates) until they finish&amp;hellip;&lt;/p&gt;

&lt;p&gt;Only one failure in the cukes:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Encountered Error in get: 404 Resource Not Found: {"code":"route_not_found","kind":"error","error":"The path you requested has no valid endpoint."}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having merged the conflict in the Medium-editor branch, I&amp;rsquo;m not even getting the chance to update the branch, so let&amp;rsquo;s at least try to clear up some cruft in the RSpec output.&lt;/p&gt;

&lt;p&gt;The first item seems a little tricky, although it looks like we do need to fix it before we move to Rails 5, and it seems like I can fix it at the spec level as simply as adding this to the event model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;repeat_ends&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat_ends&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt; &lt;span class="n"&gt;repeat_ends&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'on'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and fixing the factories to ensure they used &amp;lsquo;on&amp;rsquo; and &amp;#39;never&amp;rsquo; rather than booleans.  The issue here is that the underlying column type for &lt;code&gt;repeat_ends&lt;/code&gt; is boolean, but the model is working with it as a string.  Of course the real question is how the acceptance tests perform now.  I get a sequence of errors - if I&amp;rsquo;m lucky they are all about factories (being used in the Cukes).  They are not - they are actually using the full form, and we have javascript running in the browser to set things up - and it&amp;rsquo;s not showing certain fields.  There&amp;rsquo;s some complexity to fix all this, and even if I have the tests passing, I won&amp;rsquo;t be sure I haven&amp;rsquo;t introduced a bug into our events management.&lt;/p&gt;

&lt;p&gt;Fixing the &lt;code&gt;raise_error&lt;/code&gt; issue is a trivial change to the spec:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'must have an associated user'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;# Bryan: validations done at database level to avoid complications, but will raise exceptions&lt;/span&gt;
    &lt;span class="vi"&gt;@auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="vi"&gt;@auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt; &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;raise_error&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;StatementInvalid&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- add this error type here&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I decide to delete all the view specs, as those warnings are telling me that many of them aren&amp;rsquo;t testing what they should be.  In the ideal world I&amp;rsquo;d work through every single one and work out where they&amp;rsquo;re corresponding to in terms of missing acceptance test functionality, but part of the overall problem here is not having the resources to maintain so much code.  I think I need to hack and slash a bit to make some kind of progress.  Maybe I can spend tomorrow debugging the events &lt;code&gt;repeat_ends&lt;/code&gt; issue and I&amp;rsquo;ll have the RSpec output cleaned out.  Not sure that&amp;rsquo;s where my attention is most needed, but when I really can&amp;rsquo;t decide what high level issue to focus on, I guess it&amp;rsquo;s not a bad thing to do some sweeping up &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review What The Hell Was I Doing?</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/22/av-ecosystem-review-what-the-hell-was-I-doing/"/>
    <id>http://blog.url.com/2017/11/22/av-ecosystem-review-what-the-hell-was-I-doing/</id>
    <published>2017-11-22T00:00:00+00:00</published>
    <updated>2018-02-08T21:26:08+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="wfhitbanner" src="/images/wfhitbanner.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Hmm, my intention had been to work on the Azure Jitsi setup this week, but the last two mornings were taken up with finishing the AgileVentures monthly report for the trustees.  I did another quick bit of work on the main AgileVentures website to swap outgoing and incoming sponsor logos for Federico and deploy the new Premium member API for Michael.  Those are both now live, and I&amp;rsquo;m reflecting on whether to do more things that unblock others.  The first thing that springs to mind is the changes to the home page language that Lara has suggested based on analysis of the Google Adwords data.&lt;/p&gt;

&lt;p&gt;Other things going on include closing out all these dependabot gem upgrades; and whether we need to shut them off so we can see what we are doing.  Other hanging pull requests (oldest first) include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;upgrading to Rails 5 (blocked by mercury editor) - Matt&lt;/li&gt;
&lt;li&gt;replacing mercury editor with alternate (medium clone) - Matt&lt;/li&gt;
&lt;li&gt;automate streaming youtube from Jitsi - Lokesh&lt;/li&gt;
&lt;li&gt;add text search form to members page - Ghost&lt;/li&gt;
&lt;li&gt;bug fix for empty github repo - Praveen&lt;/li&gt;
&lt;li&gt;refactoring slack service - Me&lt;/li&gt;
&lt;li&gt;add tawkto chat client - Me&lt;/li&gt;
&lt;li&gt;add calendar support - Sigu&lt;/li&gt;
&lt;li&gt;add sponsor relation - Michael/Marian&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I flicked my eyes over other older and unvoted tickets in the waffle board.  So much stuff that could be worked on.  Who knows which are the key set that take us where we want to be, i.e. a clear comprehensible site that allows people to onboard and work productively together on open source charity projects.  Part of me wants to knock off the oldest hanging pull requests by taking over the work of those who&amp;rsquo;ve just dropped away.&lt;/p&gt;

&lt;p&gt;However I did also start looking at alternate home page designs as part of thinking about how we can improve performance and do A/B testing on different landing pages in terms of how they bring folks on board.  And maybe that&amp;rsquo;s the most important part of our funnel?  Anyway, here&amp;rsquo;s some of the keyword searches that have had our Google ad served, and the number of click throughs they&amp;rsquo;ve received:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;| Keyword                    | Quality Score | Clicks | Impr.  |
|----------------------------|---------------|--------|--------|
| code                       | 3             | 8897   | 137126 |
| github                     | 3             | 2588   | 39468  |
| open source                | 3             | 810    | 20893  |
| agile methodology          | 4             | 340    | 7837   |
| [coding]                   | 5             | 236    | 7865   |
| agile method               | 2             | 125    | 2167   |
| agile model                | 3             | 105    | 1279   |
| agile development          | 4             | 73     | 1363   |
| scrum                      | 3             | 58     | 1970   |
| website coding             | 1             | 49     | 787    |
| agile process              | 3             | 44     | 543    |
| Ruby on Rails              | 1             | 33     | 523    |
| applications development   | 1             | 25     | 827    |
| improve programming skills | 2             | 20     | 200    |
| agile project              | 2             | 17     | 379    |
| agile testing              | 1             | 17     | 407    |
| agile process models       | 3             | 14     | 167    |
| app developer              | 3             | 13     | 442    |
| what is agile development  | 4             | 12     | 136    |
| code programmer            | 3             | 10     | 142    |
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Quality runs from 1 to 10 and our quality scores are low because these keywords are not appearing on our landing pages.  This means that we have to pay Google more of our ad budget for them.  Apparently our Google ad budget will go further if we can increase the instance of these terms on our home page.  In principle, a straightforward fix, and gets me thinking about getting set up for the A/B test of some alternate home pages, based on what we developed for our design sprint back in June.  &lt;/p&gt;

&lt;p&gt;So I go ahead and create a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1982"&gt;ticket&lt;/a&gt;, actually using part of the form template that we have (should I adjust those?), and reflect on how I still don&amp;rsquo;t know if any of our Google AdWords activity has actually led to any revenue.  I know we&amp;rsquo;ve got a couple of thousand additional users, but I don&amp;rsquo;t know if any of them have helped make this whole enterprise more sustainable &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyway, given I have a ticket, that gives me license to create a branch on which to do the work.  Let&amp;rsquo;s review the chunks of text we have on the home page:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Launch Pad&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;AgileVentures is the perfect place to kick-start a project. Our system of openness and lack of hierarchy means anybody can start a project. In fact, many of our current projects were initiated by our own members!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Crowdsourced Learning&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By crowd-sourcing our projects, we attract developers from diverse backgrounds: students, freelancers, designers, teachers, and many more from all corners of the globe. Our members are driven by their passion to learn code and make a contribution to society.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Social Coding&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We have regular daily meetings (scrums) online where our members get together, discuss projects, share knowledge and plan programming sessions. We love pair programming, nobody works alone in this community!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We love all things Open Source, we are fully transparent in our development process, we record videos of all our meetings through Google+ Hangouts, our code is freely available on the web on GitHub and our project plans are publicly viewable on Pivotal Tracker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So there are things I&amp;rsquo;d love to change here, but the funny thing is that we do already mention several of the different keywords I&amp;rsquo;m supposed to be adding:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;code: 2&lt;/li&gt;
&lt;li&gt;github: 2&lt;/li&gt;
&lt;li&gt;open source: 2&lt;/li&gt;
&lt;li&gt;agile methodology: 0&lt;/li&gt;
&lt;li&gt;coding: 1&lt;/li&gt;
&lt;li&gt;scrum: &lt;/li&gt;
&lt;li&gt;website coding: 0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It makes me wonder if what we need are custom landing pages for our different Google AdWords campaigns, so that folks searching for particular content can land on a page that speaks their language?&lt;/p&gt;

&lt;p&gt;Anyhow, I&amp;rsquo;ve taken a stab at adding more of the keywords into our langauge.  Just tweaks really, but also to mention the focus on charity and non-profit.  Let&amp;rsquo;s get this up and see:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Project Launch Pad&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Want to start a new charity or non-profit coding project? Our community of open source practitioners can help you get started coding and using agile methodology to deliver value quickly to your end users.  &lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Crowdsourced Learning&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;By crowd-sourcing our projects, we attract developers from diverse backgrounds: students, freelancers, designers, teachers, and many more from all corners of the globe. Our members are driven by their passion to learn to code and make a contribution to society.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Social Coding&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We have regular daily meetings (scrums) online where our members get together, discuss projects, share knowledge and plan programming sessions. We love pair programming, mob programming and shared code review to help everyone learn and improve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Open Source&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We love all things Open Source and are fully transparent in our development process. We record videos of all our meetings through Google Hangouts; all our code can be viewed on GitHub and our project plans are publicly viewable on systems like Pivotal Tracker.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I get that up in a pull request.  Gosh, so I don&amp;rsquo;t know what&amp;rsquo;s the key place to push on.  Doing things that people ask for is a reasonable first order heuristic, I guess.  Another is clearing up hanging PRs.  The clear pattern that I see is that when I reach out to people individually, that is what seems to have the highest success rate in terms of bringing in new contracts and subscriptions &amp;hellip; hmmm &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Completing Reports</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/21/av-ecosystem-review-completing-reports/"/>
    <id>http://blog.url.com/2017/11/21/av-ecosystem-review-completing-reports/</id>
    <published>2017-11-21T00:00:00+00:00</published>
    <updated>2018-02-08T21:03:51+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="report" src="/images/report.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Reports almost completed, just trying to summarise where we are with all the different Premium members.  Trying also to reach out to check in with each of them.  I was doing that weekly but have fallen behind.  I&amp;rsquo;ve configured Stripe to ping a #mentor-notifications channel whenever we get a payment.  I try to thank each member individually.  Paypal sends me an email, and we don&amp;rsquo;t have any reminder system for those who&amp;rsquo;ve been block sponsored by bootcamps so I particularly fall behind on those checkins :-(&lt;/p&gt;

&lt;p&gt;Working through the Stripe notifications in #mentors-notifications involves me being in Slack and so I get distracted by Slack, although this morning I am getting distracted by answering questions to Premium members, and even looking at requests for upgrades, so that&amp;rsquo;s pretty good.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the executive summary of the finally finished report:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Not such a great month, in that we lost our main corporate sponsor.  We did gain a new one, but they are offering services in kind rather than cash.  The couple of Premium member cancellations were balanced by sponsored members taking over payment of their memberships.&lt;/p&gt;

&lt;p&gt;Sam started new mobs and ran many free trial F2F sessions which are looking like they might make for a nice set of upgrades and new members next month.  We shall have to wait and see.&lt;/p&gt;

&lt;p&gt;We rolled out video embeds for the NHS project and are still negotiating with the literary society over their web and database project.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I keep meaning to move all the data on Premiums into some coherent form and also to reach out to members consistenly to let them know about our new offerings.  This month I&amp;rsquo;ve just been in a scramble to make sure I reach out to everyone.  I&amp;rsquo;m going to try and keep the report template for the next month open and make updates to it as they come in.  I&amp;rsquo;m reticent to start recording all our data about Premium members in AgileCRM.  It says we&amp;rsquo;d need to pay for automation.  I&amp;rsquo;m tempted to start putting notes into a spreadsheet - or should all the data be being stored in WebSiteOne?  We&amp;rsquo;re starting to improve the model there, with work from Michael and Marian; and me updating the data itself.  &lt;/p&gt;

&lt;p&gt;I think the key use case for AgileCRM, or any system for showing status on Premiums, is to allow mentors such as Lara and Federico to be able to get a bit more background on the different people they&amp;rsquo;re talking to.  There are privacy concerns with all this personal data.  Maybe we need some Mentors Convenant that would be agreed to before we give new mentors access to all the data on the mentees &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
