<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-10-31T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>AV EcoSystem Making Events Welcoming</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/31/av-ecosystem-review-making-events-welcoming/"/>
    <id>http://blog.url.com/2017/10/31/av-ecosystem-review-making-events-welcoming/</id>
    <published>2017-10-31T00:00:00+00:00</published>
    <updated>2018-01-11T20:19:50+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="welcoming" src="/images/../images/welcoming.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So I have the new code on staging to avoid reposting old YouTube URLs on Slack. So let&amp;rsquo;s start by pushing that out to production:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (staging)]$ 
→ git pull origin staging
warning: redirecting to https://github.com/AgileVentures/WebsiteOne/
From http://github.com/AgileVentures/WebsiteOne
 * branch              staging    -&amp;gt; FETCH_HEAD
Already up-to-date.
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (staging)]$ 
→ git checkout master
Switched to branch 'master'
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (master)]$ 
→ git rebase staging
First, rewinding head to replay your work on top of it...
Fast-forwarded master to staging.
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (master)]$ 
→ git push origin master
warning: redirecting to https://github.com/AgileVentures/WebsiteOne/
Total 0 (delta 0), reused 0 (delta 0)
To http://github.com/AgileVentures/WebsiteOne
   a3521705..259467f6  master -&amp;gt; master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hopefully that will be one less thing to worry about this week.  Now the other issue was the one pointed out by Will, that having the YouTube message being almost identical to the hangout link, which can be confusing.  We have a ticket for that:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1921"&gt;https://github.com/AgileVentures/WebsiteOne/issues/1921&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I kicked off an asynchronous vote in the websiteone channel.  I&amp;rsquo;m conflicted about whether this is the thing to work on.  I really want our events to be as welcoming as possible, but there&amp;rsquo;s so many potentially valuable things in the waffle board.  Let&amp;rsquo;s at least start this one; although then again, maybe that&amp;rsquo;s the wrong approach.  Perhaps I should be clearing out existing and stale tickets.  The challenge with this ticket is that I&amp;rsquo;ve put the welcoming message in the title of the main daily scrums:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum and Pair Hookup - All Welcome :-) Discuss Any Project, Ask Any Question, Or Just Listen In :-)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;and the YouTube slack ping is using the following ruby to generate the hyperlink:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|Video/Livestream for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so the entire title appears in the hyperlink.  Perhaps the solution would be:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|Click here to listen in to the Video/Livestream&amp;gt; for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;m caught between not wanting to have the welcoming message appear on everbody&amp;rsquo;s scrum events, and wanting to be able to refer to the title separately.  &lt;/p&gt;

&lt;p&gt;The message for the hangout link is as follows:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hangout_url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and maybe it should be &lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hangout_url&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|Click here to participate in&amp;gt; &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;although I guess we&amp;rsquo;d acutally like the folks who want to listen in to actually join the hangout (as Will did) so that we can get them talking &amp;hellip; hmm :-)  Maybe a reasonable compromise would be:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;|Video/Livestream&amp;gt; for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Part of the issue is that it&amp;rsquo;s difficult to judge it until one sees how it actually appears in Slack.  Which makes me wonder if I can run it locally for one of our Slack test instances.  In the background Heroku is having issues and I can&amp;rsquo;t deploy yesterday&amp;rsquo;s fix to production :-(&lt;/p&gt;

&lt;p&gt;Thinking back about the AV ecosystem review philosophy I recall that my last idea starting from the ads we serve on Google is that we could be serving ads about the free access to mobs and f2f sessions.  We could just do that on Google, but we&amp;rsquo;re talking about a signup form that allows us to track how many are signing up from particular campaigns.  Which is then another thing that sits on the TODO list and blocks us from using the Google ad revenue from working on something that might actually lead to new sign ups for paid services, which would be obvious whether we are tracking how many people signed up for them or not &amp;hellip; could we be tracking the social media likes and follows?&lt;/p&gt;

&lt;p&gt;Other things are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;performance issues on the site&lt;/li&gt;
&lt;li&gt;tawk.to site integrated chat system&lt;/li&gt;
&lt;li&gt;replacing the mercury editor so we can move to Rails 5&lt;/li&gt;
&lt;li&gt;supporting private events&lt;/li&gt;
&lt;li&gt;looking at long running cukes&lt;/li&gt;
&lt;li&gt;hosting our own jitsi&lt;/li&gt;
&lt;li&gt;making the main page counter dynamic&lt;/li&gt;
&lt;li&gt;notifying the project creator when people join a project&lt;/li&gt;
&lt;li&gt;having getting started page tick off progress&lt;/li&gt;
&lt;li&gt;better modelling of premium users&lt;/li&gt;
&lt;li&gt;allowing premium users to change payment methods&lt;/li&gt;
&lt;li&gt;start hangout button not working &amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I don&amp;rsquo;t think I&amp;rsquo;ve experienced any 500 timeouts on the events pages since we rolled out the the icecube upgrade.  I&amp;rsquo;m conflicted about tawk.to after seeing OdinProjects lovely gitter integration.  Replacing the mercury editor feels like a big job.  Corey seems to be stalled working on private events.  The cukes are an ongoing bleed.  I should look at jitsi with Sigu &amp;hellip; making the main page counter dynamic would probably help us look more professional.  Notifying project creators when people click to join their projects could help connect people, as could adding some progress tracking to the &amp;ldquo;getting started&amp;rdquo; pages.  Better modelling of all the Premium users would probably make my life easier and support better predictions, while allowing Premiums to change payment plans would help money flow.  The Start Hangout button not working is a nasty fail point for newcomers trying to pair - particularly those starting the MOOC &amp;hellip;&lt;/p&gt;

&lt;p&gt;Gosh, I&amp;rsquo;m really not sure what to work on and the time change means the scrum is coming up soon.  I think I&amp;rsquo;ll have to leave it there today.  I really do want to make events more welcoming, but I think I need to spend some more time reflecting on how to divide up my labour &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Dripping Tap</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/30/av-ecosystem-review-dripping-tap/"/>
    <id>http://blog.url.com/2017/10/30/av-ecosystem-review-dripping-tap/</id>
    <published>2017-10-30T00:00:00+00:00</published>
    <updated>2018-01-10T20:46:57+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="dripping tap" src="/images/dripping_tap.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Back after a break, getting back into the routine.  One thing being away highlighted was that we have awesome enthusiastic new members who have the run the scrums while I was away, and awesome enthusiastic long term members (i.e. federico) running the mobs and marketing meetings.  Having other folks start the scrums highlighted one of the outstanding niggles that we have with the new manual updates that Lokesh was working on over the summer.  For those scrums that repeat daily, pushing a new hangout live seems to also push out the youtube link from the previous day.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d been coping with this by simply deleting the incorrect link, but that&amp;rsquo;s a hacky manual fix that&amp;rsquo;s going to flummox any new folks.  It&amp;rsquo;s been a dripping tap for a while.  Does it indicate that I&amp;rsquo;m fundamentally incompetent that I haven&amp;rsquo;t fixed it or got someone to fix it?  I hope not.  There always seems to be fifty different things that need to be done and it&amp;rsquo;s usually unclear what the long term pros and cons of each will be.  Okay, no more navel-gazing, let&amp;rsquo;s see if we can fix this issue that burns up my time, and is confusing for others.&lt;/p&gt;

&lt;p&gt;The confusing thing about this bug is that it took me a while to work out the pattern of when it occurred.  Specifically it only occurs when there was an event of the same type that ran the day before, and then not every time.  I think it may be occurring when an event is started within 24 hours of the previous event.  I had previously opened a ticket on the subject:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1809"&gt;https://github.com/AgileVentures/WebsiteOne/issues/1809&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So the clear procedure here would be to try and replicate the issue with a cucumber test.  Although I can&amp;rsquo;t seem to help myself but first have a little gander at the code that I think might cause the problem.  The EventsController grabs the most recent_hangout like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show&lt;/span&gt;
    &lt;span class="vi"&gt;@event_schedule&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;next_occurrences&lt;/span&gt;
    &lt;span class="vi"&gt;@recent_hangout&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="vi"&gt;@event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;recent_hangouts&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;partial: &lt;/span&gt;&lt;span class="s1"&gt;'hangouts_management'&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;xhr?&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the form for manually updating the event includes the YouTube URL from this &lt;code&gt;@recent_hangout&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;hidden_field_tag&lt;/span&gt; &lt;span class="s1"&gt;'yt_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@recent_hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;try!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:yt_url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the &lt;code&gt;@recent_hangout&lt;/code&gt; is grabbed from the database by some code in the events model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recent_hangouts&lt;/span&gt;
    &lt;span class="n"&gt;event_instances&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'updated_at BETWEEN ? AND ?'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ago&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;end_of_day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;updated_at: :desc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I wonder if we need a different date range in here &amp;hellip;?  So here&amp;rsquo;s where I might run off into spiking code, so I drop back to create a new Cucumber scenario:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Event doesn't ping old youtube URL
    &lt;span class="err"&gt;Given the date is "2014 Feb 5th 6&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;59am"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; that we're spying on the SlackService
    &lt;span class="nf"&gt;When&lt;/span&gt; I manually set a hangout link for event &lt;span class="s"&gt;"Repeat Scrum"&lt;/span&gt;
    &lt;span class="nf"&gt;Then&lt;/span&gt; the Hangout URL is posted in Slack
    &lt;span class="nf"&gt;And&lt;/span&gt; the Youtube URL is not posted in Slack
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which relies on a couple of new step definitions&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;And&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^that we're spying on the SlackService$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SlackService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt; &lt;span class="ss"&gt;:post_yt_link&lt;/span&gt;
  &lt;span class="n"&gt;allow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SlackService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt; &lt;span class="ss"&gt;:post_hangout_notification&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the Youtube URL is not posted in Slack$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SlackService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt; &lt;span class="ss"&gt;:post_yt_link&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;And&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the Hangout URL is posted in Slack$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;SlackService&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt; &lt;span class="ss"&gt;:post_hangout_notification&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we catch the error we&amp;rsquo;ve been experiencing in the live system:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  Scenario: Event doesn&lt;span class="s1"&gt;'t ping old youtube URL                  # features/hangouts/edit_hangout_url.feature:41
    Given the date is "2014 Feb 5th 6:59am"                     # features/step_definitions/event_steps.rb:94
    And that we'&lt;/span&gt;re spying on the SlackService                   &lt;span class="c"&gt;# features/step_definitions/hangout_steps.rb:212&lt;/span&gt;
    When I manually &lt;span class="nb"&gt;set &lt;/span&gt;a hangout link &lt;span class="k"&gt;for &lt;/span&gt;event &lt;span class="s2"&gt;"Repeat Scrum"&lt;/span&gt; &lt;span class="c"&gt;# features/step_definitions/hangout_steps.rb:108&lt;/span&gt;
    Then the Hangout URL is posted &lt;span class="k"&gt;in &lt;/span&gt;Slack                     &lt;span class="c"&gt;# features/step_definitions/hangout_steps.rb:221&lt;/span&gt;
    And the Youtube URL is not posted &lt;span class="k"&gt;in &lt;/span&gt;Slack                  &lt;span class="c"&gt;# features/step_definitions/hangout_steps.rb:217&lt;/span&gt;
      &lt;span class="o"&gt;(&lt;/span&gt;SlackService&lt;span class="o"&gt;)&lt;/span&gt;.post_yt_link&lt;span class="o"&gt;(&lt;/span&gt;no args&lt;span class="o"&gt;)&lt;/span&gt;
          expected: 0 &lt;span class="nb"&gt;times &lt;/span&gt;with any arguments
          received: 1 &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;RSpec::Mocks::MockExpectationError&lt;span class="o"&gt;)&lt;/span&gt;
      ./features/step_definitions/hangout_steps.rb:218:in &lt;span class="sb"&gt;`&lt;/span&gt;/^the Youtube URL is not posted &lt;span class="k"&gt;in &lt;/span&gt;Slack&lt;span class="nv"&gt;$/&lt;/span&gt;&lt;span class="s1"&gt;'
      features/hangouts/edit_hangout_url.feature:46:in `And the Youtube URL is not posted in Slack'&lt;/span&gt;

Failing Scenarios:
cucumber features/hangouts/edit_hangout_url.feature:41 &lt;span class="c"&gt;# Scenario: Event doesn't ping old youtube URL&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So can we fix it?  I think the date range must be wrong somehow - beginning of day vs end of day, or subtract the duration rather than adding it &amp;hellip; my intuitions are not bearing fruit - I hook the thing on the debugger:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;212, 221] &lt;span class="k"&gt;in&lt;/span&gt; /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/app/models/event.rb
   212: 
   213:   def recent_hangouts
   214:     debugger
   215:     event_instances
   216:       .where&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'updated_at BETWEEN ? AND ?'&lt;/span&gt;, 1.days.ago + duration, DateTime.now.end_of_day&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="gp"&gt;=&amp;gt; &lt;/span&gt;217:       .order&lt;span class="o"&gt;(&lt;/span&gt;updated_at: :desc&lt;span class="o"&gt;)&lt;/span&gt;
   218:   end
   219: 
   220:   def less_than_ten_till_start?
   221:     &lt;span class="k"&gt;return &lt;/span&gt;&lt;span class="nb"&gt;true &lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;within_current_event_duration?
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; 1.days.ago + duration
Tue, 04 Feb 2014 06:59:22 UTC +00:00
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; DateTime.now.end_of_day
Wed, 05 Feb 2014 23:59:59 +0000
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; event_instances.where&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'updated_at BETWEEN ? AND ?'&lt;/span&gt;, 1.days.ago + duration, DateTime.now.end_of_day&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="c"&gt;#&amp;lt;ActiveRecord::AssociationRelation [#&amp;lt;EventInstance id: 2, event_id: 2, title: "HangoutsFlow", hangout_url: "http://hangout.test", created_at: "2014-02-04 07:00:00", updated_at: "2014-02-04 07:03:00", uid: "100", category: "Scrum", project_id: nil, user_id: 1, yt_video_id: "QWERT55", participants: {"0"=&amp;gt;{"id"=&amp;gt;"hangout2750757B_ephemeral.id.google.com^a85dcb4670", "hasMicrophone"=&amp;gt;"true", "hasCamera"=&amp;gt;"true", "hasAppEnabled"=&amp;gt;"true", "isBroadcaster"=&amp;gt;"true", "isInBroadcast"=&amp;gt;"true", "displayIndex"=&amp;gt;"0", "person"=&amp;gt;{"id"=&amp;gt;"108533475599002820142", "displayName"=&amp;gt;"Alejandro Babio", "image"=&amp;gt;{"url"=&amp;gt;"https://lh4.googleusercontent.com/-p4ahDFi9my0/AAAAAAAAAAI/AAAAAAAAAAA/n-WK7pTcJa0/s96-c/photo.jpg"}, "na"=&amp;gt;"false"}, "locale"=&amp;gt;"en", "na"=&amp;gt;"false"}}, hoa_status: "started", url_set_directly: true, youtube_tweet_sent: false&amp;gt;]&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think I see the problem - this duration addition is not working &amp;hellip;&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; 1.days.ago + duration
Tue, 04 Feb 2014 07:00:00 UTC +00:00
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; 1.days.ago
Tue, 04 Feb 2014 06:59:52 UTC +00:00
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; 1.days.ago + 30.minutes
Tue, 04 Feb 2014 07:30:22 UTC +00:00
&lt;span class="o"&gt;(&lt;/span&gt;byebug&lt;span class="o"&gt;)&lt;/span&gt; 1.days.ago + duration.minutes
Tue, 04 Feb 2014 07:15:27 UTC +00:00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the fix:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;recent_hangouts&lt;/span&gt;
    &lt;span class="n"&gt;event_instances&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'updated_at BETWEEN ? AND ?'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;ago&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;duration&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;minutes&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;DateTime&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;end_of_day&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;order&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;updated_at: :desc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but will it break lots of other things? The other scenarios in that feature pass, so I push the fix up onto the bugfix branch and let the CI run, while kicking off the full set of hangout features locally.  The cukes still take a long time to run even on my local machine (&amp;gt;10 minutes), so I tend to run them in small batches.  Another dripping tap perhaps &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Performance Tuning FTW</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/20/av-ecosystem-review-performance-tuning-ftw/"/>
    <id>http://blog.url.com/2017/10/20/av-ecosystem-review-performance-tuning-ftw/</id>
    <published>2017-10-20T01:00:00+01:00</published>
    <updated>2018-01-09T21:50:26+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="preformance tuning" src="/images/performance_tuning.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Late to the blogface yada, yada, yada.  I&amp;rsquo;m really enjoying performance tuning.  Let&amp;rsquo;s take another look at what&amp;rsquo;s going on.  I can see from yesterday&amp;rsquo;s test runs that I quickly pushed the AV site into to heavy memory error territory.  I also restarted the server after the tests and what&amp;rsquo;s interesting is to see that we actually start encountering memory errors on the staging server in the absence of performance testing:&lt;/p&gt;

&lt;p&gt;&lt;img alt="heroku metrics" src="https://dl.dropbox.com/s/532rzq46emgci3h/Screenshot%202017-10-20%2010.19.45.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;The staging server is not coming under any particular load, which implies that we&amp;rsquo;ve got some sort of memory leak just in the resting state of the server.  Not ideal.  It&amp;rsquo;s also clear that the simple throw money at the problem would be to double the size of the memory, and help Heroku with their bottom line, but it would be far more satisfying to actually solve the problem.  I&amp;rsquo;ve had no follow up on my question in the issues of &lt;code&gt;derailed_benchmarks&lt;/code&gt; about why we get an error running &lt;code&gt;perf:mem_over_time&lt;/code&gt; on the production app locally.  However the Heroku metrics indicate we do have a memory leak, so perhaps we can skip that and move on the analysis phase.  All the &lt;code&gt;perf:mem_over_time&lt;/code&gt; operation tells us is that we are using 211MiB on startup, which I can see matches the restart value for memory usage on heroku.  Let&amp;rsquo;s try the &amp;ldquo;Dissecting a Memory Leak&amp;rdquo; suggestion: &lt;code&gt;perf:objects&lt;/code&gt;.  That may just hit the same error, and in fact is does. &lt;/p&gt;

&lt;p&gt;I had two quick ideas for fixes - turning off https locally and checking that I can see the app in a browser running locally in production mode.  I did the former and was able to do the latter, and didn&amp;rsquo;t see an improvement.  But then realised I was turning off https in LocalSupport, not WebSiteOne.  I switched that off and we were in business:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ AIRBRAKE_PROJECT_ID=6 AIRBRAKE_API_KEY=b681e09 bundle exec derailed exec perf:mem_over_time
Booting: production
Endpoint: "/"
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:72: warning: already initialized constant DERAILED_APP
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:23: warning: previous definition of DERAILED_APP was here
PID: 92587
213.2734375
237.4296875
247.52734375
252.6953125
257.9375
260.125
262.21875
265.7578125
272.25
274.1640625
274.796875
275.80078125
276.546875
277.171875
277.60546875
278.09375
278.6015625
278.8359375
279.28125
281.1171875
281.26953125
281.390625
281.57421875
281.67578125
281.859375
281.03125
270.57421875
270.9296875
271.6640625
271.984375
272.671875
250.19921875
251.328125
242.16015625
240.8203125
241.41796875
241.546875
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So what we are waiting to see here is if the memory never levels off.  Another waiting activity.  And actually sometimes the memory level is dropping before gradually creeping up again - hmmm.  And nowhere near the levels we&amp;rsquo;re seeing running this on Heroku.  Of course this test is profiling what&amp;rsquo;s happening locally on the OSX machine, not whatever virtual machine is in use on Heroku.  Here&amp;rsquo;s our puma config:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;workers Integer(ENV['PUMA_WORKERS'] || 3)
threads Integer(ENV['MIN_THREADS']  || 1), Integer(ENV['MAX_THREADS'] || 16)

preload_app!

rackup      DefaultRackup
port        ENV['PORT']     || 3000
environment ENV['RACK_ENV'] || 'development'

on_worker_boot do
  # worker specific setup
  ActiveSupport.on_load(:active_record) do
    config = ActiveRecord::Base.configurations[Rails.env] ||
                Rails.application.config.database_configuration[Rails.env]
    config['pool'] = ENV['MAX_THREADS'] || 16
    ActiveRecord::Base.establish_connection(config)
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So things we could try include:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;reducing the number of puma workers (although we have 2 on staging and 1 on production already)&lt;/li&gt;
&lt;li&gt;try a puma worker killer&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Other things that spring to mind are adjusting the number of threads (MAX&lt;em&gt;THREADS = 3 on staging, 2 on production), but I think we had a round of tweaking puma workers and threads to no avail.   The rest of this Puma config looks okay.  RACK&lt;/em&gt;ENV must be production &amp;hellip; but now I can run &lt;code&gt;perf:objects&lt;/code&gt; and I get the following info about which gems are allocating the most memory:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;allocated memory by gem
-----------------------------------
   7874184  ice_cube-0.11.1
   7862554  activesupport-4.2.10
   1372984  tzinfo-1.2.3
    760790  ruby-2.3.1/lib
    751451  activerecord-4.2.10
    121937  WebsiteOne/app
    114186  newrelic_rpm-4.1.0.333
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the retained memory by location:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;retained memory by location
-----------------------------------
     23609  /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/app/views/visitors/index.html.erb:1
      5200  /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/newrelic_rpm-4.1.0.333/lib/new_relic/agent/transaction/trace_node.rb:24
      5016  /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/newrelic_rpm-4.1.0.333/lib/new_relic/agent/transaction/trace.rb:54
      3384  /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/rack-1.6.8/lib/rack/mock.rb:92
      2240  /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/newrelic_rpm-4.1.0.333/lib/new_relic/agent/transaction/trace_node.rb:35
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and various other stuff that makes it feel like it&amp;rsquo;s the event scheduling time and timezone stuff that&amp;rsquo;s causing the biggest memory headaches.  The Puma worker killer is a stop gap.  I guess the best looking options are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;try removing the &lt;code&gt;nearest_time_zone&lt;/code&gt; gem since it&amp;rsquo;s the biggest memory hog&lt;/li&gt;
&lt;li&gt;dissect the visitors index.html.erb file to work out where it&amp;rsquo;s snagging on memory&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I tried removing the timing section and re-running the memory performance over time, but it just jumped up.  I ran the perf:objects again and that knocked the index.html.erb file out of the &amp;ldquo;retained memory by location&amp;rdquo; list.  I notice that the home page is not using the application layout for some reason.  Time with zone from active&lt;em&gt;support is still being heavily used.  It seems like ice&lt;/em&gt;cube is being heavily activated, even when I think I&amp;rsquo;ve removed the time/scheduling stuff from the home page.  I wonder if that&amp;rsquo;s just its resting state &amp;hellip;?  I run the analysis again removing everything from the home page and yes the icecube stuff disappears.  It looks like we are rendering other sub-elements that are pulling in info on event scheduling hmmm &amp;hellip; so I guess I should analyze the different partials:&lt;/p&gt;

&lt;p&gt;1) &lt;em&gt;head.html.erb: javascript and stylesheet include tags - nothing suspicious
2) _navbar.html.erb: checks if user is signed in, user presentation, checking for next event (avoided on home page?)
3) _require&lt;/em&gt;users&lt;em&gt;profile.html.erb:  some stuff from user - rarely displayed
4) _footer.html.erb: static page paths and not much else
5) _round&lt;/em&gt;banners.html.erb: next event stuff&lt;/p&gt;

&lt;p&gt;&lt;code&gt;nearest_time_zone&lt;/code&gt; is tied up with various things for the User and looks like it will be tricky to understand, let alone remove &amp;hellip; re-running it seems like it&amp;rsquo;s only the event portion of the round banners that&amp;rsquo;s giving us memory overhead here.  Weirdly I can&amp;rsquo;t even work out where the event object is coming from &amp;hellip; ah, we have some before_filters in the ApplicationController:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  before_filter :get_next_scrum, :store_location, unless: -&amp;gt; { request.xhr? }

  def get_next_scrum
    @next_event = Event.next_occurrence(:Scrum)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which I guess brings us to the main issue for the loading of the home page, which is that we want to display the time to the next event, and that requires working out when the next event is, and we are generating the full schedule from IceCube on the fly each time.  In principle it would be far more efficient to have it so that all events, and their repeats, were stored (say in a db) and then fetched read-only when needed.  They could then be updated on write operations, which would be far less frequent &amp;hellip; but that would be a major refactoring of the system.  If the homepage still wants to include the countdown, then a static site is not going to help much &amp;hellip; hmmm.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Task Switching</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/19/av-ecosystem-review-task-switching/"/>
    <id>http://blog.url.com/2017/10/19/av-ecosystem-review-task-switching/</id>
    <published>2017-10-19T01:00:00+01:00</published>
    <updated>2018-01-08T21:45:42+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="task switching" src="/images/task_switching.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;They say that task-switching is very inefficient and that while we think we&amp;rsquo;re multi-tasking we&amp;rsquo;re actually just doing one task after another and not achieving productive focus on any.  Ironically I seem to be task switching all day long, and sometimes that&amp;rsquo;s all about managing motivation.  Yesterday I couldn&amp;rsquo;t decide between making a middleman landing page for the AV main site and investigating the performance issues we have with the site on Heroku.  So I started off on both &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tansaku/av-landing-page"&gt;https://github.com/tansaku/av-landing-page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;On the middleman side I think the key things I need to check are:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;deployment to github pages&lt;/li&gt;
&lt;li&gt;CSS pipeline&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;while for heroku performance it&amp;rsquo;s just reading docs.  I pull the docs up on my big monitor.  I install loader.io on the staging site, but find it is already installed.  Although it hasn&amp;rsquo;t ever been used by the look of it &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img alt="getting started tips from loader.io" src="https://dl.dropbox.com/s/reu4c637j16izcc/Screenshot%202017-10-18%2009.58.50.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;and so I set up an initial load test:&lt;/p&gt;

&lt;p&gt;&lt;img alt="intial load test form" src="https://dl.dropbox.com/s/lx5yei9gm1udy6w/Screenshot%202017-10-18%2010.00.06.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;but I can&amp;rsquo;t seem to test against our custom endpoint - I send a help request for that.  In the meantime I have to get a static file served on staging in order to start the load test &amp;hellip; so I get a pull request in for that.  I check that it works locally, but I&amp;rsquo;ll need that to pass CI to get it onto staging.  I could force it up there, but it gives me a reasonable excuse to task switch and check the middleman items.  If I recall correctly we used a middleman-gh-pages plugin for the static nonprofit site in order to get middleman on github pages, but I wonder if that will work with the latest version of middleman?&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/edgecase/middleman-gh-pages"&gt;MiddleManGHPages&lt;/a&gt; hasn&amp;rsquo;t been updated in a couple of years and there is also now &lt;a href="https://github.com/middleman-contrib/middleman-deploy"&gt;MiddleManDeploy&lt;/a&gt; which has been more recently updated and has more stars.  A &lt;a href="https://ashfurrow.com/blog/building-static-sites-with-middleman/"&gt;2017 blog&lt;/a&gt; mentions successfully using middleman-gh-pages and it is working for us on the static site with a middleman 4.1.7.  Stick with what I know? Try something new?  The following code in the README of middleman-deploy makes me want to try it:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# Rakefile&lt;/span&gt;
&lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="ss"&gt;:deploy&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;deploy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="s2"&gt;"Deploying to &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
    &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"TARGET=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;env&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; bundle exec middleman deploy"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:staging&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="ss"&gt;:staging&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;:production&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;deploy&lt;/span&gt; &lt;span class="ss"&gt;:production&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ rake deploy:staging
$ rake deploy:production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I like having staging and production endpoints - something I&amp;rsquo;ve been missing in the static nonprofit site.  In the meantime the pull request for the loaderio static page passed, so I pull that in and will need to wait for it to deply to develop before I can then move it on to staging for testing (or I test on develop &amp;hellip;), back to middleman deploy I find I need to upgrade to a newer version of middleman-deploy to get things working:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/middleman-contrib/middleman-deploy/issues/93"&gt;https://github.com/middleman-contrib/middleman-deploy/issues/93&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but so the current README is out of date and the PR that fixes this has been hanging around for a year &amp;hellip; then there&amp;rsquo;s another issue to fix:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/middleman-contrib/middleman-deploy/issues/100"&gt;https://github.com/middleman-contrib/middleman-deploy/issues/100&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and then &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;deploy&lt;/code&gt; both work, and I would appear to have successfully deployed to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://tansaku.github.io/av-landing-page/"&gt;https://tansaku.github.io/av-landing-page/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;although I&amp;rsquo;d feel better if the middleman-deploy 2.0 gem was out of alpha &amp;hellip; and I notice that the default middleman site assets are not loading on gh-pages.  Something to multi-task on tomorrow as I start the load tests &amp;hellip; :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Emotional Hurdles</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/18/av-ecosystem-review-emotional-hurdles/"/>
    <id>http://blog.url.com/2017/10/18/av-ecosystem-review-emotional-hurdles/</id>
    <published>2017-10-18T01:00:00+01:00</published>
    <updated>2018-01-08T21:14:21+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="hurdles" src="/images/hurdles.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Late to the blogface due to feelings of lethargy and accidentally reading all my Slack and Emails.  Not so many of them as I was checking them pretty late last night as well - blurgh.  However the mixed strategy of investigating performance and a new static landing page site in parallel seems to be going reasonably well.  At least I&amp;rsquo;m making some progress on both fronts.  I&amp;rsquo;ve got the loaderio tag on staging:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://staging.agileventures.org/loaderio-bd60fb88537b106821044fd9098f271c.html"&gt;https://staging.agileventures.org/loaderio-bd60fb88537b106821044fd9098f271c.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;And the helpful folks at loaderio showed me how I could get the load test to hit &lt;a href="https://staging.agileventures.org"&gt;https://staging.agileventures.org&lt;/a&gt; rather than the herokuapp URL, so time to kick off a load test.  But actually no, because now we have a new hash code lookup, blargh.  So I could try and make this dynamic, but perhaps it won&amp;rsquo;t change now that we have fixed to staging.agileventures.org, but then again perhaps it will change for every new test we create.  Verification via DNS is now an option &amp;hellip; either way it&amp;rsquo;s going to take an hour or two to actually get to the load test.  So I set up a dynamic approach with the following in the routes file:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loaderio_token&lt;/span&gt;
  &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'LOADERIO_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"loaderio-296a53739de683b99e3a2c4d7944230f"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;WebsiteOne&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;routes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;draw&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

  &lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;loaderio_token&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s1"&gt;'static_pages#loaderio'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this in the static pages controller&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;loaderio&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;plain: &lt;/span&gt;&lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'LOADERIO_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;||&lt;/span&gt; &lt;span class="s2"&gt;"loaderio-296a53739de683b99e3a2c4d7944230f"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;layout: &lt;/span&gt;&lt;span class="kp"&gt;false&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I get a pull request in, but now I have to wait for the CI to pass.  So I have to task swap somewhat.  It&amp;rsquo;s all about the emotional hurdles.  I was de-motivated to look into performance testing as I thought it would be a pain to set up and difficult to get to the bottom of the problem.  I&amp;rsquo;m reinvigorated by having found loaderio, even though I haven&amp;rsquo;t actually got it working yet.  Conversely while I was more excited about getting a middleman landing page set up, I&amp;rsquo;ve now taken an emotional knock due to the challenges I encountered yesterday with middleman-deploy.  And that&amp;rsquo;s even when I got it all working, but the knock is from finding that both middleman-gh-pages and middleman-deploy are looking a little under-maintained.  Middleman-deploy is marginally more active, and does have some nice functionality.  My next task there is sorting out the asset pathways, and actually maybe they will just start working when we deploy to a custom domain &amp;hellip; although I was pestering myself with instead staying focused on the performance issue and reading more about Ruby memory management.  Here&amp;rsquo;s what Heroku says:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;If you’re getting R14 - Memory quota exceeded errors, it means your application is using swap memory. Swap uses the disk to store memory instead of RAM. Disk speed is significantly slower than RAM, so page access time is greatly increased. This leads to a significant degradation in application performance. An application that is swapping will be much slower than one that is not. No one wants a slow application, so getting rid of R14 Memory quota exceeded errors on your application is very important.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The suggested solutions include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#ruby-2-0-upgrade"&gt;Upgrading to at least Ruby 2.1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#memory-leaks"&gt;Looking for memory leaks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#too-many-workers"&gt;Avoiding too many webserver workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#forking-behavior-of-puma-worker-processes"&gt;Forking behavior of Puma worker processes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#too-much-memory-used-at-runtime"&gt;Too much memory used at runtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#gc-tuning"&gt;GC tuning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use#dyno-size-and-performance"&gt;Dyno size and performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So we&amp;rsquo;re already on Ruby 2.3.1, but I don&amp;rsquo;t think we spent any time looking for memory leaks yet, and the project &lt;a href="https://github.com/schneems/derailed_benchmarks"&gt;derailed_benchmarks&lt;/a&gt; appears to be something we can run locally to check, so we can quickly get into that while we wait for the load test environment to be ready &amp;hellip; I follow the install instructions and kick off &lt;code&gt;bundle exec derailed bundle:mem&lt;/code&gt; to profile our gems.  I think must have done this before as I recognise the output:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (1826_derailed_benchmarks)]$ 
→ bundle exec derailed bundle:mem
TOP: 120.8359 MiB
  nearest_time_zone: 48.3281 MiB
  rails/all: 17.0625 MiB
    active_record/railtie: 7.7188 MiB
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the identification of &lt;code&gt;nearest_time_zone&lt;/code&gt; as the most memory consuming gem, more even than Rails itself.  After Rails the following three are the biggest:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  pivotal-tracker-api: 9.3438 MiB
  bootstrap-sass: 6.1289 MiB
  octokit: 5.1992 MiB
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;what I don&amp;rsquo;t think we ran before was the check for leaking memory &amp;hellip;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (1826_derailed_benchmarks)]$ 
→ bundle exec derailed exec perf:mem_over_time
Booting: production
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/airbrake-ruby-2.2.2/lib/airbrake-ruby/notifier.rb:33:in `initialize': :project_id is required (Airbrake::Error)
    from /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/airbrake-ruby-2.2.2/lib/airbrake-ruby.rb:135:in `new'
    from /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/airbrake-ruby-2.2.2/lib/airbrake-ruby.rb:135:in `configure'
    from /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/config/initializers/airbrake.rb:2:in `&amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which gets stuck because trying to run in production we need an airbrake id, amongst many other things &amp;hellip; so in a flurry of firing and forgetting I get an AIRBRAKE token and id in and create a production database:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ pg_dump -U postgres websiteone_development | psql -U postgres websiteone_production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and also deploy the loaderio dynamic token to staging and also set up a landing.agileventures.org domain and configure that &amp;hellip; now the deploy to staging won&amp;rsquo;t finish till the CI passes so I can&amp;rsquo;t actually fire and forget that.  I can try &lt;a href="http://landing.agileventures.org"&gt;http://landing.agileventures.org&lt;/a&gt; and in fact that does exactly what I suspect - it&amp;rsquo;s working and the CSS/JS assets are being pulled in correctly.  So that&amp;rsquo;s a nice unblocked feeling &amp;hellip; but with derailed_benchmarks I&amp;rsquo;m stuck on:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ AIRBRAKE_PROJECT_ID=6 AIRBRAKE_API_KEY=XXXX bundle exec derailed exec perf:mem_over_time
Booting: production
Endpoint: "/"
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:72: warning: already initialized constant DERAILED_APP
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:23: warning: previous definition of DERAILED_APP was here
PID: 79590
211.39453125
/Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:92:in `call_app': Bad request:  (RuntimeError)
    from /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:174:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
    from /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:173:in `times'
    from /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/derailed_benchmarks-1.3.2/lib/derailed_benchmarks/tasks.rb:173:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so after a few searches I open an issue:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/schneems/derailed_benchmarks/issues/110"&gt;https://github.com/schneems/derailed_benchmarks/issues/110&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;and call it a day &amp;hellip; but no I see that staging has depoyed so I kick off a test:&lt;/p&gt;

&lt;p&gt;&lt;img alt="config the homepage test" src="https://dl.dropbox.com/s/f5e6tu71lctah7o/Screenshot%202017-10-19%2010.53.45.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;which gives these results:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/5han2hh44m7n1bx/Screenshot%202017-10-19%2010.54.38.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;which I now need to work out how to interpret - apparently the test was aborted due to reaching an error threshold.  I think what we are seeing here is the requests timing out as the server comes under heavy load.  I need to run this again while watching the logs &amp;hellip; and when I do I see the memory errors:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2017-10-19T09:58:58.775050+00:00 heroku[web.1]: Process running mem=680M(133.0%)
2017-10-19T09:58:58.775050+00:00 heroku[web.1]: Error R14 (Memory quota exceeded)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so at least now we have a way to test possible solutions to the problem &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Death Warmed Up</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/17/av-ecosystem-review-death-warmed-up/"/>
    <id>http://blog.url.com/2017/10/17/av-ecosystem-review-death-warmed-up/</id>
    <published>2017-10-17T01:00:00+01:00</published>
    <updated>2018-01-08T21:14:21+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="death" src="/images/death.png" /&gt;&lt;/p&gt;

&lt;p&gt;I am having trouble getting started this morning.  &amp;ldquo;Death warmed up&amp;rdquo; is hyperbole, but despite my best efforts it&amp;rsquo;s 10am before I&amp;rsquo;ve hit the blogface.  Various things interfered.  A 2.5 km jog with my twin boys, although to be honest they weren&amp;rsquo;t slowing me down.  Doing extra long Japanese tests for my older boy now (he&amp;rsquo;s 12); five Karate kata&amp;rsquo;s - my morning routine is starting to take a fair chunk of time.  I felt lethargic independently of all that - my stomach is a bit off.  I&amp;rsquo;ve been experimenting with reducing the amount of dairy in my diet.  Also I gave up coffee for the last three weeks.  This really is the sort of situation I&amp;rsquo;d self-medicate with caffeine to get going, but I have this idea that that isn&amp;rsquo;t a good approach for me in the long run.&lt;/p&gt;

&lt;p&gt;Also there&amp;rsquo;s the never-ending sets of chores.  Ordering new contact lenses this morning (should I get laser eye-surgery? or am I too attached to my look with glasses? I only use contact lenses for sport), driving to three supermarkets last night to finally find small bottles of carbonated water (my vice) and to the hardware store to buy equipment to help with redoing the front yard during my time off next week (kid&amp;rsquo;s half term).  And then I&amp;rsquo;m fielding quotes from builders to re-do our upstairs bathroom.  So many things suck up time :-)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d had the idea this week to start building a middleman site to begin prototyping new front pages for the main AgileVentures website.  I did make some tweaks to the Getting Started pages yesterday, although Federico had got an animation in there and made other changes.  The blog I pushed out last night had more stats on the Getting Started pages from a few months back, but right now I&amp;rsquo;ve got no head for stats.  What&amp;rsquo;s fun?  What&amp;rsquo;s the priority for the community?  I guess it&amp;rsquo;s a toss up between the two things we were looking at in our design sprint.  Adjusting the home pages to try and better explain what we&amp;rsquo;re all about, or a structured guide that gets folks really engaged in projects (attending scrums, submitting PRs etc.), and maybe tracks their progress to boot.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m fearful of adding more complexity to the WebSiteOne Rails monolith, and so I think I&amp;rsquo;d like to experiment with a middleman front end that I have high confidence won&amp;rsquo;t run into performance issues.  Maybe the time should be spent on investigating the Rails performance issues we have, but I&amp;rsquo;m suspicious that that will take more time for an uncertain result.&lt;/p&gt;

&lt;p&gt;The tricky bit (or just the bit we have to be careful with) for the middleman approach will be the switch over to point http://www.agileventure.org to the GitHub pages, and then creating https://projects.agileventures.org or something to point to the Rails app &amp;hellip; or I just start reading the Heroku notes on memory errors again.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/optimizing-dyno-usage"&gt;https://devcenter.heroku.com/articles/optimizing-dyno-usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use"&gt;https://devcenter.heroku.com/articles/ruby-memory-use&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The difficulty here is with being able to test the impact of changes that we make.  Unless we get some load testing set up.  Heroku has guidelines on that, and an &amp;ldquo;add on&amp;rdquo; to get us started:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://devcenter.heroku.com/articles/load-testing-guidelines"&gt;https://devcenter.heroku.com/articles/load-testing-guidelines&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://elements.heroku.com/addons/loaderio"&gt;https://elements.heroku.com/addons/loaderio&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m not going to get much done today, but I guess I can throw up a quick middleman app and perhaps alternate these two approaches to feel out which one is going to reap the biggest reward:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/middleman/middleman"&gt;https://github.com/middleman/middleman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;because I can&amp;rsquo;t bear just reading docs and slow turnarounds for debugging - I want to be making something and encountering issues in real time! :-) Just installing the latest middleman I realise that maybe I should upgrade Ruby.  Ruby 2.4.2 wouldn&amp;rsquo;t install so I backed out to Ruby 2.4.1.  This was the error from Ruby 2.4.2 on OSX:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;/usr/local/Homebrew/Library/Homebrew/brew.rb:12:in `&amp;lt;main&amp;gt;': Homebrew must be run under Ruby 2.3! (RuntimeError)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hmmm &amp;hellip; 2.4.1 installed and I set it to default:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures ]$ 
→ rvm use 2.4.1 --default
Using /Users/tansaku/.rvm/gems/ruby-2.4.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although I note c9 is on 2.4.0, so I guess I should install that too; ah, but I have it already &amp;hellip; so then I install middleman in the 2.4.1 space.  Although I&amp;rsquo;m actually in the 2.4.0 - maybe I need the ruby version on the command prompt &amp;hellip; anyway, in fairly short order I have boiler plate middleman code at:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/tansaku/av-landing-page"&gt;https://github.com/tansaku/av-landing-page&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tomorrow I&amp;rsquo;ll look at deploying to github pages and seeing if I can get the CSS pipeline set up &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
