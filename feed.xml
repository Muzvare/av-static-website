<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-12-05T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>AV EcoSystem Review Easily Distracted When Sick</title>
    <link rel="alternate" href="http://blog.url.com/2017/12/05/av-ecosystem-review-easily-distracted-when-sick/"/>
    <id>http://blog.url.com/2017/12/05/av-ecosystem-review-easily-distracted-when-sick/</id>
    <published>2017-12-05T00:00:00+00:00</published>
    <updated>2018-03-14T20:20:36+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="sneeze" src="/images/sneeze.png" /&gt;&lt;/p&gt;

&lt;p&gt;So I didn&amp;rsquo;t get far with the Anthony Powell work yesterday, but I did at least get all the software running and get my head back into the problem space.  That was enough to take the edge off my anxiety about getting it started early.  I&amp;rsquo;m also onboarding a few new developers to WSO which ameliorates my worries about bleeds there.  This morning I got totally distracted by email and Slack, but in the procrastination wheel picture of things I did get a few things done.  Now let&amp;rsquo;s focus.  I&amp;rsquo;m tempted to see if I can bash the auto-generated form in LibreOffice Base to look like the exising Lotus Approach one.  The voice in my head worries that I should be writing out user stories.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Can enter new member information&lt;/li&gt;
&lt;li&gt;Can browse member information in same form&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The database dump we have from Lotus Approach appears to have five tables:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Members&lt;/li&gt;
&lt;li&gt;Subs&lt;/li&gt;
&lt;li&gt;Gift Aid&lt;/li&gt;
&lt;li&gt;Recurring Subs (transactional)&lt;/li&gt;
&lt;li&gt;Member types&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;and we have a dump of each with the addresses randomized.&lt;/p&gt;

&lt;p&gt;LibreOffice Base (like Lotus Approach and MS Access) provides a form interface where we can page through the rows in the database, and add new information.  I guess the key things to do are the make the forms look usable and ensure that the different tables have the right relationships set up.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve also already imported three of the tables into the system.  I can&amp;rsquo;t remember how I did first time around.  I&amp;rsquo;ve previously referred to:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://help.libreoffice.org/Common/Importing_and_Exporting_Data_in_Base"&gt;https://help.libreoffice.org/Common/Importing&lt;em&gt;and&lt;/em&gt;Exporting&lt;em&gt;Data&lt;/em&gt;in_Base&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;which basically involves opening the existing dbf files and copying and pasting all the existing rows into the tables section of a LOB database, and then using the import wizard.  I had a go at trying to match up the datatypes, which reminds me that I&amp;rsquo;ll probably need to start this over from scratch to get all the datatypes working properly &amp;hellip; as well as ensuring that I&amp;rsquo;m updated to the very latest LibreOffice version.   Hmm, I wonder if a Trello board or Pivotal Tracker is in order to track all the tasks?  I&amp;rsquo;m leaning towards Pivotal since being able to accept/reject by default will be a good match for this project.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got the form design system working so that I start manipulating the auto-generated form to look more like the existing Lotus Approach form:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/5grezldftymxi4z/Screenshot%202017-12-05%2010.52.43.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;but now a key feature is being able to have a form field that refers to another table.  There are some videos online:&lt;/p&gt;

&lt;p&gt;&lt;a href="http://thefrugalcomputerguy.com/libreoffice-base/Base17.php"&gt;http://thefrugalcomputerguy.com/libreoffice-base/Base17.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but I browse around and read a few help forums, and then I&amp;rsquo;ve pretty much worked out how to put sub-forms into a form that link to a different table and slave certain fields to the record being shown in the main form.  It&amp;rsquo;s not working at the moment, but I guess that might be due to different field data types:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/xi07mk1ckua2tgq/Screenshot%202017-12-05%2011.17.34.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;So I think the sensible thing to do is to re-import the data.  What I should also do is give our clients a sensible timeline, such as showing them mockups of the new interfaces by the end of the week, and a first version to play with by the end of the following week &amp;hellip; hopefully that should put a lid on both my anxiety and theirs :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review No Good Choices</title>
    <link rel="alternate" href="http://blog.url.com/2017/12/04/av-ecosystem-review-no-good-choices/"/>
    <id>http://blog.url.com/2017/12/04/av-ecosystem-review-no-good-choices/</id>
    <published>2017-12-04T00:00:00+00:00</published>
    <updated>2018-03-14T20:11:58+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Urgh, so I&amp;rsquo;ve got a mild cold, but I desparately want to clear up and fix a few things with the Slack notifications.  Also the Google login and signup is broken.  However in addition I think I must use my morning blogs this week to work on the Anthony Powell Society database that we just got the contract for.  Of course between the cold and rebooting my computer and getting distracted by Slack I&amp;rsquo;m now out of time for really getting anything done before the WebDev Mob.  I guess maybe the thing to do is cancel the other meetings later in the day.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m really not sure what the right choice is.  Maybe I should just be sleeping the whole day &amp;hellip; I guess I&amp;rsquo;ll at least start by opening LibreOffice Base &amp;hellip;, although the LibreOffice starts up with a document rather than a database.  I&amp;rsquo;m going to need to remember how to run the Base software itself.  Ah, okay, it looks like it is all one package.  I think LibreOffice accidentally opened a text file and so re-started in document mode.  Now restarting it I get a view of the recent files that includes the charity database components I was testing beforehand:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/1yk586ws45z9hcr/Screenshot%202017-12-04%2010.23.48.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;Opening libre-test.odb I get the familiar database design interfaces and the sample form I created for the membership database:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/1vbjqqs6y5qvid7/Screenshot%202017-12-04%2010.25.12.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;What we want it to look like is something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/y3xtz17fge1lm90/Screenshot%202017-12-04%2010.26.39.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;Which is how the AP folks have their current Lotus Approach set up.  It would be nice to have a set of specific user stories, where I can ensure each one works.  I think I can infer the user stories from the forms and what the secretary showed me previously.  I could probably triple or quadruple the whole time spent on the system trying to set up some kind of automated acceptance testing &amp;hellip; although I have found a related blog on the subject:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://mmohrhard.wordpress.com/2016/09/07/ui-testing-in-libreoffice/"&gt;https://mmohrhard.wordpress.com/2016/09/07/ui-testing-in-libreoffice/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;but now it&amp;rsquo;s time for the webdev mob &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review More WSO CleanUp</title>
    <link rel="alternate" href="http://blog.url.com/2017/12/01/av-ecosystem-review-more-wso-cleanup/"/>
    <id>http://blog.url.com/2017/12/01/av-ecosystem-review-more-wso-cleanup/</id>
    <published>2017-12-01T00:00:00+00:00</published>
    <updated>2018-03-12T21:05:23+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="cleanup" src="/images/cleanup.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So running the cuke tests I get this one bit of extraneous output:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Encountered Error in get: 404 Resource Not Found: {"code":"route_not_found","kind":"error","error":"The path you requested has no valid endpoint."}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and of course huge dumps of VCR and Puffing Billy cache changes.  I can clean that up with our &lt;code&gt;rake vcr_billy_caches:reset&lt;/code&gt; commmand but I wonder what other projects do?  Perhaps I should ask the VCR folks?  I think the issue we have is that we need to throw out some of our old caches and reload, dealing with the pain that will cause &amp;hellip; maybe we need some VCR version of dependabot that will throw out old caches for us?&lt;/p&gt;

&lt;p&gt;I posted the &lt;a href="https://groups.google.com/forum/#!topic/vcr-ruby/8DoA7MUq-38"&gt;following to the vcr-ruby mailing list&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Hi everyone,&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve been using VCR in our rails projects for a long time (and now puffing billy as well) and I&amp;rsquo;m concerned about how confusing cached network recordings are for new contributors that we onboard.&lt;/p&gt;

&lt;p&gt;We also seem to end up with a fair few new network cache files when tests fail and so on, which show up in &lt;code&gt;git status&lt;/code&gt;.  New contributors wonder what these files are for, try to add the cache directories to .gitignore, or do other strange things.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve recently introduced a rake task &lt;code&gt;rake vcr_billy_caches:reset&lt;/code&gt; to make it easy to reset the caches to the way they are in the current branch, but I wonder if there isn&amp;rsquo;t some better long term solution.&lt;/p&gt;

&lt;p&gt;I wonder if we&amp;rsquo;re using VCR incorrectly, or perhaps not updating our cached network files frequently enough.  I&amp;rsquo;m a little scared to delete large swathes of recorded files for the extra work that might pop up in terms of ensuring that everything works again, but perhaps I&amp;rsquo;m being silly.  It&amp;rsquo;s just that it&amp;rsquo;s all volunteer time, so well, anyway.  Here are the two main OS projects I&amp;rsquo;m running that use VCR:&lt;/p&gt;

&lt;p&gt;https://github.com/AgileVentures/LocalSupport&lt;/p&gt;

&lt;p&gt;https://github.com/AgileVentures/WebSiteOne&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve added sections to our contributing docs, but I feel like all my text should probably be replaced with images or a video: https://github.com/AgileVentures/LocalSupport/blob/develop/CONTRIBUTING.md#acceptance-testing&amp;ndash;caching&lt;/p&gt;

&lt;p&gt;I just wondered if others had similar experiences and any suggestions.&lt;/p&gt;

&lt;p&gt;Many thanks in advance&lt;/p&gt;

&lt;p&gt;Best, Sam&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I also opened a &lt;a href="https://github.com/vcr/vcr/issues/672"&gt;GitHub issue&lt;/a&gt; to also mention the idea of some sort of automated tool to delete old cache files.  &lt;/p&gt;

&lt;p&gt;Annoyingly I&amp;rsquo;m almost out of time this morning, and I wanted to see if I could fix the &lt;code&gt;local_time&lt;/code&gt; update that dependabot was suggesting, as well as cleaning out the cruft in the Cucumber logs.  I was also thinking that the ultra slow cukes needed to be worked on.  Hmmm, leave &lt;code&gt;local_time&lt;/code&gt; to next week I guess &amp;hellip; urgh, and I left a hanging PR to update some of the Slack channels that get pinged &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Prioritization Conflict</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/30/av-ecosystem-review-prioritization-conflict/"/>
    <id>http://blog.url.com/2017/11/30/av-ecosystem-review-prioritization-conflict/</id>
    <published>2017-11-30T00:00:00+00:00</published>
    <updated>2018-03-08T21:09:33+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="switches" src="/images/switches.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Blargh.  Let&amp;rsquo;s get the latest fix deployed on WebSiteOne.  Recently these blogs are little WebSiteOne admin activities and then the release process gets smeared out over the day.  What would it be like to actually focus on a single project for a day or, gasp, for a whole week?  I&amp;rsquo;ve also made the process more complicated by switching off the staging and develop servers when we&amp;rsquo;re not using them, in order to save money.  It&amp;rsquo;s also easy to burn time on these dependabot gem upgrades, although do I sense I&amp;rsquo;m getting a handle on them now?  Could we even turn back on the PR updates in the #websiteone channel?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m suddenly paranoid about the Google login failing, should I be on that?  Let&amp;rsquo;s try to clean up first.  We&amp;rsquo;ve got pending notices in the Jasmine tests and RSpec.  I&amp;rsquo;ve got &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1858#issuecomment-348141856"&gt;half an idea&lt;/a&gt; about how to fix the &lt;code&gt;local_time&lt;/code&gt; gem upgrade that dependabot is recommending, but heuristic: I already pulled in one dependabot today; stay on target.&lt;/p&gt;

&lt;p&gt;Jasmine has this set of pending statements:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Pending:
        eventDatePicker hides event repeat options by default
          awaiting refactor of related form for use in fixture

        eventDatePicker shows event repeat options when event is set to repeat
          awaiting refactor of related form for use in fixture

        eventDatePicker shows event repeat optional ending when event is set to end
          awaiting refactor of related form for use in fixture

        eventDatePicker hides event repeat optional ending when event is set to never end
          awaiting refactor of related form for use in fixture
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and RSpec this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1) Karma add some examples to (or delete) /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/karma_spec.rb
     # Not yet implemented
     # ./spec/models/karma_spec.rb:4

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The eventDatePickerSpec concern seems to be that the fixture is too large.  Just delete the test? It says it is awaiting refactor of the form, but that doesn&amp;rsquo;t look like it will be happening anytime soon &amp;hellip;, so I make some specs with a fixture in a separate file:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'eventDatePicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Michael is concerned that fixture is large and involved and creating too complex a seam&lt;/span&gt;
    &lt;span class="nx"&gt;loadFixtures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'event_datepicker.html'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;eventDatepicker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat options by default'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat options when event is set to repeat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat optional ending when event is set to end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat optional ending when event is set to never end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'never'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and making it all work involves me breaking out the js debugger and stepping through to see which elements are being hidden when:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/zsckxs1juv27wax/Screenshot%202017-11-30%2010.47.52.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;I feel paranoid that this is all yesterday&amp;rsquo;s tech.   I notice the JasmineJQuery library is looking for a new maintainer, and apparently some folks are using &lt;a href="https://github.com/tmpvar/jsdom"&gt;https://github.com/tmpvar/jsdom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I could also be refactoring out some of the operations in this test &amp;hellip; I equivocate and go for it:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'eventDatePicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Michael is concerned that fixture is large and involved and creating too complex a seam&lt;/span&gt;
    &lt;span class="nx"&gt;loadFixtures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'event_datepicker.html'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;eventDatepicker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;set_event_repeat_ends_to_never&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'never'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat options by default'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat options when event is set to repeat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat optional ending when event is set to end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat optional ending when event is set to never end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeat_ends_to_never&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It works and I&amp;rsquo;m rewarded with fully passing Jasmine specs, no pending, and I think the intention of the code above is now slighlty better in terms of self-documenting the intention by method names rather than comments.  We still have the issue that the fixture is too large, but that can be updated as and when.  Really the parts of the fixture that are relevant are just a few items being shown and hidden.  Ideally the fixture could be auto-generated, but really my concern here is just clearing the deck for others to work on things.&lt;/p&gt;

&lt;p&gt;I create a ticket for clearing pending items.  Can I also get the RSpec sorted?  The Karma class is this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Karma&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the spec is&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'spec_helper'&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;pending&lt;/span&gt; &lt;span class="s2"&gt;"add some examples to (or delete) &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I don&amp;rsquo;t know that the Karma model is yet doing anything special that needs testing.  I think this is boiler plate.  I&amp;rsquo;m going to delete the pending message, since I hate deleting files where I might want to add something later, hmmm.  I go for:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'spec_helper'&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# no new functionality besides standard ActiveRecord functions yet&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then I screw up by pushing to develop instead of creating a branch.  Urgh, I amend the commit name to say it fixes the pending issue, but can&amp;rsquo;t force push that up to develop because it&amp;rsquo;s protected.  Blargh.  I remove the protection, force that up, and then put the protection back on.  Not ideal. Getting there.  Gotta finish up the blog.  Shame to pollute my inner space with this constant pressure to work faster, do more.  Need to meditate on that, but no time :-)&lt;/p&gt;

&lt;p&gt;Anyhow, I think what I&amp;rsquo;ve got is now a pretty clean output from both Jasmine and RSpec.  Now if we really want to clean up the cucumber output then we&amp;rsquo;ve got to move on to removing this Mercury editor.  So I update that &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1767"&gt;branch&lt;/a&gt; and I guess I work on that tomorrow, pulling examples from what I do into the new README &amp;hellip; also our coverage tracking seems to be broken.  Need to get that fixed up too &amp;hellip; no rest for the wicked &amp;hellip; and no respite from the prioritization conflicts &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Getting Stuck</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/29/av-ecosystem-review-getting-stuck/"/>
    <id>http://blog.url.com/2017/11/29/av-ecosystem-review-getting-stuck/</id>
    <published>2017-11-29T00:00:00+00:00</published>
    <updated>2018-03-07T21:54:08+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="getting stuck" src="/images/getting_stuck.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m getting a bit stuck.  My motivation to clear things off my desk has completely collapsed.  Today I did my social media station keeping before opening the blog.  I&amp;rsquo;d love to get to the computer at 8am like I sometimes used to and get a real meaty chunk of work by 10am to then have the motivation to hit on non social-media admin.  Gosh, social media is gamified addiction fun, isn&amp;rsquo;t it?&lt;/p&gt;

&lt;p&gt;Anyhow, I&amp;rsquo;ve cleared all the dependabot low hanging fruit, so I&amp;rsquo;m rebuilding some older PRs, which might just be falling foul of intermittent fails.  Gosh, that&amp;rsquo;s a time sink - that reminds me about my plan to try and get the medium-editor in place so we can drop mercury.  I&amp;rsquo;m also slighltly stuck on my revision to the WSO README for fear of getting into arguments about the accuracy of the project history - maybe better to leave that section out?  Maybe I move the new draft README out of my last blog and into a placeholder location &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/blob/develop/README-draft.md"&gt;https://github.com/AgileVentures/WebsiteOne/blob/develop/README-draft.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So keep polishing the README, sort out the pending issues showing up in the test output, work on the medium editor branch, or fix some of the niggly things, e.g. the formatting issue that Susanna highlighted yesterday?  I think I can get a quick win on this &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1994"&gt;formatting issue&lt;/a&gt; from Susanna.  I make a branch and amend an existing cucumber test:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given following events exist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;             &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;project&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_weekly_each_days_of_the_week_mask&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_every_n_weeks&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Daily&lt;/span&gt; &lt;span class="n"&gt;standup&lt;/span&gt; &lt;span class="n"&gt;meeting&amp;lt;br&amp;gt;woot!&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;           &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;weekly&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;15&lt;/span&gt;                                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;1&lt;/span&gt;                 &lt;span class="p"&gt;|&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see &lt;span class="s"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which fails in the way I expect, i.e. the html tag shows up in the list view as Susanna pointed out.  I want to refactor the cuke, but I must fix the issue first, which might be as simple as just adding the &lt;code&gt;auto_link&lt;/code&gt; command to the relevant part of the view:&lt;/p&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;              &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;auto_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;description&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;separator: &lt;/span&gt;&lt;span class="sr"&gt;/\s/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is.  So can I make the cuke a better example of self documentation?  I refactor it to:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="nt"&gt;@vcr&lt;/span&gt;
&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; List Repeating Events
  As an event creator
  So that I don't have to keep making separate events for repeating meetings
  I would like everyone to see repeats of regular events

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given following events exist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;             &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;project&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_weekly_each_days_of_the_week_mask&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_every_n_weeks&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Daily&lt;/span&gt; &lt;span class="n"&gt;standup&lt;/span&gt; &lt;span class="n"&gt;meeting&amp;lt;br&amp;gt;woot!&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;           &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;weekly&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;15&lt;/span&gt;                                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;1&lt;/span&gt;                 &lt;span class="p"&gt;|&lt;/span&gt;
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;Do&lt;/span&gt; not show raw HTML in repeating event description
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should not see &lt;span class="s"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It feels like a waste of resources to break it into two scenarios when it&amp;rsquo;s the same set up and it&amp;rsquo;s effectively reloading the entire system twice to check for something that could be checked in sequence.  Perhaps it would be better to get the intent of the second scenario in the step definition itself.  I adjust like so:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would love to adjust the background step so it wasn&amp;rsquo;t quite so wide &amp;hellip; I&amp;rsquo;ve got it down to:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="nt"&gt;@vcr&lt;/span&gt;
&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; List Repeating Events
  As an event creator
  So that I don't have to keep making separate events for repeating meetings
  I would like everyone to see repeats of regular events

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given the following events exist that repeat every weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;always&amp;lt;br&amp;gt;woot!&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should see &lt;span class="s"&gt;"woot!"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;d still like to add more explanation to the &lt;code&gt;local time element should be set to &amp;quot;2016-05-10T07:00:00Z&amp;quot;&lt;/code&gt; step so that it explains that this is the raw element that the javascript library &lt;code&gt;local_time&lt;/code&gt; uses to display the correct time zone to the user and that we gave up testing the execution of that, since the headless browser can&amp;rsquo;t easily be manipulated to a different time zone.  Still my ideal Scenario text would be more like:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="nf"&gt;Given&lt;/span&gt; the date is a weekday in 2016
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see the event title and description
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
    &lt;span class="nf"&gt;And&lt;/span&gt; the elements needed by the local_time js library that shows times in the users timezone should be set correctly
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where the intention for each line is explicit.  I&amp;rsquo;ll leave that for another time, as I&amp;rsquo;ve performed several refactorings already.  At least I now have some aspirational text to put in the new README draft.&lt;/p&gt;

&lt;p&gt;Well that makes me feel heaps better, to actually have a &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1995"&gt;quick fix&lt;/a&gt; for something reported by a Premium user.  I do need to get on to that medium editor thing in order to speed up our overall process.  Even the double run of the cukes hasn&amp;rsquo;t really addressed our failing javascript tests.  I guess the trick is to keep fixing things up, improving the cukes and getting those as examples into the system documentation showing how we are trying to improve things &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Even More Hospitable</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/"/>
    <id>http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/</id>
    <published>2017-11-28T00:00:00+00:00</published>
    <updated>2018-03-06T21:51:37+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="namaste" src="/images/namaste.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So, continuing to work from &lt;a href="https://gist.github.com/nodunayo/c919477906aab6c1af6065ff8e868d3e"&gt;Nadia&amp;rsquo;s README template&lt;/a&gt;: &lt;/p&gt;

&lt;h1&gt;AgileVentures WebSiteOne&lt;/h1&gt;

&lt;p&gt;This &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; app powers the &lt;a href="http://agileventures.org/"&gt;AgileVentures main developer site&lt;/a&gt;, showing lists of active &lt;a href="https://www.agileventures.org/projects"&gt;projects&lt;/a&gt;, &lt;a href="https://www.agileventures.org/users"&gt;members&lt;/a&gt;, &lt;a href="https://www.agileventures.org/events"&gt;upcoming events&lt;/a&gt;, &lt;a href="https://www.agileventures.org/scrums"&gt;past event recordings&lt;/a&gt;, as well as all the machinery for &lt;a href="https://www.agileventures.org/pricing"&gt;Premium membership payments&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;See the &lt;a href="docs/project_setup.md"&gt;Project Setup&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;:construction: UNDER CONSTRUCTION :construction:&lt;/p&gt;

&lt;p&gt;See the site &lt;a href="docs/how_to_use_the_site.md"&gt;How To&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Contributing&lt;/h2&gt;

&lt;p&gt;See our &lt;a href="CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;History&lt;/h2&gt;

&lt;p&gt;in 2011 Sam Joseph had the idea for an online pairing community where everyone worked together to use the agile development methodology to deliver solutions to IT charities and non-profits.  Thomas Ochman joined as project manager and led the development of the WebSiteOne codebase with Bryan Yap serving as technical lead.  Initialy Sam was the notional &amp;ldquo;client&amp;rdquo;, not getting involved in the tech development, and many different volunteers contributed code.  During this phase the events, projects and user systems were developed.  There was also a blog-like articles system.  Yaro Appletov led a tight integration with Google hangouts to allow recordable hangouts to be launched from the site and report back telemetry.&lt;/p&gt;

&lt;p&gt;Later Raoul Diffou joined to take over as project manager as Thomas and Bryan had less and less time for the project.  Sam took over the technical lead role in 2016 and also started pairing with Raoul as project manager.  Later in 2016 as Raoul had less and less time Sam became the sole project manager.  During the course of 2016 Sam and long time AV contributor, Michael, revised the events framework, and replaced the articles system with a Premium payments framework intended to help ensure AV was sustainable into the future.  In 2017 Google withdrew their Hangouts API, breaking various functionality in the site.  Sam and Lokesh Sharma replaced the API integration with manual updates, and Sam pulled in the agile-bot node microservice so that WSO now communicates directly with Slack to alert members about new online meetings and their recordings.&lt;/p&gt;

&lt;h2&gt;Approaches&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile Development

&lt;ul&gt;
&lt;li&gt;We try to work from user stories in regular sprints, offer daily standups, and get regular feedback from end users.  We try to reflect regularly on our process and experiment with incremental changes to how we get things done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behaviour Driven Development (BDD)

&lt;ul&gt;
&lt;li&gt;We use Cucumber and RSpec testing tools that describe the behaviours of the system and its units&lt;/li&gt;
&lt;li&gt;We try to work outside in, starting with acceptance tests, dropping to unit tests and then writing application code&lt;/li&gt;
&lt;li&gt;We do spike application code occasionally to work out what&amp;rsquo;s going on, but then either throw away the spike, or make sure all our tests break before wrapping the application code in tests (by strategically or globally breaking things)&lt;/li&gt;
&lt;li&gt;Where possible we go for declarative over imperative scenarios in our acceptance tests, trying to boil down the high level features to be easily comprehensible in terms of user intention&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Domain Driven Design (DDD)

&lt;ul&gt;
&lt;li&gt;Sometimes we switch to inside out, trying to adjust the underlying entity schema to better represent the domain model&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-documenting code

&lt;ul&gt;
&lt;li&gt;We prefer executable documentation (tests) and relatively short methods where the method and variable names effectively document the code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Reading material&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fasteragile.com/blog/2015/01/19/declarative-user-stories-translate-to-good-cucumber-features/"&gt;Imperative vs Declarative Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bibwild.wordpress.com/2016/02/18/struggling-towards-reliable-capybara-javascript-testing/"&gt;JavaScript Acceptance test trials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Walkthroughs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An example of a simple interface change&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L1"&gt;user story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L15"&gt;cucumber scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We did not write a spec, as this would have involved a view spec which we don&amp;rsquo;t feel add any value&lt;/li&gt;
&lt;li&gt;Here&amp;rsquo;s the &lt;a href="app/views/events/show.html.erb#L38"&gt;code&lt;/a&gt; that implemented the feature&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a new feature involving a database change
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a bug fix
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So looking through all the cucumber scenarios I&amp;rsquo;m not finding wonderful examples of the declarative style I think we should be using, and this is at least as true for the cucumber scenarios I have written myself :-(  I guess the edit future event timezone related work that Michael and I implemented is closest.  I&amp;rsquo;m going to have to go back through some old pull requests to work out other walkthrough examples.  I also note that we don&amp;rsquo;t have any documentation on how to use the website, either in git or on the site itself.  I guess I&amp;rsquo;ve always been slightly skeptical of the value of that sort of written documentation in that it becomes another thing to maintain that folks don&amp;rsquo;t even necessarily read.&lt;/p&gt;

&lt;p&gt;Blurgh, overall I don&amp;rsquo;t think things are very hospitable and it feels like a mountain to climb to try and make them so.  One step at a time I guess &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
