<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-10-19T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Bug Hunt</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/19/bug-hunt/"/>
    <id>http://blog.url.com/2016/10/19/bug-hunt/</id>
    <published>2016-10-19T01:00:00+01:00</published>
    <updated>2016-10-19T20:43:00+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;For about 12 hours now our Google Hangouts plugin have been failing.  I discovered it yesterday when I tried to start the &amp;ldquo;Kent Beck&amp;rdquo; scrum.  I opened an &lt;a href="https://github.com/AgileVentures/HangoutConnection/issues/34"&gt;issue on our HangoutConnection repo&lt;/a&gt;.  The Hangout plugin was asking for authorisation, which it normally only does on first install:&lt;/p&gt;

&lt;p&gt;&lt;img alt="asking for permission" src="https://www.dropbox.com/s/p9671p484k2vtdd/Screenshot%202016-10-19%2009.17.56.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;clicking &amp;ldquo;continue&amp;rdquo; brings up this error screen:&lt;/p&gt;

&lt;p&gt;&lt;img alt="oauth2 fail" src="https://www.dropbox.com/s/hmifa1v3lmiwbns/Screenshot%202016-10-19%2009.18.59.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Yesterday I was desperately flailing to work around this.  The same problem was occurring in multiple browsers.  When the hangout plugin fails we get no notification on Slack.  Naturally we can post the hangout URL directly into slack manually which is a pain, but the bigger issue is that if the hangout plugin fails, then the main AV website isn&amp;rsquo;t updated about the existence of the hangout, so we don&amp;rsquo;t track its usage, and most importantly of all, for scrums the link to the scrum itself is not updated on the website.  This means that people browsing to the website and seeing &amp;ldquo;Scrum live&amp;rdquo; cannot access the correct scrum.  We have a manual override functionality to allow a scrum master to set the hangout link for an event, but it isn&amp;rsquo;t working.&lt;/p&gt;

&lt;p&gt;I opened &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1340"&gt;another issue&lt;/a&gt; for that, felt frustrated that no one joined the scrum.  Three people had RSVP&amp;rsquo;d to the meetup event; not that that means much - clicking the meetup RSVP button is quick and easy, and for online meet ups I&amp;rsquo;d say we were lucky to get 1 in 4 of RSVPs making it into the hangout.  Even when the system is working totally smoothly, many people will be put off by steps like having to install the Google talk plugin, or the notice that &amp;ldquo;people you do not know will be able to watch you&amp;rdquo; that comes up for our google hangouts on air, etc.  I did manually post the link into the meetup chat, but anyone going to the main site via the link that we have in the meetup location would have not been able to join my hangout.&lt;/p&gt;

&lt;p&gt;I was in a bad mood, I blew up at my kids for the ongoing mess in the hallway with their shoes scattered around.  It was not a great evening.  I didn&amp;rsquo;t sleep well and woke early.  Since I was awake I decided to go on a bug hunt.  The evening before I had been perplexed that we didn&amp;rsquo;t seem to have a test for the manual hangout link update feature.  Part of my frustration was the difficulty I had had convincing different developers over the years that this was an important feature.  They didn&amp;rsquo;t understand why it was needed, attempted to take it out.  Why do we need it when we have the hangout plugin?  Because 1 time in a 50 the hangout plugin fails.  Maybe that 1 in 50 case isn&amp;rsquo;t worth the effort, but we seem to be forever on the cusp of the hangout plugin failing permanently.  It stopped working for two days in the summer then came back on.  Google is migrating from &amp;ldquo;Hangouts on Air&amp;rdquo; to &amp;ldquo;YouTube Live&amp;rdquo;.  If we lose hangout plugin functionality we&amp;rsquo;ll need manual updates to keep a lot of our existing site functionality relevant.&lt;/p&gt;

&lt;p&gt;Anyway, so I had searched for a test by grepping the term &amp;ldquo;Edit hangout link&amp;rdquo; (which is the menu item you click) in the spec and feature directories.  No hits.  Did we not have a test for this?  Wasn&amp;rsquo;t this a sideshow?  Shouldn&amp;rsquo;t I be debugging the hangout plugin itself.  I was not optimistic about finding a fix for the hangout plugin issue and so I thought at least I can put a test in for this feature that I really want to work.  A quick investigation showed me that there was a test, and I hadn&amp;rsquo;t been able to grep it because it was using a JavaScript trick to click on the menu item:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="nt"&gt;@javascript&lt;/span&gt;
  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Edit Hangout URL
    &lt;span class="nf"&gt;Given&lt;/span&gt; I am on the show page for event &lt;span class="s"&gt;"Scrum"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I open the Edit URL controls
    &lt;span class="err"&gt;And I fill in "hangout_url" with "http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;//test.com"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I click on the Save button
    &lt;span class="err"&gt;Then I should see link "Join now" with "http&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;//test.com"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;When&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^I open the Edit URL controls/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute_script&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;  &lt;span class="sx"&gt;%q{$('li[role="edit_hoa_link"] &amp;gt; a').trigger('click')}&lt;/span&gt;  &lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Okay, so great, we had a test, but the functionality was failing on production.  My thoughts of an early morning TDDing evaporated and I moved to test the system on the develop server.  The develop server had been slept by Heroku due to me using up all the available hours on my personal account.  Gah.  I pushed the develop server over to my NeuroGrid account where it would start consuming $7 a month.  Not ideal, but I needed to stay focused on this bug.  Although ironically I was distracted from it by the thought that while I waited for the develop server to come up I could see if the hangout plugin was failing on the staging server.  The staging server is set up to use the develop hangout plugin, which we had been checking the day before to see if Joao&amp;rsquo;s PR for title updating would work.  The develop hangout plugin was now slightly different, but it was worth a try to see if the same authentication failure would come up.  I was stymied by some errors regarding loading projects on staging.  We had sidestepped them in the manual test session with Michael and Sasha the day before, but I was solo-ing now and I was like, let&amp;rsquo;s get to the bottom of these.&lt;/p&gt;

&lt;p&gt;The projects index page was failing with &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;No route matches {:action=&amp;gt;"show", :controller=&amp;gt;"users", :id=&amp;gt;nil} missing required keys: [:id]
/app/vendor/bundle/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/route_set.rb:234:in `optimized_helper'
/app/vendor/bundle/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/route_set.rb:220:in `call'
/app/vendor/bundle/ruby/2.3.0/gems/actionpack-4.2.6/lib/action_dispatch/routing/route_set.rb:345:in `block (2 levels) in define_url_helper'
/app/app/views/projects/_listing.html.erb:52:in `_app_views_projects__listing_html_erb___4267003586796215631_69973986642740'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which corresponded to this code:&lt;/p&gt;
&lt;pre class="highlight html"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;div&amp;gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= "Created #{time_ago_in_words(project.created_at)} ago" %&amp;gt; by &lt;span class="err"&gt;&amp;lt;&lt;/span&gt;%= link_to project.user.display_name, user_path(project.user) %&amp;gt;&lt;span class="nt"&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seemed like some projects in staging had nil users.  Usually staging has a clone of production, but we&amp;rsquo;re paying for a bigger db on production and we&amp;rsquo;d truncated some tables on staging.  I briefly considered pulling over a fresh copy of the production database, but thinking that would incur charges, I went for clearing up the data instead.  Logging into Rails console on staging I used the following to remove all projects that had users with nil ids:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I could now see the projects index page again on staging.  But there was another error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Parameters: {"id"=&amp;gt;"websiteone"}
undefined method `display_profile' for nil:NilClass
/app/app/models/project.rb:42:in `select'
/app/app/models/project.rb:42:in `members'
/app/app/controllers/projects_controller.rb:18:in `show'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;corresponding to this code:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;members&lt;/span&gt;
  &lt;span class="n"&gt;followers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="ss"&gt;:display_profile&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Some of the project followers seemed to be nil.  These follower relations were through the acts&lt;em&gt;as&lt;/em&gt;followable gem.  I read the documentation for that, checked the schema and worked how to delete all the nil followers:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Follow&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by_id&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;follower_id&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt;&lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Allowing me to get to the websiteone project page on staging and see that I got the same authentication error.  I&amp;rsquo;d tidied up staging in a way that would make testing hangouts easier in the future, but had only managed to confirm that the plugin authentication error was more generally and thus more likely to be something on Google&amp;rsquo;s side that we might not be able to fix.  I could also wax lyrical about data integrity constraints, or gracefully failing code relating to the above.  Bottom line, interface, just display something, anything - I have no interest in 500 errors. Maybe I&amp;rsquo;ll explore that further in another blog post &amp;hellip; if we stay with the hangout narrative, next I got googling and found some helpful links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;http://stackoverflow.com/questions/16850350/got-origin-mismatch-error-in-google-share-api&lt;/li&gt;
&lt;li&gt;https://developers.google.com/+/sign-in-faq#were&lt;em&gt;seeing&lt;/em&gt;error&lt;em&gt;origin&lt;/em&gt;mismatch&lt;em&gt;during&lt;/em&gt;sign-in&lt;em&gt;testing&lt;/em&gt;what&lt;em&gt;might&lt;/em&gt;be&lt;em&gt;the&lt;/em&gt;issue&lt;/li&gt;
&lt;li&gt;https://www.google.co.uk/search?q=google+hangout+plugin+%22Error%3A+origin_mismatch%22&lt;/li&gt;
&lt;li&gt;https://productforums.google.com/forum/#!topic/hangouts/Y6YdjONMu6Q&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I spent the next 30 minutes tweaking things through the google api console.  It looked like our Authorized JavaScript origins for the OAuth were all up to date.  I even managed to make G+ login work on the develop server, making it seem like there was no wholesale authentication fail on Google&amp;rsquo;s side.  The last link in the list above (a locked discussion ironically) talked about a potentially brittle fix to the authentication problem.  I tried it on staging, but no joy.  It seemed like the googlecontent URL it suggested adding to the JavaScript origins was variable. A frustrating morning, but I thought to myself perhaps we can use this as a spur to produce a better solution.  Maybe we can get YouTube Live events to start directly from Slack &amp;hellip;&lt;/p&gt;

&lt;p&gt;However in a further fit of irony, just as I was writing the first paragraph of this blog post, I noticed that the googleusercontent URL in the issue that I opened was the same as the one in the hangout I had just brought up to create screenshots for the blog.  I tried adding it to the Authorized JavaScript origins for the production hangout plugin and lo and behold it all worked.  Gah!  I think I had been putting the production googleusercontent URL into the develop plugin.  I can test that, by doing another test on staging.  I just did and it worked, but looking back, actually I did have the correct googleusercontent URL in the develop hangout config on the google console API.  I guess maybe it just took extra time to propagate.  Aaaaaaaaaaaa &amp;hellip;.&lt;/p&gt;

&lt;p&gt;To tie up lose ends I finally did the check of the manual hangout link editing, and it worked for an event that didn&amp;rsquo;t have an existing hangout URL.  I guess there must be some corner case on production where we have an event that&amp;rsquo;s been run and finished and left with an old hangout url and manually trying to override that fails.  So the path is clear - the google hangout plugin will soldier on for a few more days? weeks? months?  In the meantime I should try and create a test that actually replicates the circumstances in which the manual update fails on production.&lt;/p&gt;

&lt;p&gt;Not that I&amp;rsquo;m not thinking about whether we couldn&amp;rsquo;t build our own screenshare app with WebRTC, or switch to Zoom or GotoMeeting, or find some other collaboration framework that didn&amp;rsquo;t lead to massive debugging sessions every three months, as was generally under the shadow of a possible Google sunset &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Lacking Narrative Thread</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/18/lacking-narrative-thread/"/>
    <id>http://blog.url.com/2016/10/18/lacking-narrative-thread/</id>
    <published>2016-10-18T01:00:00+01:00</published>
    <updated>2016-10-19T06:10:43+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;There is a lot going on, and heads up this blog post meanders over the stuff that happened yesterday rather than having a coherent narrative thread.  So how&amp;rsquo;s that different from any of your blogs you ask?  Very funny :-) So anyway we got a docker PR merged in on LocalSupport yesterday.  I had the app running in a docker instance on my local machine.  It was all reminiscent of vagrant a few years back, except there seems to be lots more excitement about docker at the moment.  Heroku and AWS are offering container services, where you can deploy your containers like docker.  I&amp;rsquo;ve been pretty happy with Heroku&amp;rsquo;s PaaS (Platform as a Service) compared to AWS&amp;rsquo;s IaaS (Infrastructure as a Service) in terms of things working as I expected, and the PaaS reducing the complexity I have to deal with.  That said I haven&amp;rsquo;t been trying to deploy real-time machine learning components and have been dreaming to the siren song of traditional web apps.  Maybe containers like docker will give more flexibility and robustness in the future, but at the moment I&amp;rsquo;m not sure what end-user problem we&amp;rsquo;re solving, apart from following the interests of our developers.  But, as I&amp;rsquo;ve mentioned before, our developers are also our end-users and if they&amp;rsquo;re inspired to look at something, then arguably it makes sense to follow their lead.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still not at 100% pairing fitness, so Michael was pairing with Sasha and knocking off a few WebSiteOne tickets.  I joined for a bit and did a manual test of Joao&amp;rsquo;s PR on HangoutConnection, to update the notification title to what the user sets it to be, which looked good but failed to work on the staging server.  I think the issue is that Google&amp;rsquo;s Hangout API doesn&amp;rsquo;t do what it says it should do.  I think Yaro pointed that out a couple of years ago, so it was a little frustrating to burn time on the same issue.  The future for Google Hangouts looks a little uncertain and there are two other thorns in my side recently, which are that the toolbox plugin no longer saves my lower third banner (so I&amp;rsquo;m re-entering it each time) and we keep getting messages about &amp;ldquo;failed to go live&amp;rdquo; when things are going live, which we&amp;rsquo;re now ignoring, but will be confusing for many.&lt;/p&gt;

&lt;p&gt;At some point maybe we should investigate switching to something like Zoom, which does video conferencing, has a free tier and so on.  To be honest what I&amp;rsquo;d really like is stronger support for text scrums, but let&amp;rsquo;s see how the AsyncVoter project goes.  Pleasingly having run a couple of async votes on the features in the AsyncVoter project has provoked a lot of assumption busting discussion and I&amp;rsquo;m reassured that the folks working on the weekend are really grasping the functionality we&amp;rsquo;d like to have in place to support on-going voting on stories around the clock.  Async text voting on stories, chores and bugs has the great advantage that it&amp;rsquo;s very light weight to join, easy to observe and it keeps an ongoing flow of chat about the project taking place in the Slack channel that everyone can dip into.&lt;/p&gt;

&lt;p&gt;My whole day was bits and pieces of reviewing and merging PRs, moving async votes along, snippets of scrums and hangouts to resolve minor issues.  No serious head down programming such as might deliver a serious feature on WebSiteOne or Two.  I did do more manual connection between AgileVentures scrums and the Remote Pair Programming meetup group.  I think we&amp;rsquo;ve now had a least two new people join hangouts through that.  At yesterday&amp;rsquo;s Kent Beck we had one person coming from the MOOC, one from the meet up group and one who had seen me present at Remote Rails Conf; along with two regulars.  Cusp of critical mass?  I&amp;rsquo;ve thought that so many times before I know not to get my hopes up.&lt;/p&gt;

&lt;p&gt;What I did manage to get done was to reach out more people about evolving the charity business model of AgileVentures.  I&amp;rsquo;m burning to get some new plans out, get upgrade functionality into the interface of AgileVentures, but getting feedback from first our mentors and then our existing premium members makes sense.  It feels Agile.  Again I&amp;rsquo;m struck by the difference between asking people in a group/public context and asking people individually.  I guess I&amp;rsquo;ve always known that if you ask a generic question in a group then that&amp;rsquo;s far less effective because everyone thinks &amp;ldquo;well he&amp;rsquo;s not asking me&amp;rdquo;.  I think what I hadn&amp;rsquo;t really absorbed was the majority of people don&amp;rsquo;t like talking in front of each other.  I guess it&amp;rsquo;s like this.  Someone asks a general question in a general channel - you&amp;rsquo;re busy, and there&amp;rsquo;s not necessarily much upside for you to answer given that it takes effort and exposes you to judgement by the group; you might be wrong!  However if you&amp;rsquo;re asked the same question by someone in a private 121 context, then not answering might seem rude, and you might even be flattered that your opinion is being asked, and it&amp;rsquo;s less complex to craft a reply.  You only need consider how the person who has asked you will react to your response.  You don&amp;rsquo;t have to worry about how many others might judge what you have to say.&lt;/p&gt;

&lt;p&gt;Sorry if that all seems transparently obvious to everyone, but it&amp;rsquo;s taken me a while to come up with the mental model, because my own mode of operation is just to say what I&amp;rsquo;m thinking, pretty much all the time.  Sincere apologies to everyone I&amp;rsquo;ve offended over the years, or made uncomfortable.  It&amp;rsquo;s really not intentional.  I just wear my heart on my sleeve and tend to think out loud.  I hope I am learning to review things somewhat recently, to blunt the sharpest parts of my personality.  Fundamentally it brings me back to trying to understand what&amp;rsquo;s the best value that AgileVentures, and I, can offer them on their professional development path.&lt;/p&gt;

&lt;p&gt;Listening to Ruby Book club on Avdi Grimm&amp;rsquo;s confident coding, I really want to do some quick sessions on playing with Ruby.  These could be a totally free loss-leader.  They could be a pay-to-join mob programming session that Thomas has been saying he&amp;rsquo;d be up for.  They could replace the 121 support at the £25 premium level or they could even replace the F2F support at the £50 premium level.  I was saying the other day that people keep on wanting to talk in private and I keep pushing them to group forums for learning and development purposes.  I think people breaking down their fears and being willing to fail in public IS good for them.  Of course it needs to be at their pace and when they are ready.&lt;/p&gt;

&lt;p&gt;I think the 121 premium level I&amp;rsquo;m thinking of is making sure you have an assigned mentor that you know you can go to for 121 support.  Although perhaps the reality of offering any service is that you&amp;rsquo;ll need to provide 121 support at all times.  If you turn down requests for help, you turn people away.  I&amp;rsquo;d like our users to tell me what they really want and how much they&amp;rsquo;re willing to pay for extra services, the perks that they get from sponsoring the AgileVentures charity; but I guess we have to have a relatively simple plan and go with that.  In the meantime I&amp;rsquo;ll keep asking them individually what they think &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Something for the Weekend</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/17/something-for-the-weekend/"/>
    <id>http://blog.url.com/2016/10/17/something-for-the-weekend/</id>
    <published>2016-10-17T01:00:00+01:00</published>
    <updated>2016-10-19T05:56:15+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I usually try and keep my weekends work free.  I’ve done that for a long time, since I was about 25 and I had a period where I had worked through a few weekends and felt pretty damn drained and exhausted the following week.  It made me really unpleasantly unhappy at the time.  Since then I’ve tried to have a rule about not working at weekends and where possible not looking at work email or chat during the weekend.  That’s become even more important to me since I had kids and the stresses of the work week have escalated as my paycheque is not just for me but for my dependents.&lt;/p&gt;

&lt;p&gt;There have been times when chat applications on my phone have allowed work to intrude into my family time.  My wife jokes about me helping my three sons with their homework and then being distracted by questions from students on Skype on my phone.  To be fair there was a good five years where I was supporting students in a very different timezone and I felt obliged to be available.  However for family balance I’ve recently become stricter with myself and over the last three years I’ve been pretty good at confining my work communication to the 9-6.  We hear things like the French making it illegal to send work emails after 6pm and I have some sympathy with that.  I do worry that the stress of being constantly connected is bad for our health.  I really do want to spend quality time with my family.  Once my kids have grown up that chance to connect with them will have gone and I don’t want to have been completely distracted from it by work.&lt;/p&gt;

&lt;p&gt;That said I need to provide food and shelter for my kids as well as attention, and for some jobs you need to be always on?  Maybe for all jobs you need to be going above and beyond to keep your job?  Maybe the father who is never there, but always provides the financial support is the better father than the one who is always available for a chat, but can’t keep the lights on?  Ironically for the professional development support that AgileVentures gives, a lot of people want extra support at the weekends.  Many people are working full time jobs, and the weekend is their chance to do some programming, to develop new skills and so forth.  Weekends and evenings - the time that I try to set aside to spend with my family.  &lt;/p&gt;

&lt;p&gt;I’ve been bending my own rules recently.  I took on a Saturday evening Mentive class to bring in some more money and also to see Mentive&amp;rsquo;s full process and how it integrates with the “Agile Development using Ruby on Rails” MOOC.  Also since my knee surgery two weeks back I’ve been distracted by pain in my knee and I’ve been using the dopamine squirts from checking messages and emails on my phone to keep me from dwelling on it.  The last two weekends I’ve been checking slack and email.  In general I haven’t been getting too stressed.  Focusing full-time on AgileVentures is nowhere near as stressful as dealing with a full time bootcamp, or even a university position.&lt;/p&gt;

&lt;p&gt;I think bootcamps are particularly stressful because the students are giving up full time jobs, paying their life savings, and going all in on a massive career change.  They’re also taking on a field in which you learn by experiencing failures again and again and again.  Universities are stressful because the majority of students are still thinking of them as an extension of school and there’s a kind of apathy and disjointedness that’s very frustrating as an instructor.  Often the students will be trying to game your grading system rather than actually being interested in learning.  I’d rather be an educator at a bootcamp than a university, because at least at the bootcamp the students are 100% committed to learning.  Ultimately though I don’t want to be an instructor at either.  I want to build code, and I want to build code with others who &lt;em&gt;want&lt;/em&gt; to build code.&lt;/p&gt;

&lt;p&gt;The AgileVentures model is all about people coding when they want to code.  We’ve got some new members who are particularly keen to code at the weekend, and we just re-branded and re-started the weekend scrum that had been unused for a while.  I can’t join those as I’m coaching my kids soccer team at the weekend, but I’ll do everything I can to support that initiative:&lt;/p&gt;

&lt;p&gt;http://www.agileventures.org/events/bob-martin-weekend-scrum-and-pair-hookup&lt;/p&gt;

&lt;p&gt;There’s a good logical argument for me checking slack and email occasionally at the weekend if it’s to help sustain the community.  My fear is that it’s a kind of addiction.  I think I have a somewhat addictive personality.  My wife talks about me having good will-power, but I think it’s second order will-power.  Faced with something that I want, I find it difficult to resist.  However, if I can arrange circumstances so that I don’t encounter the thing I want, I can generally stay on the wagon.   I struggled for years to give up smoking, but was able to quit when I moved to Japan.  I find it difficult to be motivated to exercise or blog, but if I work it into my routine I can keep doing it for months at a time.  If slack or whatsapp is pinging me on my phone I find it difficult not to respond, but if I turn off the notifications, or uninstall the app, then I can go for a good long time avoiding distraction.&lt;/p&gt;

&lt;p&gt;I’ve definitely learned that there’s a big danger in the kind of reactive conversation one can get into on chat systems; sometimes also in person, and even in email.  You can read something, have a reaction to it and launch into a set of reactionary responses that are not always the most helpful.  That’s partly the motivation for my daily morning blogging.  I’m trying to avoid spending 30 minutes to an hour just reacting to what everyone has said on slack and in email.   The pain in my knee is making it harder to keep to that rule.  I listen to a tech podcast in the morning and I seem to use sharing that on slack as an excuse that I have to check a few other channels.  I was distracted for 20 minutes before this blog because of a comment in tech talk, that lead me to review all the unanswered entries in the MOOC discussion forum!  &lt;/p&gt;

&lt;p&gt;Maybe that was reasonable station-keeping.  Over the last two weeks as I check email/slack in dribs and drabs in my downtime I have less of a build up of messages post-blog.  I’m still worried that my responses may be too reactionary.  There’s a kind of “whack-a-mole” mentality that you can get into where you want to have replied to everything, want to have addressed everything, so you whack each message as it comes up.  Sometimes it would be better to leave things for others to answer.  Some questions are not critical to answer immediately, and more importantly, they may be distracting you from the activities that will keep you your current job, or sustain your existing business/charity.  Sometimes it can feel like wasting precious seconds on frivolities?&lt;/p&gt;

&lt;p&gt;One thing I start to sense is that too strong a reaction is usually counter-productive, as is worrying too intensely about whether something
 is an effective use of your time.  Not that you shouldn’t reflect, but that should be done at intervals.  As my father used to say “it’s better to spend 10 minutes doing something, rather than spend 10 minutes worrying about the fact that you haven’t done anything for 10 minutes”.  Make a quick plan for the day, or the half day, do that and see how you feel.  Right - time to get on with my day, and maybe I’ll see you at the weekend :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Online Conferences</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/14/online-conferences/"/>
    <id>http://blog.url.com/2016/10/14/online-conferences/</id>
    <published>2016-10-14T01:00:00+01:00</published>
    <updated>2016-10-14T21:53:55+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Gave my first ever talk at a remote online conference on Thursday.  It&amp;rsquo;s been a while since I spoke at any kind of conference actually.  I used to give talks pretty regularly as an academic and running meet ups, but I&amp;rsquo;ve got out of the swing of it.  And giving a talk isn&amp;rsquo;t coding, which is what I really want to be doing.  Although by the look of it most of my time is now taken up blogging, devops and reviewing pull requests, but anyway.  I&amp;rsquo;ve given talks in SecondLife and I&amp;rsquo;ve been hosting online tutorials, remote pair programming and recording online lectures for students lots and lots over the last five years.  &lt;/p&gt;

&lt;p&gt;So presenting for &lt;a href="https://allremoteconfs.com/rails-2016"&gt;Rails Remote Conf&lt;/a&gt; was not such a huge difference.  It was a hangout and there was a separate custom chat app from webinarjam to take incoming questions and comments from the audience.  I&amp;rsquo;d done a fair amount of prep during the week, from sharing some &lt;a href="https://dl.dropboxusercontent.com/u/13196858/RailsRemoteConf-OpenSourceRailsCharityProject-SamJoseph.pdf"&gt;draft slides&lt;/a&gt; with our core team, although looking back at it now and considering some of the other talks I saw at the conference I should have animated in the different bullets, and/or replaced all the text with images, and used the slides as speaker notes.  Next time I guess.&lt;/p&gt;

&lt;p&gt;I was a little self-conscious that I wasn&amp;rsquo;t deep diving on Rails tech, but conference organiser and host Charles Max Wood reassured me that he likes to have a couple of less technical talks in the conference, so I launched into the talk, trying to remind myself to speak slowly.  My bane.  I talk too fast.  Listening to lectures and podcasts on 2x doesn&amp;rsquo;t help I&amp;rsquo;m sure, but it&amp;rsquo;s been a problem since my youth.  I guess I am a gabbler.  Maybe the text on the talk slides was not such a bad idea.  If people couldn&amp;rsquo;t understand my accent or pace of delivery, they could at least read the slides :-)&lt;/p&gt;

&lt;p&gt;I got a few comments and questions during the talk, which like usual hangout chat appear to have been lost to the ether when the session ended.  There was a question about how time-pressed project maintainers can manage lots of pull requests, and I responded with Pat Bolger&amp;rsquo;s great points on my first draft about getting the whole team involved in the review of pull requests, and of course my big favourite, &amp;ldquo;small PRs&amp;rdquo;.  There wasn&amp;rsquo;t extensive questioning at the end, hopefully because what I had said was transparently clear rather than just unutterably dull :-) Reassuringly I had some positive feedback by email afterwards from one audience member.&lt;/p&gt;

&lt;p&gt;Despite the time zone difference I managed to catch a few of the other talks, which were pretty good.    &lt;a href="https://twitter.com/philnash"&gt;Phil Nash&lt;/a&gt; spoke about two factor authentication, &lt;a href="https://twitter.com/cmaxw"&gt;Charles&lt;/a&gt; about freelancing and &lt;a href="http://nellshamrell.com/"&gt;Nell Shamrell&lt;/a&gt; about estimates that don&amp;rsquo;t suck.  Nell had a particularly interesting deep dive slide where she took apart a user story in terms of the technical specifics and gave points to each of those elements:&lt;/p&gt;

&lt;p&gt;&lt;img alt="detailed tech estimate" src="https://www.dropbox.com/s/7kmkkxvqgl2zmrh/Screenshot%202016-10-14%2010.05.22.png?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;The &lt;a href="http://www.slideshare.net/NellShamrell/estimates-that-dont-suck"&gt;full slides from Nell&amp;rsquo;s talk&lt;/a&gt; have even more.  That 44 points Nell gets for the user story are multiplied by some factor, and that gives a 66.  Which using a scale introduced earlier:&lt;/p&gt;

&lt;p&gt;&lt;img alt="points in days" src="https://www.dropbox.com/s/104oec3yghsk1im/Screenshot%202016-10-14%2010.07.14.png?dl=1" /&gt; &lt;/p&gt;

&lt;p&gt;Implying that this feature would take about 8 days.  I asked Nell whether there was a danger in over specifying the implementation of the feature here, and she said that that was a possibility and that many teams just stayed at the user story level.   I was interested in this lower level estimating process, and I could imagine how if you had a really serious pressure to deliver, that this would be a very useful process.  In our pro-bono AgileVentures charity projects things take as long as they take, and the process of estimating is more about giving new developers a coherent idea of how long something might take, rather than giving higher ups information to make key business decisions; although we do need to do some of that as well.&lt;/p&gt;

&lt;p&gt;I was probably too chatty in the limited time for chat after Nell&amp;rsquo;s talk.  There was one other question from an audience member, and Charles mentioned an app for voting on estimates.  I was hoping to get more info on that since we&amp;rsquo;re starting an AgileVentures project to build a tool for that.  The overall online conference format was fairly cool, but it was a shame to lose the chat history when each chat session shut down.  I would prefer a Slack instance for the conference where you could have a chat room for each talk that was persistent, and also some general hang-out rooms where people could continue conversations they had started in talk chats etc.&lt;/p&gt;

&lt;p&gt;I wonder if we should do an AgileVentures conference at some point, and use our existing Slack instance to support the chat.  We&amp;rsquo;ve got all the infrastructure we need with our AV events and hangouts system &amp;hellip; would be great to get the project maintainers to each present on their projects, and get one or two devs to each also present on some of the work they&amp;rsquo;ve been doing on the project.  I&amp;rsquo;m always worried about meetings and conferences taking time away from coding, but maybe some sort of online conference is what we need for people to understand what we&amp;rsquo;re all doing at AgileVentures?  I was also just listening to a podcast about Gitlab, which has 100&amp;rsquo;s of purely remote employees, and how they have specific coffee-break, friendly chat hangouts.  Maybe AgileVentures needs more of these social get together things &amp;hellip;?&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Agile Pricing Plans</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/13/agile-pricing-plans/"/>
    <id>http://blog.url.com/2016/10/13/agile-pricing-plans/</id>
    <published>2016-10-13T01:00:00+01:00</published>
    <updated>2016-10-13T20:41:01+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Continuing with my non-pairing streak, I got a fair few things sorted today.  A highlight being prototyping the new pricing plans for AgileVentures.  The current draft looks like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;£10/month: Premium - private slack group, RubyMine license, eligibility for paid and priority projects&lt;/li&gt;
&lt;li&gt;£25/month: Premium 121 - private text chat with mentor, 10 year professional development plan&lt;/li&gt;
&lt;li&gt;£50/month: Premium F2F - face to face hangouts with mentor, voting rights in charity meetings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In creating the draft, I appeared to fall foul of the difference between ActiveRecord &lt;code&gt;dup&lt;/code&gt; and &lt;code&gt;clone&lt;/code&gt;.  I was taking the existing pricing static page and copying it for tweaks to the new approach, but I used &lt;code&gt;clone&lt;/code&gt; instead of &lt;code&gt;dup&lt;/code&gt; and so ended up over-writing the existing plan, doh!  Fortunately we have versioning via the papertrail gem so I pulled out the old version and then used &lt;code&gt;dup&lt;/code&gt; to create a version without an id, and save it into place. Phew!&lt;/p&gt;

&lt;p&gt;I shared the new plan draft with some of the core team.  On reflection, perhaps I should have been following Scott Klemmer&amp;rsquo;s advice to always share multiple prototypes, but anyway, I&amp;rsquo;m getting great feedback from Federico about page layout to try and highlight the three-way choice, and from Thomas about a mob programming plan.  I guess an alternate could be something like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;£10/month: Premium - private slack group, RubyMine license, eligibility for paid and priority projects&lt;/li&gt;
&lt;li&gt;£25/month: Premium Mob - mob programming with mentor, 10 year professional development plan&lt;/li&gt;
&lt;li&gt;£50/month: Premium F2F - face to face hangouts with mentor, voting rights in charity meetings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and mob programming is fun.  Different mentors are likely to have different preferences about whether they want to give 121 text support or hosting mob programming sessions, or 121 pairing hangouts.  Much as I love mobbing and pairing, my intuition from the last 5 years of doing online education is that the majority of people seem to really prefer 121 communication.  Once you can get people bitten by the mobbing or pairing bug, then sure they can convert, but that&amp;rsquo;s potentially a slow uphill process.&lt;/p&gt;

&lt;p&gt;We could be throwing in all these options with even more types of plans, but the prevailing wisdom seems to be to have fewer plans to make the decision process easier.  I&amp;rsquo;m certainly not thinking of imposing 121 support on any of the AV mentors; I just seem to be under near constant pressure from MOOC students to give 121 support, so if I can offer them a plan where I do give them 121 support then that makes my life a lot easier and I&amp;rsquo;m giving people what they are asking for.  I haven&amp;rsquo;t yet heard from any learners that they want mob programming.  Now maybe what they &lt;em&gt;need&lt;/em&gt; is mob programming and pair programming.  It&amp;rsquo;s this funny divide between listening to your users and them asking for a &amp;ldquo;faster horse&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;I always thought we&amp;rsquo;d have more people taking up the free pair programming that AgileVentures tries to support.  Some did, but it never got to the critical mass I imagined.  My current working hypothesis is that it is just too intimidating for many people.  It would never occur to me online to conceal my name, or my face, or that I would be put off from attending a google hangout on air because of the message that pops up that says other people can see this broadcast, but over the last few years I&amp;rsquo;ve encountered that a great deal.&lt;/p&gt;

&lt;p&gt;Now we can say: &amp;ldquo;Be strong! If you push through that fear you&amp;rsquo;ll discover a brave new world of learning!&amp;rdquo;.  And I really believe that&amp;rsquo;s true, but I think you can only get so far exhorting people to overcome their fears.  In my mind if you have 100 people, there will be five who are happy to say almost anything in front of the group.  You can probably get those five to do almost anything.  They may also do inappropriate things that causes the group to disperse, so watch out for that.  Of the remaining people, if you&amp;rsquo;re charismatic and articulate you can probably get another five to join in a public learning process through convincing them that it is a great thing.&lt;/p&gt;

&lt;p&gt;However that leaves the remaining 90 people.  There are some who are never going to participate in public learning.  However I&amp;rsquo;d guess there are about 40 who if you are willing to connect to them individually, hear about their fears and needs in a safe space, that you can help them build up to the point that they stop being held back by a fear of failure, particularly public failure.&lt;/p&gt;

&lt;p&gt;Now everyone will probably put different numbers on these different types of people (that I&amp;rsquo;ve just made up).  I&amp;rsquo;m going with:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Happy to learn and fail in public 5%&lt;/li&gt;
&lt;li&gt;Can be convinced by general arguments 5%&lt;/li&gt;
&lt;li&gt;Can be convinced by personal support 40%&lt;/li&gt;
&lt;li&gt;Not ready to learn in public 50%&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It would be great to find some experimental studies to work out real values for these numbers, or even conduct some, although I think my days of doing purely scientific work are over :-)  Counter-arguments might come from saying that well, you think that giving that 121 support is going to help you bring 40% of folks to a place where they are participating at a new level, but actually that&amp;rsquo;s just one or two people and what you&amp;rsquo;ll end up doing is a lot of individual hand holding for not much gain.&lt;/p&gt;

&lt;p&gt;Maybe so, I have no omniscient power.  However my intuition says that sustainability will be hard if we&amp;rsquo;re relying on only those few willing to take the plunge for learning in crowd format.  Besides I love connecting with people individually on a 121 basis.  I love hearing about what&amp;rsquo;s going on for them and throwing my cognitive resources at trying to hook them up with resources, people and activities that will help them achieve their goals.&lt;/p&gt;

&lt;p&gt;What I can&amp;rsquo;t do, if I want to feed my kids, is spend all my time giving 121 support for free.  It even takes up time just saying no politely to all the people asking for 121 support.  Anyway, brain dump!  The tricky thing now, compared to when I first created the pricing page, is that we have other plans like the &amp;ldquo;premium plan&amp;rdquo; melded into the software of the AgileVentures site, so rolling out a new pricing plan will require coordination with some PRs, which is not as lightweight as I would like. Hence the creation of the beta pricing page, blogging about this, and so forth.  One thing that feels really great though is that we really are living the Agile process, and big thanks to Stripe for making it straightforward to take credit card payments.  Creating the new plans on the Stripe dashboard will be trivial, and the complexity of rolling them out to our users will be what we make it to be.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Non Pairing Day</title>
    <link rel="alternate" href="http://blog.url.com/2016/10/12/non-pairing-day/"/>
    <id>http://blog.url.com/2016/10/12/non-pairing-day/</id>
    <published>2016-10-12T01:00:00+01:00</published>
    <updated>2016-10-12T20:32:03+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So another day on non-pairing while me knee heals.  Managed to crunch through what feels like two or three async votes on LocalSupport and WebSiteOne.  That&amp;rsquo;s starting to flow nicely, although I would love to get the AsyncVoter project up and running so I don&amp;rsquo;t have to manage the logistics for the voting.  Main hangover business from yesterday was getting some example code up related to SEO with meta-tags on LocalSupport.  A CraftAcademy bootcamp graduate had put in a great pull request, and after I&amp;rsquo;d dithered about how to give feedback, we&amp;rsquo;d agree I&amp;rsquo;d push up a separate branch.  In the meantime, I was passing along Pat Bolger&amp;rsquo;s fantastic advice about having all team members review PRs to the LocalSupport and WebSiteOne projects, and while I&amp;rsquo;d dithered, Raoul and John had both given feedback on the graduate&amp;rsquo;s PR covering several of the points that I&amp;rsquo;d been thinking of.&lt;/p&gt;

&lt;p&gt;There was still some refactoring work that wasn&amp;rsquo;t covered, and I thought it was still easier to show rather than to explain, so I pulled some of the controller logic into &lt;code&gt;before_filter&lt;/code&gt;s and pushed that up.  I also refocused the cucumber story and fixed some of the issues Jon and Raoul had raised.   What was super-awesome was to see John and Raoul interacting in the PR like so:&lt;/p&gt;

&lt;p&gt;&lt;img alt="raoul answering jon's question" src="https://www.dropbox.com/s/029rqql7qrb5fdn/Screenshot%202016-10-11%2010.38.27.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;In my book this is the total antidote to the developer who&amp;rsquo;s intimidated to submit PRs for fear of having someone criticise their code.  Here, Jon, one of our more experienced developers is perfectly comfortable just asking what &amp;lsquo;og&amp;rsquo; means?  And Raoul, another experienced developer is supplying the answer. No shame, no embarrassment, just learning; and all this in the pull request of a recent bootcamp graduate.  Huge credit all round.&lt;/p&gt;

&lt;p&gt;Part of the reason I had wanted to play with my own branch was to look at the app holistically outside of the GitHub view of the pull request.  Having tweaked a little (you can see my &lt;a href="https://github.com/AgileVentures/LocalSupport/pull/371"&gt;branch here&lt;/a&gt;), I saw that while the new code was allowing our individual organisation show pages to have a more specific (and search-engine friendly) title, the changes were also removing some of the default meta-tags from the rest of the site.  After the &amp;ldquo;Martin Fowler&amp;rdquo; scrum, where I was pleased to introduce Kenyan Bootcamp founder Sigu to MetPlus project coordinator Pat, I did a quick hangout with the bootcamp graduate.  Not required, but I sensed that between John, Raoul and myself, we were at risk of overloading our new team member.  Having a hangout might have made that worse, but I went for it.&lt;/p&gt;

&lt;p&gt;I was pleased that I did.  I think we were able to reach a good shared understanding, and find that yes, the new code was removing some functionality from the existing system, but, shock, there weren&amp;rsquo;t any tests in our existing codebase for the meta-tag stuff that was removed.  We talked about how some default methods in the ApplicationController could fix this, but also how that was maybe sensibly the subject of another pull request.  It would be easy to be strict here and say, &amp;ldquo;hey, you need to not remove any functionality in this PR&amp;rdquo;; but if that functionality doesn&amp;rsquo;t have tests, then that&amp;rsquo;s not really in the remit of the person submitting the PR, particularly if they are a volunteer.  Far better to get the current PR fixed up and pulled in and create refactoring tickets for the other tasks, which allows the original submitter to get a sense of completion, keep the team in the loop by voting on those other tickets, and allow someone else to jump in and help with tickets, or the original submitter to carry on if they want - great flexibility.&lt;/p&gt;

&lt;p&gt;This all fed into a dry run of my Rails Remote conference talk on learning through pull requests, which I was really pleased to get done and share with the AV premium members and get feedback.  The key question seems to be how can I get myself to talk slower without a teleprompter? :-)  And that was pretty much the day. I reviewed other PRs, had little chats in Slack, posted to the MOOC TAs to say that the next week&amp;rsquo;s material was ready for review.  Really not sure what to do with the AV102 course and the MOOC support infrastructure there when we go self-paced next year &amp;hellip;&lt;/p&gt;

&lt;p&gt;One other thing that I did do as part of an async vote on a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1319"&gt;story&lt;/a&gt; about coordinating our events with Meetup.com.  I&amp;rsquo;m an admin on the RemotePairProgramming group there, which keeps getting new sign ups but has been kind of dormant recently.  Actually as part of the discussion of that ticket I went ahead and created a parallel repeating event on Meetup to mirror the &amp;ldquo;Kent Beck&amp;rdquo; scrum, and several people signed up and we had one new person join the scrum and tell us about the Elm and OCaml stuff they were doing.  That was really cool, particularly since I was able to do another pair hookup and new premium member, Sasha, and Elm/OCaml dude, Junior, chatted Elm and AgileVentures for an hour or so off the back of the scrum.&lt;/p&gt;

&lt;p&gt;I just love manual prototyping!  Coding and automating is great, but it&amp;rsquo;s so lovely to validate that the thing you&amp;rsquo;re about to automate (async voting, event syncing with another system) will actually reap some dividends.  So it was a non-pairing day for me, but I loved helping bring some others together, even if only for a chat :-)  &lt;/p&gt;

&lt;p&gt;Related Videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=BLM8cmLBkWc"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/S-zJT6rp-Xo"&gt;LocalSupport PR review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SfMb5n6Xsrs"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
