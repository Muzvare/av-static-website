<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-10-06T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>AV EcoSystem Back to Front</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/06/av-ecosystem-review-back-to-front/"/>
    <id>http://blog.url.com/2017/10/06/av-ecosystem-review-back-to-front/</id>
    <published>2017-10-06T01:00:00+01:00</published>
    <updated>2017-12-13T21:53:58+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="Back to Front" src="/images/back_to_front.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;This morning was back to front as I squeezed in an AgileVentures trustee meeting and LocalSupport client meeting before blogging, all due to time constraints on the part of other meeting participants.  Now I&amp;rsquo;m struggling to sort my day out alongside processing the &amp;ldquo;ingressive&amp;rdquo;/&amp;ldquo;congressive&amp;rdquo; concepts introduced by Eugenia Cheng in the latest &lt;a href="https://www.greaterthancode.com/2017/07/05/episode-038-category-theory-for-normal-humans/"&gt;greater than code&lt;/a&gt; podcast that I was listening to.  At the risk of falling into my naval-gazing blogs of last year I start wondering if &amp;ldquo;ingressive&amp;rdquo; sports that have winners are &amp;ldquo;bad&amp;rdquo; and I agonise about whether the competitive football matches my boys take part in (and I coach for) are all retrograde steps preventing myself and my boys from contributing positively to society.  I do have fantasies of some kind of team activity for youngsters that involves charity work, but I can&amp;rsquo;t immediately work out a way to get the kids excited about it &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyway, at least my work is &amp;ldquo;congressive&amp;rdquo;, I hope - trying to bring together groups of volunteers to help other charities with technology interventions.  Although often the one to one interactions can end up being &amp;ldquo;ingressive&amp;rdquo;.  I&amp;rsquo;ve been trying so hard to &amp;ldquo;win&amp;rdquo; the smart person competition for so long, it&amp;rsquo;s difficult for me to change my spots.  Still, today I&amp;rsquo;m trying to stab out the ruby-fied agile-bot.  I&amp;rsquo;ve not been adding extra publicity to the PR updates I&amp;rsquo;ve been doing.  I almost shy away from reviews of this latest code as there&amp;rsquo;s so much to improve, but I can&amp;rsquo;t bear not having an end to end operation that allows me to start tidying up and managing our slack messaging.  So, that naval-gazing aside, where are we?  We have a PR:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1835"&gt;https://github.com/AgileVentures/WebsiteOne/pull/1835&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s merge it, which should get it onto develop, but I need it on staging to really check what&amp;rsquo;s going on.  Okay, so maybe that&amp;rsquo;s a window to work out what&amp;rsquo;s happening with dependabot, which is opening new PRs every time a dependency updates.  Noisy at the moment - maybe it will settle down.  Either way I think the need to keep re-starting builds due to our intermittent fails is a real pain, so perhaps I can quickly get this &amp;ldquo;second run&amp;rdquo; system that we have on LocalSupport set up on WebSiteOne &amp;hellip;&lt;/p&gt;

&lt;p&gt;What we have on Localsupport is a travis build that includes the following:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;bundle exec rake cucumber:second_try
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;let&amp;rsquo;s pull in the latest develop updates and get a branch on WSO set up with that:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/WebsiteOne (develop)]$ 
â†’ git checkout -b 1803_setup_cuke_second_run_on_fail
Switched to a new branch '1803_setup_cuke_second_run_on_fail'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now add the following to &lt;code&gt;lib/tasks/cucumber.rake&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s1"&gt;'Run all features, record any failures'&lt;/span&gt;
    &lt;span class="no"&gt;Cucumber&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="ss"&gt;first_try: &lt;/span&gt;&lt;span class="s1"&gt;'test:prepare'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;'run all features and record failures'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vendored_cucumber_bin&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fork&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;# You may get faster startup if you set this to false&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'first_try'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s1"&gt;'Run failures if any exist'&lt;/span&gt;
    &lt;span class="no"&gt;Cucumber&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="ss"&gt;second_try: &lt;/span&gt;&lt;span class="s1"&gt;'test:prepare'&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="s1"&gt;'rerun any recorded failures'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;binary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vendored_cucumber_bin&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;fork&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="c1"&gt;# You may get faster startup if you set this to false&lt;/span&gt;
      &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;profile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'second_try'&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and this to &lt;code&gt;config/cucumber.yml&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight yaml"&gt;&lt;code&gt;&lt;span class="na"&gt;first_try&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt;  &lt;span class="s"&gt;NEVER_FAIL=true  &amp;lt;%= std_opts %&amp;gt; --format rerun --out rerun.txt features --strict --tags ~@wip&lt;/span&gt;
&lt;span class="na"&gt;second_try&lt;/span&gt;&lt;span class="pi"&gt;:&lt;/span&gt; &lt;span class="s"&gt;NEVER_FAIL=false &amp;lt;%= std_opts %&amp;gt; @rerun.txt  --strict --tags ~@wip&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then we need to see if we adjust the sempahore running options to hit this.  In the process I go into &lt;code&gt;lib/tasks/ci.rake&lt;/code&gt; and change it so it hits first&lt;em&gt;try and second&lt;/em&gt;try (and not ci_cucumber) like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;Rails&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;production?&lt;/span&gt;
  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rspec/core/rake_task'&lt;/span&gt;
  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'cucumber/rake/task'&lt;/span&gt;
  &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'coveralls/rake/task'&lt;/span&gt;

  &lt;span class="no"&gt;Coveralls&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;RakeTask&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;

  &lt;span class="no"&gt;Cucumber&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:ci_cucumber&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;cucumber_opts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'--tags ~@intermittent-ci-js-fail'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;namespace&lt;/span&gt; &lt;span class="ss"&gt;:ci&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s1"&gt;'Run Rspec and Cucumber then push coverage report to coveralls'&lt;/span&gt;
    &lt;span class="n"&gt;task&lt;/span&gt; &lt;span class="ss"&gt;tests: &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:spec&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cucumber:first_try'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'cucumber:second_try'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'coveralls:push'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I also update semaphore so that the Jasmine tests run first:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/he1c9x865rja5i0/Screenshot%202017-10-06%2011.07.26.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;and I push and see &amp;hellip; the problem is the delayed feedback loop is that I need to wait for an intermittent failure to see if this all works.  If the &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1868"&gt;PR&lt;/a&gt; passes I guess I merge and see &amp;hellip; and the failing first try has broken the semaphore build:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Failing Scenarios:
cucumber -p first_try features/documents.feature:169 # Scenario: Insert media model rejects badly formatted youtube links
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ah, we also need the folowing in &lt;code&gt;features/support/env.rb&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="c1"&gt;# To be used in conjunction with rerun option, so that we don't return a failing&lt;/span&gt;
&lt;span class="c1"&gt;# exit code until the second try fails&lt;/span&gt;
&lt;span class="nb"&gt;at_exit&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="nb"&gt;exit&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'NEVER_FAIL'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'true'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we&amp;rsquo;ll see if that works, but it might take the rest of the day &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Pride Comes Before A Fall</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/05/av-ecosystem-review-pride-comes-before-a-fall/"/>
    <id>http://blog.url.com/2017/10/05/av-ecosystem-review-pride-comes-before-a-fall/</id>
    <published>2017-10-05T01:00:00+01:00</published>
    <updated>2017-12-13T21:40:10+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="pride" src="/images/pride.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So they say that pride comes before a fall.  Just after being so pleased with myself for fixing the strange double leakage issue introduced by the new Slack gem (pass in Rails.logger), I got notices that I&amp;rsquo;d posted some secret tokens to GitHub.  In committing the latest vcr cassettes I had inadvertently included the Slack and Gitter api tokens.  It&amp;rsquo;s a relatively easy fix with the following code in the VCR config:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;filter_sensitive_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;SLACK_AUTH_TOKEN&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'SLACK_AUTH_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;filter_sensitive_data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;GITTER_API_TOKEN&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'GITTER_API_TOKEN'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but I&amp;rsquo;ll have to regenerate the existing tokens &amp;hellip; anyway, we&amp;rsquo;re running out of week to get this feature fixed up.  The key issues outstanding (now that we have all the existing tests passing) are:&lt;/p&gt;

&lt;p&gt;1) managing the different Slack and Gitter room ids for staging and production
2) deciding whether to add explicit cukes that check that the Slack and Gitter APIs are hit
3) filling out all the pending unit tests&lt;/p&gt;

&lt;p&gt;I think I&amp;rsquo;ve got to start with item 1.  On agile-bot, Michael and I set up a separate ENV var (&lt;code&gt;LIVE_ENV&lt;/code&gt;) to specify whether the &amp;ldquo;production&amp;rdquo; Slack should be hit &amp;hellip; I had half a mind to check which URL the instance was running against, but probably easier to re-use the &lt;code&gt;LIVE_ENV&lt;/code&gt; concept.  I take a stab with the ugly:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'LIVE_ENV'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'production'&lt;/span&gt;
    &lt;span class="no"&gt;CHANNELS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"asyncvoter"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C2HGJF54G"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"autograder"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C0UFNHRAB"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"betasaasers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C02AHEA5P"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"binghamton-university-bike-share"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C033Z02P9"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"codealia"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C0297TUQC"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
        &lt;span class="s2"&gt;"pairing_notifications"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C02BNVCM1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"standup_notifications"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C02B4QH1C"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="no"&gt;GITTER_ROOMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"saasbook/MOOC"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"544100afdb8155e6700cc5e4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"saasbook/AV102"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"55e42db80fc9f982beaf2725"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"AgileVentures/agile-bot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"56b8bdffe610378809c070cc"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="no"&gt;CHANNELS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;    &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"cs169"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C29J4CYA2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"websiteone"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C29J4QQ9W"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"general"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C0TLAE1MH"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"pairing_notifications"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C29J3DPGW"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"standup_notifications"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"C29JE6HGR"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="no"&gt;GITTER_ROOMS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;"saasbook/MOOC"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"56b8bdffe610378809c070cc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"saasbook/AV102"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"56b8bdffe610378809c070cc"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;"AgileVentures/agile-bot"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"56b8bdffe610378809c070cc"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which maybe should be loaded from a file - I have a funny reticence to load things from files.  I&amp;rsquo;ve never been so comfortable with grabbing stuff from files - a legacy from Java where it was such a pain?  In Ruby it&amp;rsquo;s pretty damn trivial.  I guess when I have stuff formatted in one way, stepping through and reformatting for yaml, or what have you, causes my motivation to collapse.  What we really want in the end is to be looking all these up from the Slack API, so I&amp;rsquo;m going to leave that for a refactoring, get the rest of the unit tests to pass and try to get this onto staging to see if my claims that we can replace the agile-bot are close to true.&lt;/p&gt;

&lt;p&gt;So I stab about a bit and with a fair amount of replication of tests (and some refactoring), I get the output of the RSpec test to this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SlackService
  .post_hangout_notification
    PairProgramming
      sends the correct slack message to the correct channels
      does not post notification if hangout url is blank
      does not fail when event has no associated project
      should ping gitter and slack (but not general) when the project is cs169
    Scrums
      does not post notification if hangout url is blank for pairing
      should ping slack when the project is cs169
      does not fail when event has no associated project
      sends the correct slack message to the correct channels
  .post_yt_link
    Scrums
      does not post youtube video link if yt_video_id is blank
      sends the correct slack message to the correct channels
    PairProgramming
      does not ping slack when the project is cs169
      does not post youtube video link if yt_video_id is blank
      sends the correct slack message to the correct channels
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which I think is a lot better coverage than we have had.  What I&amp;rsquo;d really like is a local report of coverage for this file for these tests.  There&amp;rsquo;s also a lot of replication in the SlackService file itself, but I think I will leave a major refactor here until I&amp;rsquo;ve seen all our existing functionality replicated.  First, let&amp;rsquo;s get this PR merged and onto staging, where I can test all the settings against hitting a backup Slack instance, and then ease this into production &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Slack Service Cucumber Regressions</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/04/av-ecosystem-review-slack-service-cucumber-regressions/"/>
    <id>http://blog.url.com/2017/10/04/av-ecosystem-review-slack-service-cucumber-regressions/</id>
    <published>2017-10-04T01:00:00+01:00</published>
    <updated>2017-12-11T21:01:27+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="regression testing" src="/images/Guitest.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got the RSpec unit(?) tests green for the new version of the WSO Slack Service that takes the AgileBot microservice completely out of the picture.  I start the day by merging the latest from develop, which is a gem bump from dependabot (I have mixed feelings about these automated PRs for gem upgrades).  Then I check that we&amp;rsquo;re still green for the RSpec.  Dangerous to be pulling in other changes when I still have pending RSpecs and failing cukes, but hmmm &amp;hellip; anyway, here are the regression failures from running the cukes on the new Slack service:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="c"&gt;#&amp;lt;Double "Logger"&amp;gt; was originally created in one example but has leaked into another example and can no longer be used. rspec-mocks' doubles are designed to only last for one example, and you need to create a new one in each example you wish to use it for. (RSpec::Mocks::ExpiredTestDoubleError)&lt;/span&gt;
./app/services/slack_service.rb:35:in &lt;span class="sb"&gt;`&lt;/span&gt;send_slack_message&lt;span class="s1"&gt;'
./app/services/slack_service.rb:14:in `post_hangout_notification'&lt;/span&gt;
./app/controllers/event_instances_controller.rb:15:in &lt;span class="sb"&gt;`&lt;/span&gt;update&lt;span class="s1"&gt;'
./features/step_definitions/event_steps.rb:266:in `/^the HangoutConnection has pinged to indicate the event (start|continuing)$/'&lt;/span&gt;
features/events/live_event.feature:21:in &lt;span class="sb"&gt;`&lt;/span&gt;And the HangoutConnection has pinged to indicate the event start&lt;span class="s1"&gt;'

# all the below were of the same form as above

Failing Scenarios:
cucumber features/events/live_event.feature:19 # Scenario: Ongoing ping from HangoutConnection app keeps event alive
cucumber features/events/live_event.feature:30 # Scenario: Lack of ping from HangoutConnection after two minutes kills events
cucumber features/events/upcoming_events.feature:34 # Scenario: Shows event past end time when still live
cucumber features/twitter.feature:13 # Scenario: Event going live without valid live stream does not cause youtube link to be tweeted
cucumber features/twitter.feature:18 # Scenario: Event going live without valid live stream will have youtube link tweeted later when live
cucumber features/twitter.feature:27 # Scenario: Event going live without valid live stream still causes hangout link to be tweeted
cucumber features/twitter.feature:32 # Scenario: Event going live with valid livestream causes tweets of hangout link and youtube link to be sent
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So the specs are all green, and the cukes that are failing are all hitting this issue of a double leaking from one example to another &amp;hellip;, and they pass individually, and I can&amp;rsquo;t see any mention of &amp;ldquo;Logger&amp;rdquo; in the step definitions. Weird.  I trace through the stack trace above and again see no mention of a &lt;code&gt;double :logger&lt;/code&gt; being created anywhere &amp;hellip; no mention of any doubles anywhere in the cuke step definitions.  Something from factoryGirl?  No mention of doubles there &amp;hellip; I try running all the &lt;code&gt;live_event.feature&lt;/code&gt; cukes together and yes, the error recurrs.  So the first scenario passes:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Background:
    Given following events exist:
      | name       | description             | category        | start_datetime          | duration | repeats | time_zone | project | repeats_weekly_each_days_of_the_week_mask | repeats_every_n_weeks |
      | Scrum      | Daily scrum meeting     | Scrum           | 2014/02/03 07:00:00 UTC | 150      | never   | UTC       |         |                                           |                       |

  Scenario: Event is seen to be live when event is started a minute previously
    Given an event "Scrum"
    And the HangoutConnection has pinged to indicate the event start
    Then the event should be live
    And after one minute
    Then the event should still be live
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but then the following two fail:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Scenario: Ongoing ping from HangoutConnection app keeps event alive
    Given an event "Scrum"
    And the HangoutConnection has pinged to indicate the event start
    Then the event should be live
    And after three minutes
    When the HangoutConnection pings to indicate the event is ongoing
    Then the event should still be live
    And after three more minutes
    When the HangoutConnection pings to indicate the event is ongoing
    Then the event should still be live

  Scenario: Lack of ping from HangoutConnection after two minutes kills events
    Given an event "Scrum"
    And the HangoutConnection has pinged to indicate the event start
    Then the event should be live
    And after three minutes
    Then the event should be dead
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with the same Logger issue.  I also notice that the test runs are hitting the test Slack instance, which is not ideal &amp;hellip; we&amp;rsquo;re covered by VCR I think &amp;hellip; so I&amp;rsquo;m not going to add extra stubs immediately, and I think if I can solve this Logger issue I can make progress.  Previous experience would make me suspect the background step creating events via factories, but inspection shows that it is creating a normal active record element:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Given&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^following events exist:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:project_id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'project'&lt;/span&gt;&lt;span class="p"&gt;]).&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'project'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;
    &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;delete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'project'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="no"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The hangout ping step is rather long:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;When(/^the HangoutConnection has pinged to indicate the event (start|continuing)$/) do |type|
  participants = {"0"=&amp;gt;{"id"=&amp;gt;"hangout2750757B_ephemeral.id.google.com^a85dcb4670", "hasMicrophone"=&amp;gt;"true", "hasCamera"=&amp;gt;"true", "hasAppEnabled"=&amp;gt;"true", "isBroadcaster"=&amp;gt;"true", "isInBroadcast"=&amp;gt;"true", "displayIndex"=&amp;gt;"0", "person"=&amp;gt;{"id"=&amp;gt;"108533475599002820142", "displayName"=&amp;gt;"Alejandro Babio", "image"=&amp;gt;{"url"=&amp;gt;"https://lh4.googleusercontent.com/-p4ahDFi9my0/AAAAAAAAAAI/AAAAAAAAAAA/n-WK7pTcJa0/s96-c/photo.jpg"}, "na"=&amp;gt;"false"}, "locale"=&amp;gt;"en", "na"=&amp;gt;"false"}}
  header 'ORIGIN', 'a-hangout-opensocial.googleusercontent.com'
  put "/hangouts/@google_id", {title: @event.name, host_id: '3', event_id: @event.id,
                               participants: participants, hangout_url: 'http://hangout.test',
                               hoa_status: 'live', project_id: '1', category: 'Scrum', yt_video_id: '11'}
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but again, there&amp;rsquo;s no indication of any mocking, stubbing, doubles or loggers.  I google the error message and the only place I see it is in the RSpec docs: &lt;a href="https://relishapp.com/rspec/rspec-mocks/docs/basics/scope"&gt;https://relishapp.com/rspec/rspec-mocks/docs/basics/scope&lt;/a&gt; where we see an example of a double being added to an object and then being referred to in another instance, but this is Cucumber and not RSpec, although we&amp;rsquo;re using RSpec commands in the step definitions.  So the place to look is the steps that are using those RSpec commands, e.g. &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    Then the event should be live
    And after one minute
    Then the event should still be live
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the event should (still )?be live$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;event_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'This event is now live!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;And&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^after one (more )?minute$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="no"&gt;Delorean&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;time_travel_to&lt;/span&gt; &lt;span class="s1"&gt;'1 minute from now'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the event should (still )?be live$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;ignore&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;visit&lt;/span&gt; &lt;span class="n"&gt;event_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vi"&gt;@event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;page&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_content&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'This event is now live!'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So the state we&amp;rsquo;re carrying over is the &lt;code&gt;@event&lt;/code&gt; instance, but that should get recreated for each scenario &amp;hellip; I try removing all the expectation steps from the scenarios, but the issue still occurs.  The failure is specifically on the attempt to ping the event start, and the error is thrown in the slack service when we try to send the slack message &amp;hellip; I take out that line and we pass:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  def send_slack_message(client, channel, text, user)
    client.chat_postMessage(channel: channel, text: text, username: user.display_name, icon_url: user.gravatar_url, link_names: 1)
  end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There&amp;rsquo;s no mention of doubles in the SlackRubyClient github issues, but there is mention of some &lt;a href="https://github.com/slack-ruby/slack-ruby-client/issues/104"&gt;thread leak issue&lt;/a&gt; that was fixed, but also mentions that the SlackRubyClient has a logger &amp;hellip; I try setting that to nil, in our Rails initializer, to no avail, so I go ahead and open an issue on the SlackRubyClient repo:&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/slack-ruby/slack-ruby-client/issues/174"&gt;https://github.com/slack-ruby/slack-ruby-client/issues/174&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;which I seem to have fixed the issue by setting the slack client logger to the Rails.logger&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Slack::Web::Client.new(logger: Rails.logger)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now I just have to decide whether these acceptance tests need to explicitly check that the SlackService is operating correctly rather than just catching them in VCR &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Rumours of AgileBots Demise</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/03/av-ecosystem-review-rumours-of-agilebots-demise/"/>
    <id>http://blog.url.com/2017/10/03/av-ecosystem-review-rumours-of-agilebots-demise/</id>
    <published>2017-10-03T01:00:00+01:00</published>
    <updated>2017-12-07T20:53:57+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="demise" src="/images/demise.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Early to bed and early to rise makes a man &amp;hellip; do a 5K jog to the top of the nearest hill and get to the computer early to start working on tests of the new rubyfied agilebot.  I start by pulling the latest from develop and merging to my local branch.  Let&amp;rsquo;s start by hitting each of the three regression errors I saw yesterday:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  1&lt;span class="o"&gt;)&lt;/span&gt; SlackService.post_yt_link sends a post request to the agile-bot with the proper data
     Failure/Error: elsif hangout.type &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;

     NoMethodError:
       undefined method &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="s1"&gt;' for #&amp;lt;EventInstance:0x007f9a4d36c5b0&amp;gt;
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/activemodel-4.2.8/lib/active_model/attribute_methods.rb:433:in `method_missing'&lt;/span&gt;
     &lt;span class="c"&gt;# ./app/services/slack_service.rb:62:in `post_yt_link'&lt;/span&gt;
     &lt;span class="c"&gt;# ./spec/services/slack_service_spec.rb:52:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That&amp;rsquo;s from this test:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends a post request to the agile-bot with the proper data'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mock_url'&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'localsupport'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Local Support'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;assert_requested&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://agile-bot.herokuapp.com/hubot/hangouts-video-notify'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;times: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"title=MockEvent&amp;amp;video=https%3A%2F%2Fyoutu.be%2Fmock_url&amp;amp;type=PairProgramming&amp;amp;host_name=random&amp;amp;host_avatar=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;gravatar&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;project=local-support"&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which happens to highlight a code path that I hadn&amp;rsquo;t tested yet, where I&amp;rsquo;m still using the AgileBot CoffeeScript variable name. I can fix that easily by moving to:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="no"&gt;Features&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;slack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;enabled&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;blank?&lt;/span&gt;

    &lt;span class="n"&gt;video&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"https://youtu.be/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;category&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"Scrum"&lt;/span&gt;
      &lt;span class="n"&gt;send_slack_message&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;CHANNELS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:general&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"Video/Livestream for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;
    &lt;span class="k"&gt;elsif&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;category&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- problem was `hangout.type` here&lt;/span&gt;
      &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;channel_for_project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="no"&gt;CHANNELS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:cs169&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;send_slack_message&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;CHANNELS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:general&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="s2"&gt;"Video/Livestream for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;
        &lt;span class="n"&gt;send_slack_message&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Video/Livestream for &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;title&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;video&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then I get a new error:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  1&lt;span class="o"&gt;)&lt;/span&gt; SlackService.post_yt_link sends a post request to the agile-bot with the proper data
     Failure/Error: send_slack_message client, CHANNELS[:general], &lt;span class="s2"&gt;"Video/Livestream for #{hangout.title}: #{video}"&lt;/span&gt;, hangout.user

     NameError:
       undefined &lt;span class="nb"&gt;local &lt;/span&gt;variable or method &lt;span class="sb"&gt;`&lt;/span&gt;client&lt;span class="s1"&gt;' for SlackService:Module
     # ./app/services/slack_service.rb:65:in `post_yt_link'&lt;/span&gt;
     &lt;span class="c"&gt;# ./spec/services/slack_service_spec.rb:52:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which is another easy fix (another code path not tested) - by adding the following code:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Slack&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Web&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Of course part of me (and maybe you) is screaming, don&amp;rsquo;t fix the regressions, you should be working out precisely the tests needed for the model you actually have, and worrying about regressions later.  However I can&amp;rsquo;t stand the idea that I replicate a load of the existing tests, and then have to process those regression errors later.  Running through the regression errors gets my head back in the space - it&amp;rsquo;s less effort mentally, bad perhaps, but I&amp;rsquo;m doing this in blogging fragments each morning.  No one is paying me big bucks to spend proper programming days on this.  I&amp;rsquo;ve got to go with what I can manage.  Also, and perhaps more importantly, the existing tests are supposed to be proper checks of what we want from this service, and that&amp;rsquo;s not changing.&lt;/p&gt;

&lt;p&gt;Anyhow, now I get another error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1) SlackService.post_yt_link sends a post request to the agile-bot with the proper data
     Failure/Error: client.chat_postMessage(channel: channel, text: text, username: user.display_name, icon_url: user.gravatar_url, link_names: 1)

     UncaughtThrowError:
       uncaught throw #&amp;lt;ArgumentError: Required arguments :channel missing&amp;gt;
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/slack-ruby-client-0.7.7/lib/slack/web/api/endpoints/chat.rb:69:in `throw'
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/slack-ruby-client-0.7.7/lib/slack/web/api/endpoints/chat.rb:69:in `chat_postMessage'
     # ./app/services/slack_service.rb:38:in `send_slack_message'
     # ./app/services/slack_service.rb:68:in `post_yt_link'
     # ./spec/services/slack_service_spec.rb:52:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Which looks a little more complicated, but is actually just another chunk of code missing from the youtube posting path (which I hadn&amp;rsquo;t tested manually).  The following should fix that:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;channel_for_project&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but it doesn&amp;rsquo;t because the project created for the test doesn&amp;rsquo;t have a corresponding channel in the test fixtures.  There&amp;rsquo;s a number of changes that I could make to the large test &lt;code&gt;describe&lt;/code&gt; block to fix all this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'.post_yt_link'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;stub_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://agile-bot.herokuapp.com/hubot/hangouts-video-notify'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;hangout_url: &lt;/span&gt;&lt;span class="s2"&gt;"mock_url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends a post request to the agile-bot with the proper data'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mock_url'&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'localsupport'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Local Support'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;assert_requested&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://agile-bot.herokuapp.com/hubot/hangouts-video-notify'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;times: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
        &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;req&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;body&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"title=MockEvent&amp;amp;video=https%3A%2F%2Fyoutu.be%2Fmock_url&amp;amp;type=PairProgramming&amp;amp;host_name=random&amp;amp;host_avatar=&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;gravatar&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;amp;project=local-support"&lt;/span&gt;
      &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not post youtube video link if yt_video_id is blank'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'    '&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;assert_not_requested&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:post&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'https://agile-bot.herokuapp.com/hubot/hangouts-video-notify'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but the looming question is what level should these tests stub at.  Options are:&lt;/p&gt;

&lt;p&gt;1) stub the internal method of the class under test
2) stub at the level of the Slack client
3) stub at the level of the post request to the Slack API&lt;/p&gt;

&lt;p&gt;I could make arguments for each.  It&amp;rsquo;s tempting to go for 3) because the existing test is stubbing there, but I feel that&amp;rsquo;s the job of an acceptance test, which I hope we already have.  Stubbing at the internal method level feels too fine grained.  I&amp;rsquo;m going to use dependency injection and go for 2), stubbing at the level of the Slack client.  I change the method signature like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Slack&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Web&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Client&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the tests like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'.post_yt_link'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;hangout_url: &lt;/span&gt;&lt;span class="s2"&gt;"mock_url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:slack_client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends a post request to the agile-bot with the proper data'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mock_url'&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'websiteone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'WebSiteOne'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J4QQ9W'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="s1"&gt;''&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not post youtube video link if yt_video_id is blank'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'    '&lt;/span&gt;
      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Off the top of my head I&amp;rsquo;m not sure exactly what all the componets are that the client should receive as argument components, so I&amp;rsquo;m just putting in blanks and will run it and pull out the exact elements, checking that they are what I expect, and then hopefully make the test go green; &amp;hellip; and I get what I&amp;rsquo;m expecting:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1) SlackService.post_yt_link sends a post request to the agile-bot with the proper data
     Failure/Error: expect(client).to have_received(:chat_postMessage).with(channel: 'C29J4QQ9W', text: '', username: '', icon_url: '', link_names: 1)

       #&amp;lt;Double :slack_client&amp;gt; received :chat_postMessage with unexpected arguments
         expected: ({:channel=&amp;gt;"C29J4QQ9W", :text=&amp;gt;"", :username=&amp;gt;"", :icon_url=&amp;gt;"", :link_names=&amp;gt;1})
              got: ({:channel=&amp;gt;"C0TLAE1MH", :text=&amp;gt;"Video/Livestream for MockEvent: https://youtu.be/mock_url", :username...con_url=&amp;gt;"https://www.gravatar.com/avatar/47548e7f026bc689ba743b2af2d391ee?d=retro", :link_names=&amp;gt;1}) (1 time)
                   ({:channel=&amp;gt;"C29J4QQ9W", :text=&amp;gt;"Video/Livestream for MockEvent: https://youtu.be/mock_url", :username...con_url=&amp;gt;"https://www.gravatar.com/avatar/47548e7f026bc689ba743b2af2d391ee?d=retro", :link_names=&amp;gt;1}) (1 time)
     # ./spec/services/slack_service_spec.rb:53:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which reminds me that actually we hit the end point twice, but I can also test for that explcitly like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:expected_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'Video/Livestream for MockEvent: https://youtu.be/mock_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gravatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mock_url'&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'websiteone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'WebSiteOne'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C0TLAE1MH'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J4QQ9W'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although I have to admit, there were a few rounds of thrashing to get there :-)  So I happened to start on the &lt;code&gt;.post_yt_link&lt;/code&gt; method, and so basically I&amp;rsquo;ll now need to do similar for the &lt;code&gt;.post_hangout_notification&lt;/code&gt; method tests, although I&amp;rsquo;m feeling a little nervous about using spies, since I&amp;rsquo;d like to be checking that we don&amp;rsquo;t send any messages we don&amp;rsquo;t expect:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'.post_hangout_notification'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;hangout_url: &lt;/span&gt;&lt;span class="s2"&gt;"mock_url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:slack_client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'cs169'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'Edx'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C0TLAE1MH'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J4CYA2'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not fail when event has no associated project'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C0TLAE1MH'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not post notification if hangout url is blank'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hangout_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"     "&lt;/span&gt;

      &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;but I have some more general errors still from untested codepaths:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1) SlackService.post_hangout_notification sends the correct slack message to the correct channels
     Failure/Error: send_slack_message client, CHANNELS[:general], "#{hangout.title}: #{hangout.link}", hangout.user

     NoMethodError:
       undefined method `link' for #&amp;lt;EventInstance:0x007fe269d2ca50&amp;gt;
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/activemodel-4.2.8/lib/active_model/attribute_methods.rb:433:in `method_missing'
     # ./app/services/slack_service.rb:23:in `post_hangout_notification'
     # ./spec/services/slack_service_spec.rb:18:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  2) SlackService.post_hangout_notification does not fail when event has no associated project
     Failure/Error: CHANNELS[project.try(:slug).to_sym]

     NoMethodError:
       undefined method `to_sym' for nil:NilClass
       Did you mean?  to_s
     # ./app/services/slack_service.rb:49:in `channel_for_project'
     # ./app/services/slack_service.rb:11:in `post_hangout_notification'
     # ./spec/services/slack_service_spec.rb:25:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which are some little syntax misses of mine.  I fix those and then after a lot of hammering I end up with this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;SlackService&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:slack_service&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;SlackService&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="ss"&gt;email: &lt;/span&gt;&lt;span class="s1"&gt;'random@random.com'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;before&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Features&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;slack&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;notifications&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;enabled&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'.post_hangout_notification'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;hangout_url: &lt;/span&gt;&lt;span class="s2"&gt;"mock_url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;double&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:slack_client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="c1"&gt;# @TODO Improve the message format to hide the URL details ... and welcome newcomers ...&lt;/span&gt;
    &lt;span class="c1"&gt;# @TODO we should pass in CHANNELS and GITTER ROOMS work out a way to handle that based on deployed instance, e.g staging, production etc.&lt;/span&gt;

    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:general_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C0TLAE1MH'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent: mock_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gravatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:project_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J4QQ9W'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'@here MockEvent: mock_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gravatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:pairing_notifications_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J3DPGW'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'@channel MockEvent: mock_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gravatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
          &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels for pairing'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'websiteone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;general_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pairing_notifications_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;slack_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not fail when event has no associated project for pairing'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;general_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pairing_notifications_channel_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;slack_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'should ping gitter when the project is cs169'&lt;/span&gt;
    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels for scrums'&lt;/span&gt;
    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'does not fail when event has no associated project for scrums'&lt;/span&gt;
    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'does not post notification if hangout url is blank for scrums'&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not post notification if hangout url is blank for pairing'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hangout_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"     "&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="n"&gt;receive&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;slack_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_hangout_notification&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="s1"&gt;'.post_yt_link'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:hangout&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'MockEvent'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;category: &lt;/span&gt;&lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;hangout_url: &lt;/span&gt;&lt;span class="s2"&gt;"mock_url"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;spy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:slack_client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:expected_post_args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s1"&gt;'Video/Livestream for MockEvent: https://youtu.be/mock_url'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;username: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;display_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;icon_url: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;gravatar_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="ss"&gt;link_names: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels for pairing'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'mock_url'&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;slug: &lt;/span&gt;&lt;span class="s1"&gt;'websiteone'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;title: &lt;/span&gt;&lt;span class="s1"&gt;'WebSiteOne'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;description: &lt;/span&gt;&lt;span class="s1"&gt;'hmmm'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;status: &lt;/span&gt;&lt;span class="s1"&gt;'active'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;slack_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C0TLAE1MH'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;with&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;expected_post_args&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge!&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;channel: &lt;/span&gt;&lt;span class="s1"&gt;'C29J4QQ9W'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'sends the correct slack message to the correct channels for scrums'&lt;/span&gt;
    &lt;span class="n"&gt;xit&lt;/span&gt; &lt;span class="s1"&gt;'does not post youtube video link if yt_video_id is blank for scrums'&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not post youtube video link if yt_video_id is blank for pairing'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;yt_video_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'    '&lt;/span&gt;
      &lt;span class="n"&gt;slack_service&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;post_yt_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;hangout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;client&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="n"&gt;have_received&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:chat_postMessage&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For some reason I can&amp;rsquo;t seem to move away from spies on the yt_link posts, but everything is green and I&amp;rsquo;ve added pending tests for all the other paths we need to check and TODOs for the other improvements we need.  Hopefully a fresh look tomorrow will get this to the point we can try out on staging &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>The pilot+copilot organizational pattern</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/"/>
    <id>http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/</id>
    <published>2017-10-02T01:00:00+01:00</published>
    <updated>2017-10-04T21:52:30+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="pair flying" src="/images/pairflying.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;In 2002, I graduated a distance-learning masters in applied mathematics. Every month, the university mailed me an A4 enveloppe containing the course support. I was supposed to learn from the course material and returned the completed assignments within a month. A month later, I would receive an answer key.Â Should I have a question, I could mail it to the professor and wait for his reply. The whole process was cumbersome. I was often behind schedule. Interactivity was near to zero. &lt;/p&gt;

&lt;p&gt;Later on, I participated in the MOOC endeavour. The video of the instructor gave a feeling of a one-to-one training session. Discussion forums, deadlines, follow-up mails, peer-reviews grounded the learning process. There were meetups too. And a MOOC about Agile Development using Ruby On Rails offered remote pair-programming sessions between participants. &lt;/p&gt;

&lt;p&gt;Pair-programmming reuses the rather old organizational pattern of pilot+copilot : double-check, higher focusing, external view, and stronger engagement. You may object that programming is very different from flying. Yes, it is! &lt;/p&gt;

&lt;p&gt;But programming requires a strong level of accuracy too. Your pairing fellow is both a watch dog that tells you not to call a library without checking how it works, not to cut and paste code across your work, and an inspiration to experiment with new ways of coding. As some aerobatic aircrafts don&amp;rsquo;t include a copilot seat, some programs are implemented by lone wolves in the wild.&lt;/p&gt;

&lt;p&gt;Tools like teamviewer, logmein, skype, hangout or joinme have been instrumental to the success of remote pair working. There is still room for improvement:&lt;/p&gt;

&lt;p&gt;1) In a face-to-face meeting, there is a desk between the two interlocutors. Webcams should recreate this confortable spacing. I&amp;rsquo;m neither a barber nor a dental professional!
2) Remote working platforms lack of interoperability. Some only run on Windows, some require to install a software, others are more suitable for mobile use&amp;hellip; and don&amp;rsquo;t try to connect to hangout with skype
3) Security is a weak point for all of these platforms. Choosing which window you share, which you don&amp;rsquo;t, masking your passwords or your personal information are not intuitive. In my earlier days, I remembered displaying my passwords on a recorded session. Not so good a security practice!
4) Optimizing the screen definition so that everybody can watch comfortably is not supported either.&lt;/p&gt;

&lt;p&gt;Every desktop application from IDE to word processors will probably include some kind of remote pair working feature sooner or later. C9 already includes some simple pair-programming features, for instance.  &lt;/p&gt;

&lt;p&gt;Bugs in the code? Don&amp;rsquo;t blame me, it&amp;rsquo;s my pair programming partner who fooled around!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Late Start</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/02/av-ecosystem-review-late-start/"/>
    <id>http://blog.url.com/2017/10/02/av-ecosystem-review-late-start/</id>
    <published>2017-10-02T01:00:00+01:00</published>
    <updated>2017-12-04T21:14:35+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="late start" src="/images/late_start.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So Monday morning was slow and I got to the computer late, and immediately got distracted by listening to the end of the Tech Done Right podcast, which mentioned the closing of DevBootcamp and IronYard coding bootcamps.  Shake up in the industry.  I want my focus for this week to be sorting out my ruby-fication spike of the AgileBot, but now I&amp;rsquo;m low on time.  I decided to focus on the clear-up from last week where I was updating the Premium Mob and Premium F2F pages on staging.  I have no comments on my PRs or in Slack, so I&amp;rsquo;m going to assume no one has any issues here.  I update those pages via the Mercury editor in the live site and take a stab at merging the backup copies into the main repo, but there&amp;rsquo;s branch updating and merging to sort first &amp;hellip;, conflicts between my two branches.&lt;/p&gt;

&lt;p&gt;So while they&amp;rsquo;re building, can I make some super-quick progress on the agile-bot rubyfication to get the week started?  I update the branch there, pull up the set of changes.  I think the set of things we need is:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;new tests of the SlackService&lt;br&gt;&lt;/li&gt;
&lt;li&gt;checking all existing tests pass&lt;br&gt;&lt;/li&gt;
&lt;li&gt;extracting the channel config to depend on deployment instance&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In the meantime I used my admin privileges to force merge the Premium mob page backup PRs - they don&amp;rsquo;t affect the codebase so waiting for the semaphore build is silly.  That gives us a nice clean &amp;ldquo;Please Check&amp;rdquo; column on the waffle board:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/zpg8yqzayk08t8z/Screenshot%202017-10-02%2010.36.22.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;where we can also see my agile-bot spike in progress.  I really want to do another high level overview, but the AV Community meeting on Friday reinforced my notion that we have to clear up the bot messaging in Slack #general.  At the moment, all the pings about meeting starting with Google hangout hash ids in urls etc. looks really messy. &lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/5tbperpnc3nqsvu/Screenshot%202017-10-02%2010.42.54.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;A new member in the AV Community meeting was saying we should do our best to make everything as welcoming as possible.  What I really want is hyperlinks to the meetings where we say something like &amp;ldquo;Meeting starting soon, newcomers welcome :-)&amp;rdquo;  And this rubyfication of the agilebot could get that for us this week if I&amp;rsquo;m lucky.  The existing SlackService failing tests give me a good entry point for tomorrow AM if I can get to the computer earlier:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Failures:

  1&lt;span class="o"&gt;)&lt;/span&gt; SlackService.post_yt_link sends a post request to the agile-bot with the proper data
     Failure/Error: elsif hangout.type &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"PairProgramming"&lt;/span&gt;

     NoMethodError:
       undefined method &lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="s1"&gt;' for #&amp;lt;EventInstance:0x007f9a4d36c5b0&amp;gt;
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/activemodel-4.2.8/lib/active_model/attribute_methods.rb:433:in `method_missing'&lt;/span&gt;
     &lt;span class="c"&gt;# ./app/services/slack_service.rb:62:in `post_yt_link'&lt;/span&gt;
     &lt;span class="c"&gt;# ./spec/services/slack_service_spec.rb:52:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;

  2&lt;span class="o"&gt;)&lt;/span&gt; SlackService.post_hangout_notification does not fail when event has no associated project
     Failure/Error: CHANNELS[project.try&lt;span class="o"&gt;(&lt;/span&gt;:slug&lt;span class="o"&gt;)&lt;/span&gt;.to_sym]

     NoMethodError:
       undefined method &lt;span class="sb"&gt;`&lt;/span&gt;to_sym&lt;span class="s1"&gt;' for nil:NilClass
       Did you mean?  to_s
     # ./app/services/slack_service.rb:51:in `channel_for_project'&lt;/span&gt;
     &lt;span class="c"&gt;# ./app/services/slack_service.rb:13:in `post_hangout_notification'&lt;/span&gt;
     &lt;span class="c"&gt;# ./spec/services/slack_service_spec.rb:27:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;

  3&lt;span class="o"&gt;)&lt;/span&gt; SlackService.post_hangout_notification sends a post request to the agile-bot with the proper data
     Failure/Error: send_slack_message client, CHANNELS[:general], &lt;span class="s2"&gt;"#{hangout.title}: #{hangout.link}"&lt;/span&gt;, hangout.user

     NoMethodError:
       undefined method &lt;span class="sb"&gt;`&lt;/span&gt;link&lt;span class="s1"&gt;' for #&amp;lt;EventInstance:0x007f9a4d983458&amp;gt;
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/activemodel-4.2.8/lib/active_model/attribute_methods.rb:433:in `method_missing'&lt;/span&gt;
     &lt;span class="c"&gt;# ./app/services/slack_service.rb:25:in `post_hangout_notification'&lt;/span&gt;
     &lt;span class="c"&gt;# ./spec/services/slack_service_spec.rb:19:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;

Finished &lt;span class="k"&gt;in &lt;/span&gt;1 minute 3.18 seconds &lt;span class="o"&gt;(&lt;/span&gt;files took 12.25 seconds to load&lt;span class="o"&gt;)&lt;/span&gt;
899 examples, 3 failures, 1 pending
&lt;/code&gt;&lt;/pre&gt;
&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/ufWc1Gg3hQ4"&gt;AV Community Meeting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
