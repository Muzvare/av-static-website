<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-09-16T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>DriveBy Coding</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/16/driveby-coding/"/>
    <id>http://blog.url.com/2016/09/16/driveby-coding/</id>
    <published>2016-09-16T01:00:00+01:00</published>
    <updated>2016-09-16T18:51:40+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Had another day of trying to work quick and light. I&amp;rsquo;m thinking of calling it &amp;ldquo;drive-by coding&amp;rdquo;.  The idea is to try and avoid getting stuck for too long on any one thing.&lt;/p&gt;

&lt;p&gt;I managed to be good to my word of yesterday and get to work on some of the static site content issues that I had been putting off.  These were suggestions that had come out of feedback on the site from Charles and Freeranger.  Charles is a Sales specialist and we&amp;rsquo;d been working with him before the summer on the design of the static site.  We&amp;rsquo;d been having regular meetings with Charles and he was pushing for detailed documentation on what we would be offering to charities and non-profits in terms of hourly rates and detailed breakdowns of inception events and so forth. The attempts to pin us down on hourly rates up front, and then add his own hourly-rate to the inception packages made me feel &amp;hellip; strange.  It felt very &amp;ldquo;big design up-front&amp;rdquo; and not very Agile.  I felt like we needed to talk to individual non-profits about their needs; although part of it is that I wanted to focus on coding, and also that as more people signed up for our premium memberships we effectively had &amp;ldquo;customers&amp;rdquo; who we could talk to directly and try and evolve our service to make them happier and bring others on board.&lt;/p&gt;

&lt;p&gt;Of course as Michael has pointed out, if we could land a good sizeable charity project, then that would dwarf the amounts coming in from premium memberships.  The difficulty for me is that the approach Charles was taking seemed to involve lots and lots of paperwork up front - trying to make decisions with little data about the market.  Maybe that&amp;rsquo;s the way businesses should run?  Make a detailed business plan before talking to anybody outside, relying on your instinct to put the right kind of plan together.  Charles has lots of experience selling IT related things in the corporate world and some experience of the charity sector, so maybe I should be trusting his intuition, but my instinct told me to go with a softer incremental launch of the static site.&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;d told Charles we&amp;rsquo;d do that soft launch and get back to him.  We pushed out the site to our internal group on Slack, and got some immediate feedback.  In particular we got very detailed feedback from Freeranger in a set of five issues on Github (see issues 36 through 40 on &lt;a href="https://github.com/AgileVentures/av-static-website/issues"&gt;https://github.com/AgileVentures/av-static-website/issues&lt;/a&gt;), in which he wrote almost stream of consciousness as he explored the site.  Very valuable stuff, but also quite overwhelming.  I&amp;rsquo;ve talked about overloading before.  I think I do it to people a lot.  Freeranger and I have some things in common there :-)  Anyway, the concerns that Freeranger was raising were valid ones, but I was emotionally knocked back by the thought of what we needed to do.&lt;/p&gt;

&lt;p&gt;Well, that&amp;rsquo;s not entirely accurate.  We had made good progress before the summer on trying to address a number of the issues.  Probably the most complex was switching from the ghost blog as a separate site, to an integrated middleman-blog, which was a round about way of addressing a number of the navigation issues that Freeranger raised, and also reduced our need to maintain two separate copies of the CSS design.  Actually we created a summary ticket called &lt;a href="https://github.com/AgileVentures/av-static-website/issues/42"&gt;&amp;ldquo;Tweaking Ready for Release&amp;rdquo;&lt;/a&gt; that only had a single thing outstanding on it, adding some more links in the about section.  Trying to pin down my feelings here, I think the concerns raised by Freeranger had knocked my confidence in the site.  Michael and I had done a fair amount of work to get it to a point for a soft launch.  We&amp;rsquo;d set about fixing the issues, but we&amp;rsquo;d done the engineering work and finally there was just content work (more or less) which I was loathe to subject Michael too, so I&amp;rsquo;d been putting it off and other items in my administrative agenda kept seeming to trump it.&lt;/p&gt;

&lt;p&gt;So yesterday I forced it to the top of my morning agenda, at least partly inspired by enthusiasm from Marouen about getting some charity clients in, and I knocked off that immediate content work, and completed our tweaking for release ticket, yay!  I also went back through Freeranger&amp;rsquo;s issues again slowly and carefully.  A lot of the feedback was great UX feedback about buttons vs nav and the consistency of using the back-button etc.  I spent some time responding how I thought some of our changes had now addressed some of the issues, and created other tickets for those we hadn&amp;rsquo;t been able to quickly resolve (see issues 55 through 58 on &lt;a href="https://github.com/AgileVentures/av-static-website/issues"&gt;https://github.com/AgileVentures/av-static-website/issues&lt;/a&gt;.  I didn&amp;rsquo;t get to the thing that probably concerns me the most, which is improving the images associated with some of the projects in the case-studies section; and that will have to wait till next week now.  That&amp;rsquo;s more complex as it involves liasing with different project groups &amp;hellip;&lt;/p&gt;

&lt;p&gt;But so I made progress in the morning with &amp;ldquo;drive-by administration&amp;rdquo; and got down to some coding in the afternoon with Michael.  It didn&amp;rsquo;t feel like we made as much progress as the previous day, but in drive-by coding style we moved through the ProjectScope project where we spiked a time report that would help us assess if the heroku schedule was working as expected, and then on to WebSiteOne where, although I was getting all excited about a new event telemetry, creation flow, karma and premium promotion, I thought that if we were serious about keeping the Waffle board under control we really should address tickets in terms of their position in the board.&lt;/p&gt;

&lt;p&gt;In my experience a project board can become a kind of dumping ground unless you are ruthless with it.  At least it&amp;rsquo;s easy to leave a ticket hanging in the &amp;ldquo;in progress&amp;rdquo; column because it hasn&amp;rsquo;t quite been resolved, and/or you&amp;rsquo;re not sure what to do with it.  I&amp;rsquo;m starting to think that it&amp;rsquo;s more dangerous to leave it there, eating up some of everyone&amp;rsquo;s cognitive resources every time they review the board.  There&amp;rsquo;s nothing like some empty columns to give people the motivation to take on new stuff.  Of course this means the process for getting tickets into the right columns and in priority order in the first place has to be good, but that&amp;rsquo;s another story.  My new resolution is to close out old tickets with what we&amp;rsquo;ve learnt and then create new tickets based on more complex or uncertain stuff that arises.&lt;/p&gt;

&lt;p&gt;So Michael and I &amp;ldquo;drove by&amp;rdquo; the WebSiteOne board taking on tickets where we could in the in-progress column. We fixed up some outstanding work on the stripe credit card change sad path, and got the PR ready for review. We jumped on the &amp;ldquo;out of memory&amp;rdquo; issue and got in a quick PR that might help us explore (if not fix) the issue.  Drive on - we started on the issue that the site admin is not alerted when slack invites fail, since we were realising we wanted a similar alert system as an extension to the card change fail for stripe.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m liking the narrative that&amp;rsquo;s emerging about sticking to what&amp;rsquo;s organised on the board to help you work with the team, and keep the decks clear for when bigger issues arise.  Avoid things gathering dust.  And then also driving-by tickets, getting a little action, furiously making other tickets so that a sliver of work can be marked closed. Then longer more complex follow-ups can be evaluated on subsequent passes.&lt;/p&gt;

&lt;p&gt;Now I really must go sort Heroku who&amp;rsquo;s now charging us to high heaven for our group account.  There&amp;rsquo;s no point in us bringing in loads of new premium members if we can&amp;rsquo;t keep our server costs down.  Heroku might give us leniency as a charity, but I won&amp;rsquo;t hold my breath.  Mustn&amp;rsquo;t let this one slide &amp;hellip;&lt;/p&gt;

&lt;h2&gt;Videos associated with this blog:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Gx4mgVQuyzo"&gt;ProjectScope Video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=GDPrd9ixTAU"&gt;WebSiteOne Video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=E5bH5F-EaOc"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Feels like Progress</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/15/feels-like-progress/"/>
    <id>http://blog.url.com/2016/09/15/feels-like-progress/</id>
    <published>2016-09-15T01:00:00+01:00</published>
    <updated>2016-09-15T21:31:38+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Wednesday felt good this week.  Son cycling to high school by himself for a second day - those extra 40 minutes really coming in handy to catch up with administrative stuff.  The automation of the thunderbird mailing allowing me to send 20 emails a day and have some nice chats with the AgileVentures members who respond.  Even more pleasing was the afternoon&amp;rsquo;s programming.  Hadn&amp;rsquo;t got to the static site in the morning; although I had got two reasonable clips of good pairing activities to share with TAs and instructors.  So I suggested to Michael we should try and make some progress on some small niggles on the static site.  Part of me was, oh, we should be pushing on with AgileBot, but I also wanted to put that down to settle and clear up some presentation stuff that was bugging me.&lt;/p&gt;

&lt;p&gt;Blogging daily through the middleman-blog we have on &lt;a href="http://nonprofits.agileventures.org/"&gt;http://nonprofits.agileventures.org/&lt;/a&gt; means I was seeing things like the font-size of html lists &lt;a href="https://github.com/AgileVentures/av-static-website/issues/48"&gt;feeling too small&lt;/a&gt;. Fixed that in a few minutes, and was straight on to dealing with a &lt;a href="https://github.com/AgileVentures/av-static-website/issues/46"&gt;presentation issue&lt;/a&gt; identified by another AV member.  They&amp;rsquo;d also submitted a pull request which we reviewed.  It looked pretty good full size, but it seemed to break the mobile view.  Looking back perhaps we should have started debugging why it broke the mobile view, but it felt simpler and faster to just go with the initial suggestion of smaller font sizes from the original ticket, and kicking things around we ended up removing a couple of icons, and switching the text-align to centred.&lt;/p&gt;

&lt;p&gt;Michael was saying that we&amp;rsquo;d spent time getting those icons in there, and that we should switch text-alignments from mobile to desktop views, and I think he was right, but I didn&amp;rsquo;t want to spend a big chunk of time on that now.  I suggested we put a further refactoring ticket in and just deploy the fix we had, which was a basic improvement, not wonderfully elegant, but I wanted to move fast.  The narrative in my mind was let&amp;rsquo;s move fast; avoid getting bogged down in too much discussion (usually my fault) and if something turns out to be trickier than we anticipate we should do the simple thing and open a new ticket for any more complex work.&lt;/p&gt;

&lt;p&gt;Michael concurred and we switched drivers, and he fixed up the pagination for the blog posts.  The great thing about working with a static middleman site like this is that we can get fixes into production pretty much instantaneously.  In under an hour we&amp;rsquo;d fixed up three presentation issues with the static site, and I was already feeling more positive about pushing it out on social media.  There was still a little swathe of content related work that I feel should be fixed before we really start pushing it to non-profits - linking it into the main developer site and so on.  I resolved to work on that during my admin period today.&lt;/p&gt;

&lt;p&gt;Move fast, quick fix - push things off into other tickets.  What I really wanted to get to was this mobile presentation bug on the main developer site (AgileVentures WebsiteOne).  On the main site on desktop we have these floating call outs promoting different aspects of our mission:&lt;/p&gt;

&lt;p&gt;&lt;img alt="shout out on main site" src="https://www.dropbox.com/s/2e7z3nz6he927w9/Screenshot%202016-09-15%2008.56.23.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Which look pretty good to me.  Unfortunately on mobile they end up looking like this:&lt;/p&gt;

&lt;p&gt;&lt;img alt="shout out on mobile" src="https://www.dropbox.com/s/z5te1eewurcalcq/Screenshot%202016-09-15%2008.57.46.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Now I&amp;rsquo;m not sure if they always looked like that on mobile, or if that&amp;rsquo;s how they ended up after some change in the CSS.  That design was all put in place before I took on the project manager role, and to be honest I don&amp;rsquo;t spend that much time looking at web sites on mobile, but hey it&amp;rsquo;s the future, right? :-) We&amp;rsquo;ve got to look good on mobile.  Freeranger had helped us fix up some navigation problems on the mobile view a few months back, which was a great improvement, and it was then that I&amp;rsquo;d noticed the layout issue.  Just me perhaps, but the lack of space around the shout out just feels crowded; looks wrong.  Maybe there are loads of other issues with our mobile view that I&amp;rsquo;m missing &amp;hellip; reminds me we have an issue that you can&amp;rsquo;t click through on individual users on mobile, but anyway, what I wanted the shout outs to look like on mobile was this (more or less):&lt;/p&gt;

&lt;p&gt;&lt;img alt="shout on on mobile improved" src="https://www.dropbox.com/s/2jz1upu2fn34tpp/Screenshot%202016-09-15%2009.02.36.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;which turned out to be achievable with a pretty small change; specifically the addition on the &lt;code&gt;margin&lt;/code&gt; elements in the following:&lt;/p&gt;
&lt;pre class="highlight css"&gt;&lt;code&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.section-well&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;border-radius&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;10px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nl"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;@media&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;min-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;screen-sm-min&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="nc"&gt;.section-well&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nl"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;1em&lt;/span&gt; &lt;span class="m"&gt;2em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nl"&gt;margin&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="m"&gt;0em&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So, job done, another micro pull-request pushed up, and I was feeling pretty pleased.  This presentation issue had been bugging me for months; a constant drag on my level of enthusiasm for promoting the site.  Ironically I think casual viewers of the sites tend to be positive.  I guess it&amp;rsquo;s easy to be over-critical of the things we work on; although there&amp;rsquo;s the argument that the cumulative effect of many rough edges is its own drag on everything else you are trying to achieve.&lt;/p&gt;

&lt;p&gt;So then we switched gear and Marcelo joined us from SF to go through a LocalSupport pull-request.  He had less than an hour, so we didn&amp;rsquo;t really have time to get into pairing, but he and I had already async git ponged on a &lt;a href="https://github.com/AgileVentures/LocalSupport/pull/348"&gt;related refactoring&lt;/a&gt;, and then he had done the same with Marouen on an &lt;a href="https://github.com/AgileVentures/LocalSupport/pull/359"&gt;alternative approach using a 3rd party gem&lt;/a&gt;.  The full details are maybe worth another blog post on the evolution from hacky case statement fix, to our refactoring of that into something more maintainable, to the realisation that there was a gem that pretty much did what we needed.  In the session with Marcelo we reviewed all that, including the internals of the gem, and how the LocalSupport site used cookies and how the gem could be integrated with Cucumber stories.&lt;/p&gt;

&lt;p&gt;It was great to hook up with Marcelo, but he had to dash off to work, and so Michael and I finished up with some clean up related to the Stripe credit card change feature, with Michael popping in a sad path to give the user better information when card update fails, and I dealt with some legacy data migration.  The day finished up for me with the Kent Beck scrum where Michael and I reviewed our possible next steps, which include further work on making premium membership more visible in WebSiteOne, improving the flow of the event pairing mechanism and increasing the resolution of the pairing tracking telemetry so that we can give our users more Karma for the scrums and pairing sessions they are involved in.  Like I say, it was a day where it felt like we were making some progress :-)&lt;/p&gt;

&lt;p&gt;Pairing Videos related to this blog:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=lbcH6Gqr-I0"&gt;Pairing on Static Site&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=e84n_wBP7_c"&gt;LocalSupport PR review&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=nuyODPgitIk"&gt;Pairing on WebsiteOne&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=60EREsMw00o"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Production and Staging Similarity</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/14/production-staging-similarity/"/>
    <id>http://blog.url.com/2016/09/14/production-staging-similarity/</id>
    <published>2016-09-14T01:00:00+01:00</published>
    <updated>2016-09-14T21:18:16+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So Michael and I finished up an important piece of work on the AgileBot yesterday.  At least we completed something we had started working on a while ago, which was getting the AgileBot legacy code wrapped in tests, and refactoring the config out of the main script file.  It seems like a good heuristic to finish what you start, although of course there&amp;rsquo;s always the danger of throwing good money after bad, or rather time; since time is of course, money.  It&amp;rsquo;s definitely been an interesting process though, and it feels very good to get to this point where we can catch our breath.&lt;/p&gt;

&lt;p&gt;As I&amp;rsquo;ve mentioned before, AgileBot is a chunk of CoffeeScript that takes incoming requests to send notifications about hangouts from WebSiteOne (our Rails monolith for AgileVentures) and pass them on to Slack and Gitter.  AgileBot&amp;rsquo;s CoffeeScript runs in Hubot (which runs on Node) and is deployed on Heroku.  AgileBot was an experiment from a couple of years ago to see what could be achieved in CoffeeScript (a Ruby flavoured variant of JavaScript) and Hubot.  Hubot has a range of functions and is extendible to allow it to respond to users in chat rooms, which is certainly something I&amp;rsquo;ve been interested in in the past.  Chatbots tend to become annoying rather quickly though, and users will often fail to take them seriously, although we do read reports of some &lt;a href="https://www.washingtonpost.com/news/innovations/wp/2016/05/11/this-professor-stunned-his-students-when-he-revealed-the-secret-identity-of-his-teaching-assistant/"&gt;chatbots fooling students into thinking they are human&lt;/a&gt; in some online classes.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d love to be deploying really effective chatbot tech, but we&amp;rsquo;re a small community and I think we&amp;rsquo;re in the stage where value is being derived from authentic connections between humans, rather than automating 1000&amp;rsquo;s of responses.  We&amp;rsquo;ve totally not played with the range of functions that Hubot can support, and the AgileBot script is taking advantage of Hubot&amp;rsquo;s ability to act like an API endpoint to act as a waypoint between our Rails monolith and the 3rd party endpoints of Gitter and Slack.  We&amp;rsquo;ve been making little changes to the AgileBot script over the months, and the lack of tests was a little nerve-wracking.  After tweaking the Jasmine tests on HangoutConnection we thought, yeah, let&amp;rsquo;s get some tests wrapped around AgileBot.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve blogged about parts of that before, and my nagging concern is that we could have completely re-created this micro service as a gem in our Rails monolith, or as a separate Sinatra micro service, faster than we could get the tests working and fix the associated issues.  In the meantime, particularly valiant solo efforts from Michael have got us to the point where the code is wrapped in integration tests, the config is refactored, and yesterday we got the new AgileBot deployed in production.&lt;/p&gt;

&lt;p&gt;The big hurdle that came up at the end was that when we deployed the new code to the staging server we saw a thrashing in the logs.  The logs were dumping what looked like the entire list of our slack instance users in JSON format, and that&amp;rsquo;s so big we couldn&amp;rsquo;t see the actual error message.  It was this issue that we really took apart yesterday.  It was a tricky issue and while speculating about whether we&amp;rsquo;d been hacked, or the upgrade had changed some node modules out from under us, we made some progress by managing to replicate the error locally.  This took us copying the entire staging server config locally and running the hubot locally just as it would run on the Heroku server.  This allowed us to see some error specifics:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;node_redis: no callback to send error: OOM command not allowed when used memory &amp;gt; 'maxmemory'.
[Tue Sep 13 2016 14:50:21 GMT+0100 (BST)] ERROR Error: OOM command not allowed when used memory &amp;gt; 'maxmemory'.
  at ReplyParser.&amp;lt;anonymous&amp;gt; (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/hubot-scripts/node_modules/redis/index.js:279:27)
  at emitOne (events.js:77:13)
  at ReplyParser.emit (events.js:169:7)
  at ReplyParser.send_error (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/hubot-scripts/node_modules/redis/lib/parser/javascript.js:296:10)
  at ReplyParser.execute (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/hubot-scripts/node_modules/redis/lib/parser/javascript.js:181:22)
  at RedisClient.on_data (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/hubot-scripts/node_modules/redis/index.js:504:27)
  at Socket.&amp;lt;anonymous&amp;gt; (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/hubot-scripts/node_modules/redis/index.js:82:14)
  at emitOne (events.js:77:13)
  at Socket.emit (events.js:169:7)
  at readableAddChunk (_stream_readable.js:146:16)
  at Socket.Readable.push (_stream_readable.js:110:10)
  at TCP.onread (net.js:523:20)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So it seemed like we might be having a problem with Redis, the key-value cache that Hubot uses as a memory.  We&amp;rsquo;d copied over the Redis URL in the server config, so our local Hubot was also hitting the same Redis cache as the staging server.  We cycled through various loops of trying to clear out that Redis cache, but to no avail.  Our AgileBot script doesn&amp;rsquo;t use Redis at all.  It&amp;rsquo;s just part of booting up Hubot, which also has its own Slack connections and code.  That we&amp;rsquo;re spending time debugging something that&amp;rsquo;s not really related to our microservice logic is fuel for my thoughts that we would move faster building an express or Sinatra app, but maybe getting distracted by those thoughts are counter-productive &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyhow we couldn&amp;rsquo;t seem to empty the Redis cache.  Even with resets and flushes and shutting everything down it still seemed to be filling up. We also tried deploying the master branch of the production code to staging and got the same thrashing issue.  This was an important step - we&amp;rsquo;d isolated the problem as not being related to any of the new code changes we&amp;rsquo;d introduced.  That&amp;rsquo;s such a crucial step when debugging.  All our speculations about how all sorts of updates might be influencing this thrashing issue could be thrown out, and we could focus on the problem being either the Redis cache, or some unknown upgrade of a node module.  It&amp;rsquo;s fascinating to me that npm doesn&amp;rsquo;t create a lock of the particular versions that get installed.  When we use bundle in the Ruby world we get a Gemfile.lock, and if you check that in the versions of libraries that you&amp;rsquo;re using can&amp;rsquo;t change.  Unless I&amp;rsquo;m missing something npm seems much more permissive.  At least if you don&amp;rsquo;t check in the node_modules directory itself then any time you do a fresh install (say on Heroku) then you&amp;rsquo;re doing the equivalent of Ruby&amp;rsquo;s &lt;code&gt;bundle update&lt;/code&gt;.  Maybe the Heroku build pack for node mitigates that somehow, but it feels like the node/npm keeps you more on the bleeding edge of your libraries?  That&amp;rsquo;s both exhilarating and frightening! :-)&lt;/p&gt;

&lt;p&gt;The fix for our thrashing problem came when Michael noticed that we had different Redis plugins on the production and staging instances of AgileBot.  HerokuRedis on production and RedisToGo on staging.  We uninstalled RedisToGo and installed HerokuRedis on staging.  The bug was gone locally, and gone from staging too.   A great reminder of how you really really really want staging to be as much like production as possible.  We were now able to proceed with doing manual acceptance tests of staging to check that hits from WebSiteOne would cause AgileBot to ping our Slack instance (but in suitable test channels), and that wasn&amp;rsquo;t working.  We spent some time trying to get live debugging working in the context of Hubot, which was partially successful.  Michael wrote a debug Hubot script, and we got node-inspector running, and finally got the chrome inspector hooked on the debugger, but there was a time out and we lost the connection.  I&amp;rsquo;ve seen that with Rails running on Puma - the web server timeouts killing the debugger.&lt;/p&gt;

&lt;p&gt;We gave up on that - worked out how to post to the Hubot logs, and then saw that the problem was that our slack token wasn&amp;rsquo;t set correctly.  Fixin that our manual acceptance tests worked.  We deployed to production just in time for a live test running the &amp;ldquo;Kent Beck&amp;rdquo; scrum - everything worked fine, and over night I can see the PacificRim scrum notified fine, and the days pair notifications came through fine too.&lt;/p&gt;

&lt;p&gt;In the Kent Beck scrum Michael and I took stock, comparing the hours spent on getting the bots&amp;rsquo; legacy code wrapped in tests and deployed.  Michael thinks we spent less time getting to this point than we would trying to rebuild.  He might be right, but I think there&amp;rsquo;s a range of rebuilding options including just switching to JavaScript, moving to express, or moving to Sinatra, with each having different pros/cons and likely times to completion.  Undeniably we are much more familiar with the Node/Hubot/CoffeeScript tech stack now, and that information is valuable.  Having got this far it would be silly not to now make a few more refactoring to AgileBot to deliver some noticeable improvements to our users, and see how our regression suite helps us make those changes; that much is clear.&lt;/p&gt;

&lt;p&gt;The itch I still want to scratch though is how fast I could make an express or Sinatra micro service to do the same thing.  Am I delusional that I think I could do the Sinatra one in a couple of days and the express one in half a day?  I won&amp;rsquo;t drag Michael on that whale hunt :-) I think that&amp;rsquo;s just something I need to waste my own spare time on to help in my internal estimation process.  I also worry that my constant questioning of the architecture of the system is kind of draining for people.  I want to work on the things that will deliver the most value to our users, and in turn generate revenue for AgileVentures that makes the whole charity enterprise sustainable.  I have so many thoughts, so many possibilities, but it really isn&amp;rsquo;t clear to me where to focus.  Would it be easier for everyone if I just pretended that I was certain that a particular approach was the best? :-) Maybe that debate is just something that I should be having internally without dumping it on other people through blogs, scrums and pairing sessions?&lt;/p&gt;

&lt;p&gt;I just love that feeling when you can jump up a level and say, right, we don&amp;rsquo;t need to build X, we can achieve our goal by building Y.  I love jumping those levels.  I guess many others like to stay focused on one level, at least for longer than I do.  If one thing is certain it is that I think too much :-) More doing, less thinking/debating perhaps? :-) Still, the whole reason I enjoy working with AV is thinking about the architectural/team/structural decisions and how they can make us more efficient and sustainable.  I&amp;rsquo;ll save the other thoughts I have on that for another micro-services blog.  In the meantime I think we can reflect that pithy sayings and heuristics can often be contradictory, but the take home today is: make sure your production and staging environments are as similar as they can possibly be!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Eye on the Ball</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/13/eye-on-the-ball/"/>
    <id>http://blog.url.com/2016/09/13/eye-on-the-ball/</id>
    <published>2016-09-13T01:00:00+01:00</published>
    <updated>2016-09-14T13:41:56+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;My last few days have been taken up a lot with transferring data between iPhones.  This has been precipitated by the gradually faltering abilities of my 2 year old iPhone 5S:  Trickle charge not working, normal charging intermittent except with specific cables.  Also, my eldest son is starting cycling to a high school that&amp;rsquo;s some distance away.  He wants a phone to stay in touch with his circle of friends, some of whom are starting at other schools even further away.  My wife and I have been &amp;ldquo;technologically conservative&amp;rdquo;.  We&amp;rsquo;ve held off getting a phone for him, while his peer group now all seems to have one and use texting and whatsapp to arrange get togethers etc.  &lt;/p&gt;

&lt;p&gt;So the social pressure has mounted to get him a phone.  The last 10 days I&amp;rsquo;ve been cycling with him to school to check his road safety, and that&amp;rsquo;s great exercise and it&amp;rsquo;s nice to spend the time with him, but it&amp;rsquo;s taking a good 40 minutes plus out of my work day, which is difficult given I&amp;rsquo;m trying to get the new AgileVentures charity enterprise off the ground (burning my savings to do so), and also my increasing commitments to the under eights football team, which has had an explosion of players this season.  Anyhow, so I bought an iPhone SE directly from Apple because I&amp;rsquo;m not interested in a larger phone.  What I should have done was do the immediate sync of data, but as I do recently when I upgrade laptops, I was tempted not to in order to switch items over one at a time.  Have a clear out so to speak.&lt;/p&gt;

&lt;p&gt;That approach has worked very well for me on laptops.  Going through the re-install process for all the software and projects is a sharp reminder of the install process for people trying to onboard onto our AgileVentures open source projects.  However it turned out to be a bad choice for a quick move to the new phone, or at least, a bad choice when I was trying to quickly decommission the old phone so that my son could use it, take it with him on the commute to school and calm my &amp;ldquo;he&amp;rsquo;ll be knocked off his bike and not be able to phone for help!&amp;rdquo; paranoia sufficiently so I can reclaim the missing 40 minutes of my day that I need to get back on top of the current work avalanche.&lt;/p&gt;

&lt;p&gt;What&amp;rsquo;s rather frustrating is the time I invested in the independent move of data - re-entering all my email data, migrating whatsapp messages through iCloud etc., but the real sticking point was the 1Password app.  I got that on iPhone a couple of years ago. It works really well; allows me to manage complex passwords for things that really should be secure like Stripe on the phone.  However since I got 1password on my iPhone they&amp;rsquo;ve pivoted their approach so that now there are family and business accounts; new approaches to sharing.  I&amp;rsquo;ve also been using LastPass, but they charge for their mobile support, so I was finding myself in a sticky situation.  I&amp;rsquo;d burned a lot of time with a gradual transfer that kind of relied on me having my old phone around as backup.  However I needed to give up the old phone to my son, and although he&amp;rsquo;s pretty responsible, there&amp;rsquo;s a chance he might lose it, and so I really need to wipe all the old data off that phone before giving it to him.&lt;/p&gt;

&lt;p&gt;Lots of time was burnt on that last night that I would have preferred to spend on practising the guitar or working on next Saturday&amp;rsquo;s football training session for the under-eights.  It&amp;rsquo;s all quite stressful, not least because of the memories it brings up of my own high-school days, and this transition involving my eldest son taking/getting more and more independence! :-)  Judgement call on judgement call!  I went for doing the sync after all, throwing out the time I had spent on the step by step, and despite knowing that maybe there would be problems with doing the sync itself.  My old phone was still on iOS7 (I&amp;rsquo;d got conservative. As an iOS dev I knew you couldn&amp;rsquo;t downgrade once you upgrade), the new one is on iOS10, but thank goodness it worked out.  All the old apps including 1Password now work on the new phone; although I didn&amp;rsquo;t really have the heart to do a full test of all the Japanese banking apps yet &amp;hellip;  &lt;/p&gt;

&lt;p&gt;And the other thing is this new &amp;ldquo;Find Friends&amp;rdquo; app - I upgraded what is now my son&amp;rsquo;s phone to iOS10 and it seems I can now track where he is.  So he cycled to high school by himself for the first time this morning and I was able to follow his progress.  He texted me to say he had got to school, and I could see he was there.  Big brother or what!  This really does feel like science fiction, although clearly it&amp;rsquo;s been totally possible for the last 10 years or so; that it was such a relatively simple set up on iOS10 gives me pause for thought.&lt;/p&gt;

&lt;p&gt;Okay, so now I&amp;rsquo;m poised to reclaim that 40 minutes, and get on top of the meaty topics of the week.  Yesterday Michael and I added some tests to, and merged in, a PR on ProjectScope that allows us to update all the metrics using a rake task.  I popped that in a Heroku scheduler so that they&amp;rsquo;ll be daily updates of project metrics.  Clearly key for the Berkeley teaching assistants who are each going to be trying to monitor 8 or so different project teams this semester.  With some misgivings I started using Waffle to organise our workflow, but I think we identified the critical path.  The key thing was a new instance for the Berkeley TAs to use.  The client (Armando) wanted every end point secure, which we&amp;rsquo;ll try to get on today, but I wanted to check that deploy process and the scheduler first - that&amp;rsquo;s critical (Make one change at a time).  We&amp;rsquo;re finding the encrypted application.yml file a bit of a handful - probably more on that tomorrow, but the big thing was that we saw that we now couldn&amp;rsquo;t have a free-tier Heroku instance in our AgileVentures team on Heroku, and more catastrophically they&amp;rsquo;d upgraded our legacy apps to paying tiers.&lt;/p&gt;

&lt;p&gt;Careful review showed that a cluster of apps that were all redundant had each been accumulating charges of $7 a month for the last three months or so.  Not good for a struggling charity startup.  Michael started shutting down the apps, and I contacted Heroku customer support to ask for a refund.  We&amp;rsquo;ll see how that goes &amp;hellip; frustrating stuff.  I totally understand Heroku changing their plan there.  We were using the team feature of Heroku for free for a long while since we took it up as an early beta.   I&amp;rsquo;m &amp;ldquo;happy&amp;rdquo; to pay for our key apps to run on the team, but this all feels like a stab out of the blue.  Did I miss an email alerting me about this?  Have I not been keeping my eye on the ball?  Investigation required, but it seems like the key is keep focusing on doing things that will free up time like ensuring the transition of old phone to son; printing and laminating a FAQ for the under eights football team so I can hand them out to parents to avoid spending time trying to explain things to them while running a practise session; and ruthlessly eliminating, simplifying, automating or delegating anything and everything I spend my time doing during the working day.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>People Are Strange, I Mean Me</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/12/people-are-strange-i-mean-me/"/>
    <id>http://blog.url.com/2016/09/12/people-are-strange-i-mean-me/</id>
    <published>2016-09-12T01:00:00+01:00</published>
    <updated>2016-09-14T13:41:56+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Okay, so I feel like a bit of a social klutz.  Often there are ideas that seem really important and well-formed in my head, and then I say them and it comes out as a mess.  Also, I think I&amp;rsquo;m not so good about reading the mood-music of the social group around me.  I mean, I get by &amp;hellip;  One to one conversations I think I don&amp;rsquo;t do too badly at.  Case in point regarding bigger groups, this Sunday I was at a football match for my 11 year old.  I know the coach and assistant coach well, and before I started coaching the team for the seven year olds (which my younger twins are in), I was sort of an assistant-assistant coach.  I would referee the matches, help out.  I&amp;rsquo;ve been quite involved.  The coach asked me to video the match on the Sunday, which I did.  So there was the half time team talk and the post-match team talk.  At the end of the half-time team talk I asked to add something about strategy.  What was so clear in my head didn&amp;rsquo;t come out so clearly.  No big deal, but then in the final team talk after the coach had finished reviewing the match with the boys, he asked if the assistant coach or I had anything to say.  The assistant coach made a few points, and I was preparing a simple point in my mind, however when the assistant coach finished the coach said something to the effect of &amp;ldquo;Right, great work everyone, round of applause for the boys&amp;rdquo;, basically a finish up thing.&lt;/p&gt;

&lt;p&gt;What I should have done looking back at it was think like &amp;ldquo;it&amp;rsquo;s hot, people want to get on, the coach is wrapping up and my point&amp;rsquo;s not that important, and just left it&amp;rdquo;, but like so often I don&amp;rsquo;t seem to be able to let these things go.  So I kind of talked over the end of the applause to make a point about communication amongst the team; which is of course doubly ironic, because while I was making the point about the need for effective communication amongst the team players, I was failing to read the communicative situation I was in, where I think it would be much better to have gone with the flow, i.e. to just say nothing.  I felt stupid after, but of course that&amp;rsquo;s no big deal.  I&amp;rsquo;m probably the only one who will remember, and the worst that will be is that a few parents/coaches/players might be affected subtly in a negative direction towards me, although I think I&amp;rsquo;ve been making these communication mistakes all my life, so it&amp;rsquo;s probably more a case of &amp;ldquo;That&amp;rsquo;s just Sam&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Maybe I&amp;rsquo;m being too hard on myself, but I do feel a big turnaround in my thoughts recently.  I always thought it was of paramount importance to speak the truth and communicate your thoughts, and that was what made me a good communicator.  What I&amp;rsquo;ve realised recently is that often what we think is the &amp;ldquo;truth&amp;rdquo; at one moment is really just a &amp;ldquo;perspective&amp;rdquo; and quite often the value gained from communicating it can be undone by a poor choice of timing.  I&amp;rsquo;m starting to see how important it is to be reading the mood of the others and adjusting one&amp;rsquo;s verbal output as a function of that.  I&amp;rsquo;ve blogged before about the concepts of &amp;ldquo;overloading&amp;rdquo; and &amp;ldquo;blocking&amp;rdquo;.  Overloading is what I commonly do when I give people too much information and under-estimate their level of discomfort.  Blocking is something else that I can easily slip into when someone says something that doesn&amp;rsquo;t match my mental model of reality.  Rather than focusing on connecting with what the other person is feeling, or what they are trying to communicate, I go into academic debate mode trying to compare their statements logically with my model of reality.&lt;/p&gt;

&lt;p&gt;Of course, it all depends.  I guess I need to add &amp;ldquo;timing&amp;rdquo; to the list of &amp;ldquo;blocking&amp;rdquo; and &amp;ldquo;overloading&amp;rdquo;.  Sometimes a block might be appropriate - it&amp;rsquo;s all about relative costs, and how certain you feel about things at the time; but to summarise, I think I tend to block people at the wrong times, I tend to overload them at the wrong times, and hey, I&amp;rsquo;m working on it. :-) This being human thing didn&amp;rsquo;t come with a manual.  I was mercilessly bullied in school and cocooned myself in television programs and computer games from age 13 to 17.  I&amp;rsquo;m still working through that.  It&amp;rsquo;s no excuse for being a irritating person, but I&amp;rsquo;m working on trying to make myself a more pleasant person to interact with. &lt;/p&gt;

&lt;p&gt;The funny thing is that I then also baulk at saying some things that I think are really important because I&amp;rsquo;m worried about upsetting someone, or that they&amp;rsquo;ll respond angrily.   The ironic thing is that I think I often upset people saying things that I hadn&amp;rsquo;t particularly thought through, or that it just hadn&amp;rsquo;t occurred to me would be controversial.  Conversely, when I think something might be inflammatory I beat around the bush, have trouble getting to it, and go into waffle mode.  That&amp;rsquo;s something else I&amp;rsquo;m working on.  I am finding the Non-Violent Communication (NVC) model quite helpful in that regard, which goes something like this:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Tell the person an observation e.g. &amp;ldquo;I notice you seem to be raising your voice&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Tell the person your feeling e.g. &amp;ldquo;That makes me feel scared&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Tell them your need e.g. &amp;ldquo;I need to feel safe in my work environment&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Make a request e.g. &amp;ldquo;I was hoping the you might be able to talk to me a little more quietly&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Continue the conversation from there, perhaps coming to a compromise, and listening out for needs and feelings that the other person is expressing, reflecting that back to them where appropriate.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Whether it&amp;rsquo;s genetic or the way I grew up, but it seems I&amp;rsquo;m not sensitive enough to social cues from others, and too sensitive to internal fears, maybe?  It&amp;rsquo;s a complicated tuning process.  If I do actually manage to turn up my social sensitivity too much I would probably revert to the state of my 16 year old self, where I was a total wall-flower and would never speak in front of a group.  Famously, the prize winning physicist Richard Feynman published a book called &amp;ldquo;What Do You Care What Other People Think?&amp;rdquo;, which I read when I was 17.  At 17 I seemed to lose all inhibitions and became somewhat of an exhibitionist, being totally happy to speak in front of groups, the bigger the better.  I got involved in amateur dramatics and was happily oblivious to the many people who probably thought I was a total idiot.  What do I care what other people think?  Well ultimately I don&amp;rsquo;t, really, but I don&amp;rsquo;t want to irritate them unnecessarily.  I&amp;rsquo;d also like to collaborate with them on cool projects, and I&amp;rsquo;d really prefer not to upset them.&lt;/p&gt;

&lt;p&gt;While there&amp;rsquo;s plenty for me to improve, I don&amp;rsquo;t think it&amp;rsquo;s entirely about me.  The other thing I notice is that most people seem pretty reluctant to share how they feel.  Maybe perfectly sensibly people will not say &amp;ldquo;you&amp;rsquo;re irritating me&amp;rdquo; or &amp;ldquo;stop that&amp;rdquo;.  They&amp;rsquo;ll just let you carry on and then avoid you in the future.  This is not to criticise others, per se.  I mean it&amp;rsquo;s not that everyone has a responsibility to be able to pinpoint why they are irritated with something you&amp;rsquo;ve done and provide feedback in a format you can digest; particularly if you&amp;rsquo;re someone who will react by contesting their point.  People are trying to live their lives, fight their own battles, improve themselves.  Everyone&amp;rsquo;s on their own journey, and while we always have great insight into our own pain and struggle, we really don&amp;rsquo;t know what it&amp;rsquo;s like for others.  Why should they make any exceptions for our poor behaviour?&lt;/p&gt;

&lt;p&gt;Anyhow, I can&amp;rsquo;t control other people&amp;rsquo;s reactions to me.  I have trouble enough controlling my own behaviour, or at least trouble breaking the habits of a lifetime.  So the real responsibility has to lie with me to get my sensitivity to social cues set correctly.  Of course the other problem I have is with putting too much pressure on myself to get things right.  Trying too hard to adjust myself may well be counter-productive. :-) Anyway, let&amp;rsquo;s wrap this self-diagnosis up with a little more on what I was planning to write about, which is the strangeness of people.  I think it&amp;rsquo;s this thing where people tend to not say what they are thinking and just not show up. I can illustrate with a story from when I was 13 and had just started high school.  I and some others were learning the trumpet.  The vivacious music teacher was very keen for us to be in the school orchestra.  &lt;/p&gt;

&lt;p&gt;I think that we had no interest in being in the school orchestra.  It meant additional practise and playing in a big group. That wasn&amp;rsquo;t our idea of fun.  I remember getting grief from the music teacher because I told her straight that I didn&amp;rsquo;t want to be in the orchestra.  My &amp;ldquo;friends&amp;rdquo; at the time didn&amp;rsquo;t confront the music teacher. They just didn&amp;rsquo;t show up for orchestra practise.  I always remember that I thought that was back to front.  I was being honest and straightforward, while others were just ducking out and got a much easier ride as a result. However maybe they were smarter than me; sensibly avoiding confrontation.  I see this all over the place; people preferring to just not show up, or not do, with no explanation, rather than providing an honest assertion that they don&amp;rsquo;t want to do something, or that they can&amp;rsquo;t make it.  Maybe this is just some part of the missing &amp;ldquo;how to be human manual&amp;rdquo; that my peers were discovering by interacting with each other between the ages of 13 and 17 when I was wrapped up in 8 bit computer games, game shows, sitcoms and TV dramas.  Who knows? :-) It&amp;rsquo;s complicated, this life stuff.  I do like the NVC framework though - I really think that has helped me address some tough issues when I&amp;rsquo;ve realised that something is highly contentious; or at least I&amp;rsquo;m nervous about saying it.  I&amp;rsquo;ll just keep working on my framework for being an effective social human being.  Three things in the list now:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Timing&lt;/li&gt;
&lt;li&gt;Blocking&lt;/li&gt;
&lt;li&gt;Overloading&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;ll keep tinkering with it till I get something that works. :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Patience</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/09/patience/"/>
    <id>http://blog.url.com/2016/09/09/patience/</id>
    <published>2016-09-09T01:00:00+01:00</published>
    <updated>2016-09-14T13:41:56+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Following on from yesterday&amp;rsquo;s &lt;a href="http://nonprofits.agileventures.org/2016/09/08/where-to-change/"&gt;post&lt;/a&gt; on working with the node stack in AgileBot, Michael had overnight addressed two of my concerns.  He&amp;rsquo;d upgraded from jasmine-node to jasmine-npm, which was allowing our tests to fail in the correct way, i.e. not with catastrophic failures involving no output whatsoever; and he&amp;rsquo;d got the source maps working so that the stack traces were giving us the correct line numbers in the CoffeeScript source files, which involved creating the following line in spec/helpers/helper.js:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'coffee-script/register'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It also required adding this jasmine.json file in spec/support:&lt;/p&gt;
&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"spec_dir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"spec"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"spec_files"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"**/*[sS]pec.coffee"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"helpers"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"helpers/**/*.js"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"stopSpecOnExpectationFailure"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="nt"&gt;"random"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So two of my four concerns from the &lt;a href="http://nonprofits.agileventures.org/2016/09/08/where-to-change/"&gt;previous blog post&lt;/a&gt; were addressed.  Great work Michael!  After Michael took me through all the changes, we could have easily dived into further refactoring, but I tried to step back and take some notes on our options.  Here&amp;rsquo;s what I wrote down at the time:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;* refactoring the test harness
  - split into separate files
  - pull output logic from mock into test to hard code ??
  - could look at test coverage to discover untested paths OR work them out
  - sepia for recording and playback

VCR --&amp;gt; Sepia --&amp;gt; Yakbak https://github.com/flickr/yakbak
Web mock --&amp;gt; Nock

Sinon vs TestDouble
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A little googling showed there was a more recent (than Sepia) node VCR-like node module called yakbak, but since we had nock working I said let&amp;rsquo;s leave that.  Michael also mentioned harmonising the production and staging environments, since at the moment the staging server was hacked to post Slack alerts to a different channel, in order to run manual end-to-end without spamming the community. So simply merging the work we were doing would break the production instance.  All this work on creating a testing harness had been motivated by our desire to push the hard coded channel mappings into some sort of config package, i.e. to be able to do that refactoring in safety.  So in a fit of &amp;ldquo;what is this all for&amp;rdquo; I just started googling different node config approaches (after noting that process.env.NODE&lt;em&gt;ENV allowed us to get something similar to RACK&lt;/em&gt;ENV in terms of specifying &amp;lsquo;prodcution&amp;rsquo;, &amp;#39;development&amp;rsquo; or &amp;#39;test&amp;rsquo;).  I found a few config options:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;dotenv&lt;/li&gt;
&lt;li&gt;nconf&lt;/li&gt;
&lt;li&gt;node-config&lt;/li&gt;
&lt;li&gt;roll our own&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;node-config looked slightly more active so we slapped that in, but I was half way through setting it up and baulked at converting our existing CoffeeScript into JSON.  We threw it out and hand-rolled the following:&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;CHANNELS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;GITTER_ROOMS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;'./../config/'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;LIVE_ENV&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s"&gt;'.coffee'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We used our own LIVE_ENV var because actually what we wanted was a switch to move from one endpoint to another, and with this switch we now load &lt;code&gt;config/production.coffee&lt;/code&gt; vs &lt;code&gt;config/staging.coffee&lt;/code&gt; depending on whether we want to hit the main slack instance or not.  We got this working in fairly short order, and so we were tempted to try and knock off a couple of quick refactorings.  Splitting the tests over two files, and pulling a little hard coded logic out of the mock and into the tests themselves.&lt;/p&gt;

&lt;p&gt;Here we hit another wall.   Just splitting the tests over two files introduced a very strange problem:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/GitHub/AgileVentures/agile-bot (27_refactor_test_harness)]$ 
→ npm test

&amp;gt; agile-bot@1.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/agile-bot
&amp;gt; jasmine ENABLE_ROLLBAR=false GITTER_API_TOKEN=101010

Started
......._http_client.js:55
    throw new Error('Protocol "' + protocol + '" not supported. ' +
    ^

Error: Protocol "http:" not supported. Expected "https:"
  at new ClientRequest (_http_client.js:55:11)
  at RequestOverrider.end (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/nock/lib/request_overrider.js:251:24)
  at OverriddenClientRequest.RequestOverrider.req.end (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/nock/lib/request_overrider.js:159:7)
  at Request.end (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/request/request.js:1397:14)
  at end (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/request/request.js:554:16)
  at Immediate.&amp;lt;anonymous&amp;gt; (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/request/request.js:581:7)
  at runCallback (timers.js:574:20)
  at tryOnImmediate (timers.js:554:5)
  at processImmediate [as _immediateCallback] (timers.js:533:5)

npm ERR! Test failed.  See above for more details.

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Running all the tests in a single file did not lead to this issue.  Googling the error provided little help, and we were hunting for the source of the issue by commenting out different sections of the code; back to C debugging style.  Again it&amp;rsquo;s entirely possible that our model of the system was just not sufficiently evolved to make sense of this.  None of our mocks or requests had any &amp;ldquo;http&amp;rdquo; requests, it was all &amp;ldquo;https&amp;rdquo;, so the error above didn&amp;rsquo;t make much sense, and the stack trace didn&amp;rsquo;t relate to any of our code.  I was suspecting it was a timing issue, and throwing up my hands in frustration, I was like, let&amp;rsquo;s just get this out with the tests in a single file.  I want to get some noticeable improvement into production.  We had at least got the variable config working.&lt;/p&gt;

&lt;p&gt;Michael and I decided to split.  He was keen to hunt this bug down, I was anxious to deploy something.  We talked about the tension between wanting to learn a new stack and wanting to deliver features to clients.  We did a &amp;ldquo;side by side&amp;rdquo; session for a while, where Michael hunted on that bug, and I tried to deploy where we were up to staging.  I think we just ended up distracting each other. I got caught in another silly bug where I failed to read the stack trace properly:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/GitHub/AgileVentures/agile-bot (staging)]$ 
→ npm test

&amp;gt; agile-bot@1.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/agile-bot
&amp;gt; jasmine ENABLE_ROLLBAR=false GITTER_API_TOKEN=101010

Started
.......undefined:1
undefined
^

SyntaxError: Unexpected token u in JSON at position 0
  at Object.parse (native)
  at Request._callback (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/scripts/av-hangouts-notifications.coffee:33:22)
  at self.callback (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/request/request.js:187:22)
  at emitOne (events.js:96:13)
  at Request.emit (events.js:188:7)
  at Request.onRequestError (/Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/request/request.js:813:8)
  at emitOne (events.js:96:13)
  at OverriddenClientRequest.emit (events.js:188:7)
  at /Users/tansaku/Documents/GitHub/AgileVentures/agile-bot/node_modules/nock/lib/request_overrider.js:206:11
  at _combinedTickCallback (internal/process/next_tick.js:67:7)
  at process._tickCallback (internal/process/next_tick.js:98:9)

npm ERR! Test failed.  See above for more details.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I was trying to follow up by making all the channel IDs in the staging config point to testing channels and changing one of them generated the above error.  In my frustration I totally missed the fact that this JSON error was not related to the config file per se.  Remember that we rolled our own config and we were pulling in coffee files, not JSON.  I spun my wheels for 20 minutes thinking I had some bad character in the config file, before realising that the tests were hard coded to the particular Gitter channel ID I was trying to change in config.&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;d calmly read the stack trace I&amp;rsquo;d have seen the failure was actually at a different point in our code i.e. &lt;code&gt;av-hangouts-notifications.coffee:33&lt;/code&gt; which is the last line in the following:&lt;/p&gt;
&lt;pre class="highlight coffeescript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;send_gitter_message_avoid_repeats&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class="nx"&gt;request&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;get&lt;/span&gt; &lt;span class="s"&gt;"https://api.gitter.im/v1/rooms/&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="nx"&gt;GITTER_ROOMS&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;'saasbook/AV102'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;/chatMessages"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="na"&gt;auth&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
        &lt;span class="na"&gt;bearer&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;process&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;env&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;GITTER_API_TOKEN&lt;/span&gt;
    &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span class="nx"&gt;payload&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;JSON&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;parse&lt;/span&gt; &lt;span class="nx"&gt;body&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think what was happening was that changing the config meant that our test was stubbing the wrong end point and so our test was really trying to hit Gitter and getting back some data it couldn&amp;rsquo;t parse.  Looking at the line in question we can see it is about parsing JSON so the unexpected token makes some sense.  Easy mistake, but my frustration at an unfamiliar stack and my worries about delivering visible changes to the community were not helping me make progress.  I&amp;rsquo;d got used to ignoring the stack traces earlier since they had not been something we could follow.  A great back to basics lesson for me.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also an important question about how we&amp;rsquo;re working.  Would Michael and I have made faster progress if we&amp;rsquo;d engaged on both problems together and one of us had given ground about which to work on first?  Over night Michael&amp;rsquo;s made progress on the multi-file issue and also on getting more sophisticated debugging to work which sounds like a wonderful step forward.  Michael has more coding time available to him.  I have lots of administrative and family commitments.  We need to keep working on the best approach to making progress.  I feel we have a good dialogue about our work modes.  Let&amp;rsquo;s see how we can improve next week.  I&amp;rsquo;m definitely inspired my Michael&amp;rsquo;s tenacity to want to get to the point where we can work efficiently in the node tech stack.  We&amp;rsquo;ve made a lot of progress.  Although even with a small legacy app I feel like we are balancing on a lot of brittleness.  Could we write something cleaner in the latest version of express?  Will I break down and create something in Sinatra?&lt;/p&gt;

&lt;p&gt;Oh and I forgot to mention, the agile-bot on staging was thrashing, dumping huge data dumps from slack onto the log.  I had to shut it down.  We&amp;rsquo;ve upgraded the whole stack of the agile-bot without checking that this set up will work in the deployment environment!  More back to basics &amp;hellip; I suspect I will need all my patience :-)&lt;/p&gt;
</content>
  </entry>
</feed>
