<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-01-12T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Deployment DevOps</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/12/deployment-devops/"/>
    <id>http://blog.url.com/2017/01/12/deployment-devops/</id>
    <published>2017-01-12T00:00:00+00:00</published>
    <updated>2017-01-18T21:36:23+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;m thinking alot about DevOps at the moment.  Partly because I&amp;rsquo;m giving a talk titled &amp;ldquo;DevOps on a Budget&amp;rdquo; a week from today at the remote DevOps conference.  I&amp;rsquo;m talking to folks on Slack about it, listening to the Ruby Rogues talk about it, listening to talks by some of the other presenters at the conference as preparation.  I&amp;rsquo;m also doing more DevOps &amp;hellip;, I think.  My sense was that DevOps was all about breaking down the barriers between the sometimes isolated areas of development and operations.  In large organisations developers would &amp;ldquo;hand off&amp;rdquo; their code to operations for deployment.  Naturally these areas are likely to be merged in smaller organisations, but the DevOps movement seems to be about joining things up so that development isn&amp;rsquo;t considered in a vacuum, and developers are involved in the operations processes of deploying and maintaining.&lt;/p&gt;

&lt;p&gt;That said, the term &amp;ldquo;DevOps&amp;rdquo; is perhaps being used casually to apply to operations, so that one starts thinking of developers and devops folks?  We use Continuous Integration (CI) systems (such as Travis and Semaphore) in our AgileVentures projects, so that anyone submitting a pull request kicks off a completely fresh build on a fresh virtual machine which involves installing all the libraries and running all the tests.   This means that every individual developer cannot escape the effects of the code they wrote on the test suites, because a tick or cross is added to their pull request.   Does this make every developer a DevOps person?  Not quite.  Nothing forces the developer to care about those tests, except that we won&amp;rsquo;t merge their PR until they pass.  There&amp;rsquo;s also the point that the code is building on a fresh Linux box, so in order to get their PR merged, the developer has to operate as if their code is being deployed in a another location, because it is.&lt;/p&gt;

&lt;p&gt;It seems to me that running the tests in a virtual machine in the cloud doesn&amp;rsquo;t quite constitute deployment, because there&amp;rsquo;s the additional step of getting the app running in production mode on a machine that&amp;rsquo;s accessible to the stakeholders.  Raoul had been focusing on the deployment and release role in our pairing on the project management of WebSiteOne.  Last year I had been focused more on coding and PR review, and Raoul had been taking the code from the develop server (where features get merged to) on to staging and then into production.  Despite fairly comprehensive acceptance tests there&amp;rsquo;s always still room for something to go wrong on one of the Heroku servers in &amp;ldquo;production&amp;rdquo; mode.  Note the potential linguistic confusion there.  Rails apps can run in &amp;ldquo;production mode&amp;rdquo;, but when we talk about the &amp;ldquo;production server&amp;rdquo;, that&amp;rsquo;s the one the main stakeholders are using.  The &amp;ldquo;staging server&amp;rdquo; will also be running in &amp;ldquo;production mode&amp;rdquo;, but it won&amp;rsquo;t be &amp;ldquo;production&amp;rdquo; if that makes sense? :-)&lt;/p&gt;

&lt;p&gt;We have it set up so that whenever a pull request is merged in, this will kick off a deployment to the relevant servers.  So merging to develop kicks of a run of the tests and if they pass, the code is deployed to the develop server.  Similarly for the staging branch (merge will deploy to staging) and the master branch (merge will deploy to production); in each case the deployment depends on all the tests passing.  As Raoul has got busier with Craft Academy I&amp;rsquo;ve taken the lead on merging PRs to the develop (branch and server) and then doing manual tests on the develop server, followed by pushing the code from develop to staging, and then staging to production, with manual tests on each.&lt;/p&gt;

&lt;p&gt;This process seems to be strongly operations-ish to me.  I&amp;rsquo;m calling it DevOps because it certainly involves some development skills.  For AgileVentures to fully embrace DevOps, we&amp;rsquo;d have more folks involved with this DevOps process, as we do with development, but I think it does take a higher level of committment.  There&amp;rsquo;s also more to go wrong here.  Now that I write out the details in preparation for the presentation I see that each individual AV project does have its own DevOps component, so there are a healthy number of AV members getting a strong taste of DevOps experience.  It might be even stronger if we could afford Heroku&amp;rsquo;s deploy PR feature that has every submitted PR lead to a deploy based on a default set of environment variables. This would potentially connect every dev with a full deploy.  We&amp;rsquo;re working with our sponsor drie on a more affordable version that will deploy every PR.&lt;/p&gt;

&lt;p&gt;Anyhow, after a crazy and distracted start to the week I finally managed to get down to some WebSiteOne DevOps done.  I took the latest code on develop and merged it into staging, after doing some preliminary manual tests on the development server.  The development server has less realistic code and settings on it, so there was only so much I could check there.  Note that while I am doing a sanity check on the site in general there, as well as a more detailed look at the new features, I&amp;rsquo;m still relying on our acceptance test suite to catch more complex issues that might arise from interactions between old and new code.&lt;/p&gt;

&lt;p&gt;On the staging server I was able to see the new sorting of projects by Github update recency feature was working, and also that starting a hangout would still ping Slack for us, despite the changes we&amp;rsquo;d made to the EventInstances Controller.  However the feature I wanted to test was preventing Twitter posts of the YouTube stream link before it had gone live.  That was broken on staging.  I saw this in the log:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;2017-01-11T15:01:10.165957+00:00 app[web.1]: Request waited 5ms, then ran for longer than 20000ms
2017-01-11T15:01:10.166341+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:237:in `sleep'
2017-01-11T15:01:10.166385+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:237:in `sleep_and_retry?'
2017-01-11T15:01:10.166388+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:201:in `run_again?'
2017-01-11T15:01:10.166422+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:80:in `run'
2017-01-11T15:01:10.166458+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:81:in `run'
2017-01-11T15:01:10.166489+00:00 app[web.1]: /app/vendor/bundle/ruby/2.3.0/gems/yt-0.28.1/lib/yt/request.rb:81:in `run'`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Getting to this point had involved sorting out an enviroment variable for the Yt gem to contact the YouTube servers. On develop I had checked that it worked from the Rails console, but I did have to reload the Yt gem config, which seemed odd.  On staging I dropped into the Rails console and found the same thing; this timeout error occurring if I didn&amp;rsquo;t re-apply the Yt gem config.  I became suspicious that the main Rails app was not loading the config.  I had advised the developer (Matt) to drop the Yt config into the rails &lt;code&gt;config&lt;/code&gt; folder, thinking it would be auto-loaded from there like the &lt;code&gt;puma.rb&lt;/code&gt; file in the same location.  I had mis-remembered and advised poorly.  The file needed to be in the &lt;code&gt;config/intializers&lt;/code&gt; folder.  I made that change on the staging branch and deployed it directly to confirm my suspicion.  I was correct, so I pushed that change back down from staging to develop.&lt;/p&gt;

&lt;p&gt;Clearly my involvement in both the operations and development sides had helped us resolve this issue, but we weren&amp;rsquo;t out of the woods yet.  Next I started the broadcast on the hangout I had started from the staging site.  No twitter posts.  I could now use the Yt gem functionality from the Rails console to check the duration of the livestream associated with the hangout.  It was showing the duration as zero.  It seemed like one of our assumptions was false, i.e. that the livestream starting would lead to an increasing duration reported by the gem.  I&amp;rsquo;d been experimenting with that with another developer (Sasha) several months previously.  Using the interactive console, and with a live streaming hangout in progress I was able to determine that what in order to check whether the livestream had actually started, we in fact needed to be checking was that the &lt;code&gt;live_stream_details.actual_start_time&lt;/code&gt; was not nil,.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;d missed this in the development phase, where our tests were green because we&amp;rsquo;d stubbed the Yt gem to return a non-zero duration for a live streaming video.  If we&amp;rsquo;d used VCR to capture the full network interaction we might have encountered this problem earlier, but the Twitter tokens being used had expired and testing the full network interaction had been left out.  I could have gone on and deployed to production.  I didn&amp;rsquo;t, but if I had the code in its current state would technically have fixed the underlying problem (tweeting unrecorded videos), but in a rather aggressive fashion by never tweeting any video links, unless a user finished the broadcast and left the hangout running.&lt;/p&gt;

&lt;p&gt;I left the code on staging and opened a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1489"&gt;ticket&lt;/a&gt; for the problem.  I&amp;rsquo;d had the original developer (Matt) in several of the hangouts associated with this DevOps work so I think I have a reasonable claim to the idea that we are doing joined up &amp;ldquo;Development&amp;rdquo; and &amp;ldquo;Operations&amp;rdquo; in this particular project :-)  Following through it occurred to me that we could have a DevOps acceptance test to check for the presence of the YT gem configuration, and we had the alternatives of just updating our mocks or a full VCR test for the tests covering the action of the YT gem.  A DevOps acceptance test might look like this:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Able to access YouTube API via Yt gem
  As the admin
  So that we have information about videos generated by our members
  I would like the Yt gem to be configured correctly

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; check Yt gem configuration
    &lt;span class="nf"&gt;When&lt;/span&gt; the app is running
    &lt;span class="nf"&gt;Then&lt;/span&gt; I would like the Yt gem to have it's api_key set to the GOOGLE_PROJECT_API_KEY environment variable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;ve got a few &amp;ldquo;devops&amp;rdquo; cucumber tests in both WebSiteOne and LocalSupport relating to things like rake tasks that might need to be run in production etc.  Perhaps I&amp;rsquo;m completely crazy here.  Total overkill when this bug is very unlikely to recur?  Or is this actually nice executable documentation that wraps a bug we encountered on staging and provides a clear readable representation of our experience here?&lt;/p&gt;

&lt;p&gt;What we&amp;rsquo;ve got here is a configuration bug that wasn&amp;rsquo;t caught by our tests.  Perhaps it should be an integration test at the RSpec level?  As long as I&amp;rsquo;m reviewing future PRs, I should notice if anyone jiggles with the Yt project config, but then again I won&amp;rsquo;t always be around to check things &amp;hellip; or perhaps switching to a VCR acceptance test would cover all this?  It might not check for the presense of the key (which WebMock might), but then again, we may completely lose the ability to get updates from Hangout plugins on April 25th (which this all relies on), so burning time here might be counter-productive compared to spending time on other potentially revenue producing code.&lt;/p&gt;

&lt;p&gt;At least I&amp;rsquo;ve blogged all this and I&amp;rsquo;ll make some tickets.  We want to get these changes deployed.  Adjusting the mock is the quick fix, given that we&amp;rsquo;ve checked the behaviour.  Is all of this DevOps?  Or is it only DevOps if you&amp;rsquo;re using Chef, Docker and Kubernetes?  These are the kinds of questions I&amp;rsquo;ll be pondering in my DevOps conference talk &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;https://youtu.be/_GBJLaKbTxo&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/1_Zkh4JsBik"&gt;DevOps on WSO part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=8q4RBgjzijY"&gt;DevOps on WSO part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=39I9UXJizCY"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=xAPWS7PKprc"&gt;DevOps on LocalSupport&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. this blog took 51 minutes to write&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Dazed and Confused</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/11/dazed-and-confused/"/>
    <id>http://blog.url.com/2017/01/11/dazed-and-confused/</id>
    <published>2017-01-11T00:00:00+00:00</published>
    <updated>2017-01-17T21:31:21+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I did not manage to catch up on my sleep yesterday and I was up late fixing some coding mistakes, but somehow I don&amp;rsquo;t feel quite as washed out as yesterday.  I still feel like I&amp;rsquo;m chess boxing.  Which of the many different things on my list should I be trying to knock off next?  I think my body is fighting off assaults from different winter bugs.  There&amp;rsquo;s no way to avoid coming into contact with kids in two different schools.  I am also beginning to feel an elation at having got our main AgileVentures Slack instance upgraded to the standard tier, now that we have been recognized by Slack as a NonProfit organisation.&lt;/p&gt;

&lt;p&gt;This was a plan that I&amp;rsquo;d almost forgotten about making, buried so deep in the layers of yak-shaving needed to achieve the actual goal.  We&amp;rsquo;d been talking about it during Xmas 2015.  In Jan/Feb last year I&amp;rsquo;d started pushing towards making AgileVentures an official charity, because that seemed like the only way we&amp;rsquo;d be able to afford the Slack standard tier.  Slack wouldn&amp;rsquo;t recognise us a charity until the whole process with the UK government had completed.  By April we had a charity constitution, application proposal and a board of trustees set up.  The UK charity commission replied in July with a series of questions requiring clarification.  We responded swiftly, but still hadn&amp;rsquo;t heard anything back in November.  Actually we did get automated emails explaining how terribly busy they were.  At the beginning of December I filed a follow up through their website feedback forms, and just before the Xmas break I got an email apologising that they had accidentally closed our case!&lt;/p&gt;

&lt;p&gt;They re-opened it and said they would expedite things going forward if we could re-submit the constitution with a few minor changes, and have it ratified by the trustees.  I was anticipating another month or two before we would be ratified, but almost as soon as I had emailed an updated version of the constitution (cc&amp;rsquo;d to the trustees) I got a slew of automated emails indicating the charity was created.  Great stuff, but not enough for Slack!  Apparently we also needed to be ratified by a 3rd party called TechSoup.  &lt;/p&gt;

&lt;p&gt;During the course of last year as the Slack instance hotted up we became more and more constrained by the limits on history and app integration in the free tier.  Also I was hearing that the NonProfit version was limited to 250 members and beyond that, we&amp;rsquo;d be paying 85% of the standard Slack fees.  Something we would not be able to afford given over 1500 folks in our Slack instance.  I started the application process with TechSoup without particularly high hopes.  They required a projection of our annual income, which I pieced together, and actually we were approved in short order. So at the beginning of this week Slack approved our NonProfit status and moved our main Slack instance to the standard tier.  &lt;/p&gt;

&lt;p&gt;Now the wrinkle is that the 250 user limit for Slack&amp;rsquo;s free NonProfit access to the standard tier is that it applies to active users, not total users.  According to my Slack contact we are at 130 or so active users, and to my delight I can now see the entire history of all the DM&amp;rsquo;s, private groups, etc.; in fact everything we&amp;rsquo;ve ever typed into our Slack instance.  We might start incurring charges at 250 users, but then again if we can get to 250 active users perhaps we&amp;rsquo;ll be at the stage to be able to afford Slack&amp;rsquo;s rates?  Certainly we&amp;rsquo;ve got some breathing room before then.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re in a little of a quandry about what to do with the separate Slack instances we created for Premium members and Mentors.  I created those in the course of last year to provide a place where the history wasn&amp;rsquo;t disappearing so fast.  Slack&amp;rsquo;s upgrade for a NonProfit will only apply to one instance.  Should we move the upgrade to the Premium or Mentor instance? On the other hand having multiple instances has probably been slightly confusing and may actually have been a dissipative force for those groups, even if it has allowed a space where we can create multiple Premium channels for jobs, tech tests and paid projects etc. for Premiums to browse. &lt;/p&gt;

&lt;p&gt;Still, getting Slack NonProfit status is a major step forward.  Whatever happens from hereon in, I think we&amp;rsquo;ve gotten AgileVentures to a major milestone.  I&amp;rsquo;m behind on my station-keeping tasks such as blogging, social media-ing, preparing my DevOps talk, project management on WebSiteOne, LocalSupport and AsyncVoter.  Not to mention trying to write this book on Open Source Agile Project Management &amp;hellip;!  That said I feel like I have renewed vigor to take this fight to the next level!   Just trying to ride that and not feel too dazed and confused by the twists and turns on the journey &amp;hellip;!&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=cWhEDaGEW3w"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=RPeYx4_WZ0E"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. this blog took 18 minutes to write&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Tired but Pushing On</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/10/tired-but-pushing-on/"/>
    <id>http://blog.url.com/2017/01/10/tired-but-pushing-on/</id>
    <published>2017-01-10T00:00:00+00:00</published>
    <updated>2017-01-16T21:04:26+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I&amp;rsquo;m tired today.  Busy weekend.  Back to coaching kids football Saturday morning, &amp;ldquo;Bob Martin&amp;rdquo; scrum, taking eldest to guitar practice and round the supermarket and making supper.  Relatively calm Saturday evening, but then a frantic Sunday, with my youngests&amp;rsquo; first football match in a higher division, and then a dash across London to a relative&amp;rsquo;s house before a surprise holiday treat for the boys; a trip to see a live game.  Back late, and didn&amp;rsquo;t get to sleep till late working through the muddy clearup from the morning&amp;rsquo;s football.&lt;/p&gt;

&lt;p&gt;Monday fairly full on with all the boys back at school, so doing the school run in the morning for the twins, and then a full day.  Some reasonable progress.  New marketing intern welcomed to Slack and introduced to some other team members, new SPOCs made for instructors, performance testing on drie&amp;rsquo;s new EU servers (not as fast as we&amp;rsquo;d like) and drie catchup meeting, now scheduled for every Monday to push things forward.  Managed to watch an episode of &lt;a href="https://scaleyourcode.com/interviews/interview/13"&gt;ScaleYourCode&lt;/a&gt; where Nathan Harvey of Chef showed how to manage deployment to ec2 via the hosted Chef system.  Suddenly I understand what Chef, Puppet, Ansible etc. do and how they&amp;rsquo;re different from Docker and Vagrant.  All great prep for the DevOps conference talk I&amp;rsquo;m giving next week.&lt;/p&gt;

&lt;p&gt;Spent the evening reviewing the videos from the kids football and writing up the match report and all the areas we can improve, and got to bed later than I&amp;rsquo;d hoped.  Last two nights I had to use audio standup comedy on spotify to help me get to sleep because I can&amp;rsquo;t stop thinking and planning for the football or for AgileVentures.  Two cups of real coffee got me through yesterday.  Hoping to drop back to one today.  We&amp;rsquo;ll see.  Part of the problem was checking email just before bed - really must stop doing that.  I used to be better, but since working at home for the last year, there&amp;rsquo;s an extra desire to keep checking.  I really want to get myself into the black financially, i.e. compensating myself for all the hours I&amp;rsquo;m putting into AgileVentures.  I want to be able to keep being able to pay for my kids activities, music, gym, football, karate, and take them on trips.&lt;/p&gt;

&lt;p&gt;Funny thing is that getting stressed about it all really doesn&amp;rsquo;t seem to help.  I definitely suffer from pushing too hard.  I want to squeeze every last second out of the day.  I&amp;rsquo;m writing out Japanese language quizzes for my kids during breakfast, listening to technical podcasts on the walk back from dropping them off at school, fitting in physio on my knee during my breaks from coding, reviewing the new RSpec book during my lunch break, catching up with Slack/Email while waiting for my kids to do their activities in the evenings, and then finally trying to publish blogs from the previous day just before I go to bed.&lt;/p&gt;

&lt;p&gt;If I&amp;rsquo;m on top of my game I can manage it all.  Under the weather or taking on too much at the weekend it becomes a grind; difficult to focus.  It just requires a careful balance.  I&amp;rsquo;ve gotten pretty good at not booking too many things, but sometimes the long range planning will lead to a jam, e.g. the football season starts a week earlier than I anticipated.  The football coaching is a big commitment; logistics during the week, and 30+ Sat/Sun mornings throughout the year, but the boys love it!  And I enjoy having an activity at the weekend that gets me out in the open air communicating with others.  Although it can all get pretty emotional too :-)&lt;/p&gt;

&lt;p&gt;What I&amp;rsquo;d really like is a consistent pattern of hibernation in the UK.  Like the countries closer to the equator to us have a siesta in the heat of midday, I think those closer to the poles should have a hibernation period when the days are shortest.  After Xmas/NewYear, I&amp;rsquo;d like two weeks where I was allowed to just sleep.  Another 10 years.  Get the kids off to university and I might be able to MVP a mid-winter hibernation.  At least the daily blog writing gives me a calm thirty minutes to pull myself together after the school run.  Although I&amp;rsquo;m not sure to what extent publishing these is helping us achieve our AgileVentures goals.  Maybe the focus on marketing with the new intern will help us work out the best process.  The daily blogging is an experiment I intend to see through till June.  I&amp;rsquo;ve just got to make sure that we don&amp;rsquo;t have too many things booked at the weekend and that I find a good way to calm myself before bed so I can get enough sleep!&lt;/p&gt;

&lt;p&gt;The big question on my mind is would I be better off taking a nap in order to catch up on my sleep, as opposed to drinking a coffee and working through my Slacks/Emails? Taking a nap in the day (unless post-lunch) feels like slacking (being lazy or under-committed) if I&amp;rsquo;m not actually ill &amp;hellip; and I&amp;rsquo;ve already made the coffee &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YPtN3dQd6Z4"&gt;&amp;ldquo;Bob Martin&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aywVGFGImEY"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dyJnqLfP6u0"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. this blog took 26 minutes
p.p.s managed to clear another small set of items off my desk&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>drie GitHub integration</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/09/drie-github/"/>
    <id>http://blog.url.com/2017/01/09/drie-github/</id>
    <published>2017-01-09T00:00:00+00:00</published>
    <updated>2017-01-13T21:03:41+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Friday I took a trip down to the &lt;a href="https://drie.co/"&gt;drie&lt;/a&gt; offices in Hammersmith.  We&amp;rsquo;d agreed before the break that we needed to coordinate our collaboration for the new year.  We&amp;rsquo;d previously agreed a sliding scale of sponsorship support based on outcomes for drie in terms of the number of users adopting drie.  In preparation for the meeting I prepared the following list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What I need

&lt;ul&gt;
&lt;li&gt;ability to track the number of people using drie&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;What I need to do

&lt;ul&gt;
&lt;li&gt;check whether moving drie servers to Ireland is getting the performance increase we hoped for&lt;/li&gt;
&lt;li&gt;migrate more of LocalSupport to drie&lt;/li&gt;
&lt;li&gt;prepare for the devops conference talk&lt;/li&gt;
&lt;li&gt;improve on the document outlining the needs of the different AgileVentures projects&lt;/li&gt;
&lt;li&gt;get budget details for drie hosting MetPlus&lt;/li&gt;
&lt;li&gt;detailed technical plan for the following year&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Talking through the above with Ben and Tom at drie and the things they wanted to get through we came up with the following agenda:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;drie to show new features for drie-push

&lt;ul&gt;
&lt;li&gt;GitHub Integration&lt;/li&gt;
&lt;li&gt;versioned config&lt;/li&gt;
&lt;li&gt;appdirect&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;look at drie pricing models&lt;/li&gt;
&lt;li&gt;look at performance&lt;/li&gt;
&lt;li&gt;conference talk&lt;/li&gt;
&lt;li&gt;generate clear features to de-risk the collaboration going forward

&lt;ul&gt;
&lt;li&gt;acceptance criteria&lt;/li&gt;
&lt;li&gt;roadmap&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;geek out about the new proxy model (to help understand drie push startup times)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Working through the agenda it became clear that at the moment there wasn&amp;rsquo;t an easy way to track which AgileVentures members were using drie, as all that drie records of drie-push users is ssh keys.  However this would change with the introduction of a new GitHub integration which was the first thing Ben and Tom showed me.  Rather than building an entire team&amp;rsquo;s management framework to compete with Heroku and others, Tom came up with the idea of using a &lt;a href="https://github.com/integrations"&gt;GitHub integration&lt;/a&gt; to leverage the existing GitHub teams framework.  &lt;/p&gt;

&lt;p&gt;AgileVentures already uses a lot of Github integrations such as TravisCI, Semaphore and CodeClimate.  GitHub themselves are &lt;a href="https://github.com/blog/2226-build-an-integration-for-github"&gt;encouraging more and more developers to create integrations&lt;/a&gt;, and the drie GitHub integration looks very similar in that it can be configured and installed via a GitHub interface, and little ticks and crosses are added to the GitHub interface when operations succeed and fail.  &lt;a href="https://github.com/integrations/heroku-review-apps"&gt;Heroku Review Apps&lt;/a&gt; are also a GitHub integration and work in a similar fashion, albeit requiring a complete separate Heroku app set up for them to riff off.  However, we&amp;rsquo;ve had to turn off Heroku review apps as being too expensive.&lt;/p&gt;

&lt;p&gt;drie push GitHub integration goes one step beyond Heroku review apps, by making it possible to set up a repository to just deploy on any push to GitHub.  It&amp;rsquo;s like Heroku Review apps without the overhead of having to deal with Heroku or their new pricing model.  Tom was also showing me other tricks on the backend such as versioned config and reverse proxy tricks that will allow their system to scale effectively.&lt;/p&gt;

&lt;p&gt;We went through the new drie pricing models which I need to pass on to the MetPlus project who are talking with their client today, and today I&amp;rsquo;m torn between trying to spend the whole day on pushing the LocalSupport app further onto drie (still haven&amp;rsquo;t checked the new performance data), reviewing material for my upcoming devops conference talk, and generating this new roadmap for our drie collaboration, which we did at least agree should follow this format:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Dates #free-users #paid-users

include features ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The danger that Ben kept us focused on was whether developing the drie push GitHub integration would suck up time that could be spent polishing the ssh only access to drie push, and slow down our overall timeframe.  It&amp;rsquo;s almost certain that that will happen to some extent, but the problem with the ssh only approach is that the main differentiation from Heroku is on price which will be difficult to compete on in the long term.  Other drie push features such as deployment per branch won&amp;rsquo;t make much of an impact unless the configuration model is sorted out, and to be honest the big win for AgileVentures members will come from ease of use.  Avoiding the need to go to the command line at all, and just make your app deploy directly from GitHub, will remove a major stumbling block. &lt;/p&gt;

&lt;p&gt;Related Videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MrUF68V4WMw"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SttRB9A2bQ0"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YPtN3dQd6Z4"&gt;&amp;ldquo;Bob Martin&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. this blog took 33 minutes to write&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>From pair programming to pair working</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/08/generalizing-pair-concept/"/>
    <id>http://blog.url.com/2017/01/08/generalizing-pair-concept/</id>
    <published>2017-01-08T00:00:00+00:00</published>
    <updated>2017-01-13T21:10:34+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Pair programming - as any relatively new programming methodology, such as BDD, TDD - is a controversial matter. The controversy is good. It helps define the relevant applications of the methodology. In their books &amp;ldquo;better, faster and lighter java&amp;rdquo;, Bruce Tate and Justin Gehtland explain that, when you have a new drill, any problem relates to drilling a hole. You may end up trying to open a bottle of beer with a drill. And obviously, with any new technology or methodology, you go through skepticism, enthusiasm and disappointment.  Eventually, after drilling holes anywhere in your house, you grasp the reasonable use cases. &lt;/p&gt;

&lt;p&gt;Controversies about pair programming arise at Agile Ventures, too. Well, even if many members are very experienced pair programming practitioners, many others - including me - are still looking for their pair programming comfort or efficiency zone. We sometimes discuss this topic with Sam - we might bore him with our wavering and he might think &amp;ldquo;why the hell do they spend time talking rather than coding? :-)&amp;rdquo;. We finally agree on at least four cases where pair programming is a good fit :&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;When we start to code a functionality : because getting up in the morning is always a challenge&lt;br&gt;&lt;/li&gt;
&lt;li&gt;When we&amp;rsquo;re stuck : because it&amp;rsquo;s good to have someone that tells you to look at the top when we keep on looking for an exit at the bottom without finding it&lt;br&gt;&lt;/li&gt;
&lt;li&gt;When we want to complete a task :  because a pair programming buddy will help you to overcome your obsession of perfectionism or your fear to put things to an end, so that deadlines are met&lt;br&gt;&lt;/li&gt;
&lt;li&gt;When we need to improve our skills : Programming is often like a shared secret. Everybody has got a piece of the whole puzzle.&lt;br&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Starting a task, being stuck, achieving things, improving our skills are not specific to progamming. I gradually notice that there are many other professional circumstances where pairing is a valuable way to get things done :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;System administration : Configuring or troubleshooting a system&lt;/li&gt;
&lt;li&gt;Document, presentation : Writing a presentation or a document&lt;/li&gt;
&lt;li&gt;Project management : ordering ideas, prioritizing tasks&lt;/li&gt;
&lt;li&gt;Problem solving : Trying to describe / figure out the nature of a question by gathering figures and facts in a spreadsheet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Before I began to practice remote pair programming with Agile Ventures, I felt that working remotely was quite a challenge. For instance, proof-reading 
a document with your team on a conference call is not easy. You have to tell everybody which page you&amp;rsquo;re working on, and once you modified the document,
the page numbering is not consistent anymore. You spend more time synchronizing people than working on the document.&lt;/p&gt;

&lt;p&gt;Synchronizing the context between participants in a distant meeting is a key aspect. If interactions are limited to only a channel, whatever it is, audio, chat, email, slack, synchronization is not possible. As soon as you add a second channel, for instance screen sharing + audio, the sync problem disappears. There are many tools available to sync people. It took me time to find the right combinations, depending on the task at stake and the work habits.  Sometimes, we work with teamviewer on the phone. Sometimes, we use online tools like zoom.us, or webex. Sometimes, we use videoconference tools  like Skype or hangouts. Sometimes, we work with mobile tools, like WhatsApp. The tool is not a great barrier as long as every participant can install it
on his terminal, the quality of streaming is correct and it offers tools to interact with others to every participant, chatting, writing on the displayed document, talking.&lt;/p&gt;

&lt;p&gt;Distance, that was detrimental when working on a conference call, becomes an advantage :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The shared screen becomes everybody&amp;rsquo;s screen. Anyone can participate, correct, add his own contribution to the work.&lt;/li&gt;
&lt;li&gt;Some basic physical constraints such as finding a layout of the room so that every participant can watch the screen and participate disappears.&lt;/li&gt;
&lt;li&gt;Various barriers like psychology, hierarchy, physical proximity or language barriers are lowered. People can choose to ask questions by chat or on the voice channel for instance, depending on their favorite way of communicating.&lt;/li&gt;
&lt;li&gt;Participants can be more focused on the real goal at stake&lt;/li&gt;
&lt;li&gt;And last but not least, it costs much less than a physical meeting&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pair-programming may be a controversial topic but my experience of using the methodology to work on other subjects such as sys admin or document writing has been very profitable. I hope my post inspires you to begin pair-working or even mob-working! &lt;/p&gt;

&lt;h3&gt;Related Blogs:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://nonprofits.agileventures.org/2016/10/20/to-pair-or-not-to-pair/"&gt;http://nonprofits.agileventures.org/2016/10/20/to-pair-or-not-to-pair/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nonprofits.agileventures.org/2016/10/25/solo-coding/"&gt;http://nonprofits.agileventures.org/2016/10/25/solo-coding/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://nonprofits.agileventures.org/2016/11/25/mob-programming/"&gt;http://nonprofits.agileventures.org/2016/11/25/mob-programming/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Getting Organised</title>
    <link rel="alternate" href="http://blog.url.com/2017/01/06/getting-organised/"/>
    <id>http://blog.url.com/2017/01/06/getting-organised/</id>
    <published>2017-01-06T00:00:00+00:00</published>
    <updated>2017-01-12T21:05:26+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Recently we had new windows put in the front of the house, which included replacing my home office windows.  This forced me to have a bit of a clear up in the office to allow the builders access.  I&amp;rsquo;m not a big fan of having to clear up in the physical world, although it&amp;rsquo;s always great to enjoy the results.  There always seems to be more clearing up than can be fit into a day.  Maybe it&amp;rsquo;s my personality or something about how demanding (or fun?) computers are in terms of getting things working on them.  I&amp;rsquo;d so much rather spend three hours of the afternoon working on code than sorting through my old filing cabinet.&lt;/p&gt;

&lt;p&gt;The process of clearing out the office actually involved moving a lot of stuff up to the spare room.  This at least created a tidier office, and a few things did get thrown out.  Then we had relatives staying over the holiday and the spare room had to be sorted for them, so the stuff displaced from my office got moved down to my bedroom, and with help from my wife I&amp;rsquo;ve been doing some sorting over the last few days.  Some more stuff has been thrown out, some has been organised a little.  Over the break I did get a new filing cabinet installed in my office, and have begun the slow process of moving over stuff from the old broken plastic cabinet we brought with us from Hawaii.&lt;/p&gt;

&lt;p&gt;The obsessive in me wants to go through every piece of paper in the old filing cabinet, throwing out what is not needed and classifying everything correctly.  The difficulty is knowing what is actually needed and that many things don&amp;rsquo;t necessarily fit into simple classifications.  It&amp;rsquo;s easy, for me at least, to burn hours dithering on these kinds of things.  And it becomes even more problematic if the materials being sorted include stuff that my kids made or I inherited from my parents.  I just managed to shred a load of my mother&amp;rsquo;s old payslips, although I kept two or three as mementos in a file folder that I discovered in the cleanup.  Now what does that say about me? :-)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve backed down from trying to do a full re-filing session from old cabinet to new.  I do really want to throw the old one out to create more space in my office to get stuff out of the bedroom! However I don&amp;rsquo;t have the emotional energy to devote a day to doing that, and I feel bad about just dumping everything across.  I&amp;rsquo;ve gone for a compromise (?) approach where I try to become more proactive about filing things day to day.  Part of the problem in my office is that each day I&amp;rsquo;ll get a few things through the mail at a random point in the morning.  More often than not I am in the middle of working on some coding problem or set of admin tasks.  I&amp;rsquo;ll go down to get tea or coffee, will open the letters (depending on my mood) and will be tempted just to dump them on my desk rather than file them because I&amp;rsquo;m more interested in the coding or admin task.&lt;/p&gt;

&lt;p&gt;As you might imagine this can lead to a situation where my desk surfaces are obscured by piles of stuff.  It&amp;rsquo;s not too bad at the moment in that, following the new window installation, I can see perhaps 35% of the desk surface clearly.  If I carried on as usual this year, that might drop to 5% before too long.  However, one of my many new year&amp;rsquo;s resolutions is to process one item on my desk every morning.  This morning it was sending an RSVP to my cousin&amp;rsquo;s wedding.  While I was in the moment I also texted my sister to check arrangements at the half term break so I can get to the point of booking my sons&amp;rsquo; dentists appointments for when they are off school.  The letter from the dentist is another item sitting on my desk to the left.  Yesterday a bank statement arrived and since that required filing, I used it as an opportunity to move the bank-related files from old filing cabinet to the new.&lt;/p&gt;

&lt;p&gt;The plan here is to ruthlessly and relentlessly reduce the number of items on my desk, and to gradually move the items from old filing cabinet to new, but to do it as part of the ongoing sorting.  I&amp;rsquo;m hoping this might make everything a little less painful, and introduce a new rhythmn of filing and organising things as I get them, rather than allowing them to build up.  We&amp;rsquo;ll see how it goes. &lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m also measuring the time it takes me blog, in an attempt to keep it under 20 minutes, but so far this year it&amp;rsquo;s still stretching to 40 minutes each day.  Trying to be more organised in my office is part of an ongoing attempt to be more organised in my work generally.  It&amp;rsquo;s very easy to get distracted by whoever is sending the latest email or the latest Slack message.  The blogging itself is part of trying to give me space to get stuff done proactively rather than doing everything reactively.  Other things I&amp;rsquo;m trying to make regular are:&lt;/p&gt;

&lt;p&gt;1) reviewing my action plan daily&lt;br&gt;
2) creating a blog draft in under 20 mins daily&lt;br&gt;
3) reviewing and posting the previous days blog&lt;br&gt;
4) reviewing and sending an older blog to Medium/Twitter/FB/LinkedIn&lt;br&gt;
5) reviewing PRs for LocalSupport, WebSiteOne and the AsyncVoter projects&lt;br&gt;
6) listening to, and Slacking, a podcast  &lt;/p&gt;

&lt;p&gt;Although maybe I should be dropping this obsession with chipping away at things, clear my desk (metaphorically at least) and focus on coding the key things that I think will bring in more revenue to AgileVentures; and there really needs to be more revenue if I want to continue my current lifestyle.  I didn&amp;rsquo;t do any focused coding yesterday.  It was all scrums, code review, comments in pull requests, scripts for merging edX courses, responding to email from instructors using the ESaaS textbook, sorting out the meetup group, and trying to get registered as a charity with TechSoup, which is what Slack is asking us to do to be confirmed as a non-profit.  That last seems to involve us having to submit accounts, and so I have to make a financial projection for the year &amp;hellip;?!&lt;/p&gt;

&lt;p&gt;When I look back at the last year it feels like the efforts that brought in revenue were reaching out to AV members via email, many of whom converted to Premium plans, and hooking up with a Sponsor through my personal network.  So far all my attempts to gain additional sponsors through emails have produced some interesting leads, but no results.  At the moment my mind is buzzing with the idea of reaching out to all the AV Slack members in DM to let them know that now AgileVentures is an official charity, Premium plan payments are tax deductible, hoping that this will be good news for those who are already signed up, and might encourage a few more to consider the option; as well as get feedback on the offering.  Doing that sounds like a lot more interesting and productive than sorting out my filing cabinet &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=LPb6K9oksxI"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=mARKUGnA4Pc"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. there were also a lot of interesting technical things that came up yesterday, such as the Avdi Grimm code we looked at in Mob Programming, all the stuff I was putting in PR review about managing project work that I should be writing in my book proposal, the MongoDB security issue we talked about in the &amp;ldquo;Kent Beck&amp;rdquo; scrum and the twitter disabling hook in the twitter PR for WebSiteOne to name a few &amp;hellip; and I have to restrict myself to one blog a day?!?&lt;/p&gt;

&lt;p&gt;p.p.s this blog took 33 minutes to write&lt;/p&gt;
</content>
  </entry>
</feed>
