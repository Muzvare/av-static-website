<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-11-24T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>More Profiling of My Days</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/24/more-profiling/"/>
    <id>http://blog.url.com/2016/11/24/more-profiling/</id>
    <published>2016-11-24T00:00:00+00:00</published>
    <updated>2016-11-24T10:11:09+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So I did a second day of profiling.  The details are as follows:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;09:15 - 10:15 writing blog draft (plus distribution)

10:30 - 11:00 reviewing slack and email - promoting, handling mentors, premiums

11:00 - 11:30 Writing emails to potential sponsors

11:30 - 11:45 Scrum

11:45 - 12:30 WSO hangout with Premium F2F member

12:30 - 12:45 Negotiating with company on potential paid project

12:45 - 13:00 getting CA and PayPal folks into new premium chat instance - notifying Premium Mobs, F2Fs and Pluses about mob programming session

14:15 - 15:15 Fielding questions from Premiums on Slack (got an upgrade to F2F), co-founder 

15:15 - 15:45 PR Review (AsyncVoter, LocalSupport)

15:45 - 16:00 Scrum

16:00 - 17:00 More PRs - fixed AsyncVoter - SHF comments, did AV mailing, updated and posted blog 

18:15 - 18:45 Reviewing ProjectScope PRs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reviewing this again with Eliminate, Simplify, Automate, Delegate an early insight was that I could automate the creation of the list or related videos that I drop into the end of each blog.  Reviewing Slack and Email - I feel like I really have to do that each day.  There was a chunk of stuff to do with setting up a new Premium member and a new Premium Mentor.  I created a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1300"&gt;ticket on WSO&lt;/a&gt; to cover the details of what might be automated there.  That looks promising, there&amp;rsquo;s a couple of relatively straightforward coding tasks there, although there is also my desire to refactor the charges controller &amp;hellip; my intuition is that there&amp;rsquo;s a double win for that sort of automation when we do it in a live pairing session in that it helps others see into our codebase, serves as a potential learning platform.   Not that many people pour over our videos, but it&amp;rsquo;s a chance for me to pair with other AV members and I think we all get value from that.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m trying to step up writing of emails to potential sponsors after Charles Max Wood of Ruby Rogues talked on the Freelancers show about how that was the critical task that could have the biggest impact that he often didn&amp;rsquo;t get around to.  Don&amp;rsquo;t think I can drop or delegate that yet.  After the scrum I got in a hangout with Matt to unblock him on WebSiteOne.  I burned some time explaining why I don&amp;rsquo;t like the UX of our status feature on WSO.  Maybe that&amp;rsquo;s wasting time, or maybe that&amp;rsquo;s important communication of my values regarding UX design to other team members.  I feel like at least some value was being derived both for WSO and for Matt as we unblocked him and cleared up ambiguity around the latest ticket he was working on.&lt;/p&gt;

&lt;p&gt;Then I was negotiating in Slack with a company about a potential paid project.  Maybe that will come to nothing, but my intuition (which I think Michael and Marouen share) is that a few paid projects would make the whole Premium package so much more attractive to those on the fence about whether to sign up.  Then it was more Slack action getting the CA and Paypal Premiums into the new Premium chat instance.  I&amp;rsquo;d used the Stripe &amp;ldquo;customer&amp;rdquo; list to invite folks, so that had left out those not represented in Stripe.  That pushes me to want to improve domain model in WSO so we can properly represent all the current avenues that members can go Premium, so that I can a clear central place for a coherent list, although thinking about it I can see how I can extract that data from the console.  Still as the number of Premium users increases (which is a key goal) we&amp;rsquo;ve got to get better at consistency tracking who they are and how they&amp;rsquo;ve come to us.&lt;/p&gt;

&lt;p&gt;I spent a little time notifying Premium Extras (new term - that&amp;rsquo;s Mob, F2F and Pluses, i.e. everyone eligible for Mob) about the Mob Programming session we&amp;rsquo;ll do later today.  That feels like it could be an important engine of growth.  After lunch Michael wasn&amp;rsquo;t around again and I dithered about throwing myself into programming tasks versus just catching up on admin and station keeping.  I was fielding questions on Slack for almost an hour.  I could argue that I should have been productively coding with that hour, however one Premium member did upgrade to F2F following our conversation.  I think there&amp;rsquo;s something critical in there.  Communicating with those consuming the services you provide is essential.  That doesn&amp;rsquo;t mean doing tech support for everyone on every tier all the time.  However, giving an ear to those who are already committed to support our charity financially and helping them find ways to derive more value &amp;hellip; that feels kind of core.  &lt;/p&gt;

&lt;p&gt;I guess ultimately I need some full time programmers, some full time marketing people, some full time &amp;ldquo;sales&amp;rdquo; people &amp;hellip; :-) Well I hope we can stay small and friendly for the time being.  After that Slack binge I did get down to some PR review getting two PRs merged into AsyncVoter and a flurry of comments on LocalSupport.  We had another quick scrum and there was more admin, doing the AV mailing - 7 more 15 minute stabs at that and I&amp;rsquo;ll have emailed everyone in the community and then perhaps I can take a bigger picture look about how we stay in touch people in the long term.  Am I setting an artificial barrier for myself there?&lt;/p&gt;

&lt;p&gt;I had forgotten to update and post my blog of the previous day, so I hit that and then grabbed some time later in the evening to review ProjectScope PRs for the Berkeley students.  Armando feels the ProjectScope project metric tracking system is going to be critical to managing his course in the future and the part 3 project course for the MOOC.  I was able to give a flurry of comments and agonise about whether I was pushing on the students too hard.  I need to spend some time deploying their branches and experimenting with real project data.&lt;/p&gt;

&lt;p&gt;Also the bot shut down when I closed my computer so we may have lost attempted 3rd votes to the async vote we were trying to run in WSO.  Gotta get that bot deployed permanently.  So anyhow, what could I eliminate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;posts on PRs that are too long&lt;/li&gt;
&lt;li&gt;scrums running over time&lt;/li&gt;
&lt;li&gt;me ranting&lt;/li&gt;
&lt;li&gt;slow AV mailings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;what could I simplify:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PR posts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;what could I automate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blog draft submission&lt;/li&gt;
&lt;li&gt;Blog draft video lists&lt;/li&gt;
&lt;li&gt;AV mailing process&lt;/li&gt;
&lt;li&gt;Premium and Mentor upgrade&lt;/li&gt;
&lt;li&gt;Tracking of current range of Premiums&lt;/li&gt;
&lt;li&gt;Hosting of async bot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and I don&amp;rsquo;t know what if anything I can delegate. Everyone&amp;rsquo;s a volunteer in our organisation, and I don&amp;rsquo;t think I can ask anyone to do anything.  I need to wait for people to ask for interesting things to do.  The most successful thing so far has been a process of making tickets of everything I can think of as important on the relevant repos and occasionally pointing to things when people ask :-)&lt;/p&gt;

&lt;p&gt;Well, I think that&amp;rsquo;s enough profiling for now.  There&amp;rsquo;s some clear possibilities for automations, and I guess rather than agonise about which to do I should just start knocking them off in some order :-)&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/aGjQ5N7nRfQ"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dPJqeBPFluc"&gt;WSO Huddle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qn9b8MVbvg"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Profiling My Day</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/23/profiling-my-day/"/>
    <id>http://blog.url.com/2016/11/23/profiling-my-day/</id>
    <published>2016-11-23T00:00:00+00:00</published>
    <updated>2016-11-24T11:03:34+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I profiled my day yesterday in an attempt to apply the Eliminate, Simplify, Automate, Delegate (ESAD) mantra and create space for the important things :-)  Here&amp;rsquo;s my rough profile of the day:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;09:00 - 10:00 writing blog (5mins on getting that up and in slack #blog_drafts)

10:15 - 10:40 reviewing slack and email - starting a WSO vote

10:40 - 11:00 reviewing previous days blog and pushing out

11:00 - 11:30 rebuilding slack client after creation and renaming of teams

11:30 - 12:15 scrum and debugging with Premium Mob Member

12:30 - 13:30 edX emailing, AV emailing, Social Media update, negotiating with company about a paid project, editing and promoting blog for Kenyan Bootcamp code9ty

14:45 - 15:00 rebooking physic appt

15:00 - 15:45 reviewing asyncvoterUI and LS PRs (starting hangout 2nd time adding my AV banner)

15:45 - 16:15 scrum - catch up with co-founder Thomas, voting with Rose and student

16:15 - 17:00 meeting with heroku about our charges

17:00 - 17:30 chatting with sponsor drie about hosting services
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So let&amp;rsquo;s apply the ESAD criteria to each in turn.  I don&amp;rsquo;t know that there&amp;rsquo;s anyway to simplify the process of actually writing the blog.  I could make them shorter, or even eliminate them, perhaps doing them less frequently.  I&amp;rsquo;m reluctant to do that as I find them a nice grounding start to the day, the prevents me from just sitting down and reacting to whichever seems the most urgent message on Slack or in email.  Intuitively the feedback I&amp;rsquo;m getting on the blogs is that they are often too long, have too much code, not enough images, but also that they&amp;rsquo;ve helped others understand my perspectives and what we are trying to achieve with AgileVentures.  I can&amp;rsquo;t really delegate them (although I&amp;rsquo;d love to have more in the community blogging), and the only place for automating them would be to work on the final portion of pushing them to GitHub and Slack where each day I have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy from TextEdit to Sublime&lt;/li&gt;
&lt;li&gt;Save in correct location and format for middleman blog (e.g. 2016-11-03-pithy-title.html.markdown)&lt;/li&gt;
&lt;li&gt;Add middleman blog header, edit date there, edit title and edit keywords&lt;/li&gt;
&lt;li&gt;Navigate to my av-static-website terminal&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git commit -am &amp;#39;new blog&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open a browser in the blogs directory of the av-static-website: i.e. https://github.com/AgileVentures/av-static-website/tree/master/source/blog_articles&lt;/li&gt;
&lt;li&gt;Navigate to the link for the days blog and copy it&lt;/li&gt;
&lt;li&gt;Switch to slack and paste to the #blog_drafts channel with &lt;code&gt;@channel new blog draft &amp;lt;link&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now this only takes a minute or two, but I am doing it every day, and having written it out I think several parts could be automated or simplified.  It might take 30-60 minutes to get automated in the way I want, so I&amp;rsquo;d need to feel sure that I was going to write another 15-30 blogs before I&amp;rsquo;d start to see time savings.  Possibly I could write a bash script &amp;hellip; there are also things that can go wrong if I have to deal with merge conflicts (I should always &lt;code&gt;git pull&lt;/code&gt; first).  I could just blog on medium and be done with it.  I&amp;rsquo;ve avoided that partly because I want to share drafts with anyone who joins #blog_drafts and have them able to submit PRs, although perhaps a better solution is to just make everyone interested a members of the AgileVentures organisation on Medium.&lt;/p&gt;

&lt;p&gt;I start to think about whether there are some existing automations, like setting up pure PR notifications on the #blog_drafts channel, and submitting my blog as a PR from a branch.  That might seem like crazy extra work, but it connects to something else I&amp;rsquo;d like to automate further; the process of submitting a PR from the command line, which seems to involve me re-typing the same thing several times over, e.g. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git checkout -b #waffle_id_exciting_feature_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;doing and committing the work (commit message often includes &amp;lsquo;exciting feature name&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hub pull-request -b develop&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;editing the PR description in vim to include the text &lt;code&gt;fixes #waffle_id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I keep thinking here that if I could get something like a default commit message based on the branch name, then I could avoid typing the waffle_id and feature name twice.  In the blog case there are no waffle ticket ids to link up, but I guess I&amp;rsquo;m looking at being able to type something like the following from the command line:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ blog_draft &amp;lt;blog title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which would do the following steps:&lt;/p&gt;

&lt;p&gt;a) &lt;code&gt;git pull&lt;/code&gt;&lt;br&gt;
b) &lt;code&gt;git checkout -b new_blog&amp;lt;blog_title&amp;gt;&lt;/code&gt;&lt;br&gt;
b) &lt;code&gt;git add source/blog_articles&lt;/code&gt;&lt;br&gt;
c) &lt;code&gt;git commit -m &amp;#39;new blog on &amp;lt;blog title&amp;gt;&amp;#39;&lt;/code&gt;&lt;br&gt;
d) &lt;code&gt;hub pull-request -b develop&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;and with the right notifications a bash script doing the above could ping the #blog&lt;em&gt;drafts channel.  With a Ruby script I could probably get finer tweaks so that it actually sent  &lt;code&gt;@channel new blog draft &amp;lt;link&amp;gt;&lt;/code&gt; to #blog&lt;/em&gt;drafts.&lt;/p&gt;

&lt;p&gt;So I could clearly do the above analysis on all the sections of the day.  Blog getting too long?  Quick review.  Daily review of Slack and Email?  Can&amp;rsquo;t really avoid, just have to avoid getting sucked in to low priority things.  I try to pull each question or request into my action plan document and order and then take passes through my action plan to work out what order to do things in.  The asynchronous voting is already the subject of ongoing automation.  &lt;/p&gt;

&lt;p&gt;Reviewing the previous days blog and pushing that out requires some more automatable steps e.g.&lt;/p&gt;

&lt;p&gt;a) merge any PRs&lt;br&gt;
b) &lt;code&gt;git pull&lt;/code&gt;&lt;br&gt;
c) read through and make minor corrections (10mins?)&lt;br&gt;
d) &lt;code&gt;git add&lt;/code&gt;&lt;br&gt;
e) &lt;code&gt;git commit -m &amp;#39;tweaks&amp;#39;&lt;/code&gt;&lt;br&gt;
f) &lt;code&gt;git push&lt;/code&gt;&lt;br&gt;
g) &lt;code&gt;rake publish&lt;/code&gt;&lt;br&gt;
h) checking http://nonprofits.agileventures.org/blog/&lt;br&gt;
i) adjusting image sizes, making sure blog looks okay  &lt;/p&gt;

&lt;p&gt;The issue with both the initial blog generation and publishing the previous days draft is that the bulk of the time is not automatable without a serious AI.  I guess the question is whether the surrounding command line cruft is worth automating.  Even if it&amp;rsquo;s not, it could be fun, and possibly beneficial if the automation can make PRs from the command line slightly less work &amp;hellip;&lt;/p&gt;

&lt;p&gt;The Slack rebuild was (hopefully) a one off.  The scrums - I do two a day, and they are capped at 15 mins, but I often end up doing another 15 mins after the scrum - today the first scrum was followed by 15 mins debugging with a Premium Mob member, which was fun and (I think) worth it.  The second scrum 15 min follow on was a catch up with my Co-Founder so pretty important &amp;hellip;  Although scrums can certainly serve to break up flow on a longer more complex piece of work; it&amp;rsquo;s also critical to coordinate with the team, and these Scrums are our welcome mat and showcase.  I am still conflicted about whether they are worth the effort to maintain.  Google Hangouts on Air and our plugin seem stable-ish again after our outage of a couple of weeks back, although I am needing to re-start hangouts occasionally, and the fact that my lower third banner is not saved means I&amp;rsquo;m re-adding that for every scrum and hangout - which burns 30 seconds every time, although it&amp;rsquo;s helped me memorise the AV colour code (#ee7335).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m unclear if the &lt;a href="https://www.hangouttoolbox.com/"&gt;google hangout toolbox&lt;/a&gt; is still being maintained.  I just posted the following to their G+ support group:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The lower third still works for me, but I can&amp;rsquo;t save it - I have to re-enter the details every time.  Is the code for this open source?  Is there someone actively maintaining it?&lt;/p&gt;

&lt;p&gt;Here are some more details - I can set up my lower third like so:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="setting up lower third" src="https://www.dropbox.com/s/nz4gwqb0pbfhfwc/Screenshot%202016-11-23%2010.04.34.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I have the setting to enable auto load and autoload last used lower:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="auto reload settings" src="https://www.dropbox.com/s/8zr12w8e7sf4wtu/Screenshot%202016-11-23%2010.05.34.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;and here&amp;rsquo;s me having reloaded the hangout and the saved presets have gone :-(&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="saved presets missing :-(" src="https://www.dropbox.com/s/24ik2p5qauunua6/Screenshot%202016-11-23%2010.07.36.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any ideas?&lt;/p&gt;

&lt;p&gt;Many thanks in advance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So I can see the names of the developers on the site.  I&amp;rsquo;ll leave that &lt;a href="https://plus.google.com/+SamJoseph/posts/QyAdAzTXPuG"&gt;G+ post&lt;/a&gt; for a couple of days and then maybe reach out to the maintainers.&lt;/p&gt;

&lt;p&gt;Michael wasn&amp;rsquo;t around so I reviewed PRs instead of pairing.  Felt good to get into the details of the new AsyncVoter React client and get to some other outstanding PRs.  PR review is what Premium members get priority on.  I&amp;rsquo;m still not sure if this is the key thing that Premium&amp;rsquo;s want, but reviewing PRs takes a lot of work and time, and I believe it is very beneficial for learning.  Other meetings in the day were one offs and can&amp;rsquo;t really be ESADed.  Other key area for ESADing is the edX and AV emailings.  I think I&amp;rsquo;ve got the Social Media update fairly automated.  It involves reviewing an older blog, tweaking and then pushing to Medium, which automatically pushes to Twitter and Facebook, although with boring &amp;ldquo;I just published&amp;rdquo; text.  I push to LinkedIn manually, but it&amp;rsquo;s the edX and AV emailings that are time consuming.  The edX ones go through mail chimp, but they don&amp;rsquo;t give me enough access to automate them.  For the AV mailings, I really need to look into the Amazon SES service.  I&amp;rsquo;m just finishing a run of mailing all the AV members individually through my Thunderbird client.  I have a couple of scripts to semi-automate this, but I am trying to reach out personally to everyone.&lt;/p&gt;

&lt;p&gt;I do feel a bit like a spammer, but it&amp;rsquo;s a one off, and I&amp;rsquo;m responding individually to every email back, and we&amp;rsquo;ve signed up about ten new premium members as a direct result of these personal mailings over the last two months.  Longer term we need some way of enabling people to opt-in/out of emails.  Lots to do there.  I&amp;rsquo;m going to try profiling a few more days to see if I can find some sweet spots to ESAD, and if you have suggestions about how I can operate more efficiently I&amp;rsquo;m all ears! :-)&lt;/p&gt;

&lt;h3&gt;Related Videos&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OiBuIltBooM"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4rRIwgGasKI"&gt;Solo work on Async Voter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-Sn4r03hNL4"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Levels of Focus</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/22/levels-of-focus/"/>
    <id>http://blog.url.com/2016/11/22/levels-of-focus/</id>
    <published>2016-11-22T00:00:00+00:00</published>
    <updated>2016-11-23T18:31:23+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It was a busy weekend.  That was partly the kids&amp;rsquo; birthday parties and coaching under eights football, but also because of my last Mentive mentoring session and two Premium Plus pairing sessions.  I usually prefer not to work at the weekend, but I really want to make AgileVentures sustainable, and for people who work during the week, it&amp;rsquo;s often convenient to get support from their mentor at the weekend.  The Mentive experience has been interesting to try out GotoMeeting, which is okay, and more powerful than Google Hangouts, but the ability to share a URL with a hangout to anyone, and stream/record live to YouTube, makes me prefer Hangouts.  &lt;/p&gt;

&lt;p&gt;As the Mentive chats have become more abstract the Premium Plus pairing sessions have been very code focused. On Sunday I worked with Adrian through a Cross Origin Resource Sharing issue on AsyncVoter so that the new React client could read data off the &amp;ldquo;&lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;&amp;rdquo; hosted app.  We got a spiky &lt;a href="https://github.com/AgileVentures/AsyncVoter/pull/77"&gt;Work in Progress(WIP) PR&lt;/a&gt; in and I deployed the branch to the drie staging instance so that Adrian could proceed to work on the &lt;a href="https://github.com/AgileVentures/asyncvoter-ui"&gt;React UI&lt;/a&gt;.  We&amp;rsquo;d used the &lt;a href="https://www.npmjs.com/package/cors"&gt;cors package&lt;/a&gt; to ensure that we would accept incoming AJAX requests from all sources for the time being.&lt;/p&gt;

&lt;p&gt;I had a quick break and was then working on a &lt;a href="https://www.hackerrank.com/challenges/find-the-running-median"&gt;running median problem&lt;/a&gt; which involved writing some min and max heaps in Ruby.  Simple sort was deemed too inefficient and we needed a custom data structure to allow fast access to the median.  This was just part of looking at algorithms in general, but I was already thinking about how we could be linking this to useful stats from data-feeds we have on voting and pairing sessions.  We didn&amp;rsquo;t get as far as I would have liked into the analysis portion and we&amp;rsquo;ll hit that next weekend.&lt;/p&gt;

&lt;p&gt;There hadn&amp;rsquo;t been programming or pairing of note either side of the weekend on Friday or Monday, Friday having been taken up with an Agile Projects workshop and then some brainstorming with Michael and Ashley.  There&amp;rsquo;d been sporadic async slack bot hacking, and we got most of the way of pushing a version of LocalSupport onto &lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;. Brainstorming finished up the day as Michael and I digested the new PRs and issue comment from Ashley on the generic &lt;a href="https://github.com/AgileVentures/AgileVentures"&gt;AgileVentures&lt;/a&gt; repo.  Ashley had created some great diagrams, and was pushing us to be thinking in terms of more specific user models and big vision statements:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Strategy, Goals and Impacting Users" src="https://www.dropbox.com/s/7g7m9j5hgnsplgt/Screenshot%202016-11-23%2018.30.52.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;ll be enormous value if the big picture vision of AgileVentures can be communicated effectively in a compelling and visually attractive manner.  I find myself torn between all the small admin tasks that are ever increasing, smoothing off the rough edges on aspects of the paid premium user experience, delivering on our commitments to the premium users and conducting bigger planning and vision generation efforts.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s clear that the onboarding experience is bumpy and could be vastly improved at each stage of our funnel, from becoming aware of AgileVentures, to browsing our website, signing up, joining slack, joining a hangout, participating in a project and starting a project; not to mention signing up for one of the paid plans, and upgrading to get even more professional development support.  Michael and I spent an hour kicking ideas about.  I was reminded of Pavel&amp;rsquo;s point from a couple of years ago about the importance of measuring things&amp;ndash;that if we were going to make changes like having the popups on the site encouraging people to join slack, or join hangouts, then we wanted to know if these were having measurable impacts.  However I keep thinking that some things are no-brainers, but then I&amp;rsquo;m a complete hypocrite.  The whole point of small simple PRs is to curtail the risky assumption that you know how things are going to work.&lt;/p&gt;

&lt;p&gt;At the same time, perhaps I am justifiably cautious about efforts to pull out lots of data, where it&amp;rsquo;s unclear what that data is telling us.  We could have a super active Slack and super active hangouts, but without enough income it doesn&amp;rsquo;t really mean anything, unless sponsors are seeing that activity as incentive.  Either way I need to get the income past a certain threshold soon.  That&amp;rsquo;s not the best place to be coming from, not the best place to be doing decision making.  It feels difficult to devote time to big picture planning that could be spent on, say, making sure that all the different premium plan options were available for upgrade on each user page.   I do want to make it easier for people to onboard and understand what we&amp;rsquo;re doing, and how they can get involved and derive the most possible benefit from the AV experience.  That said, it feels counterproductive to focus on that when there are directly income related things to fix. Can others do it?  Perhaps not without my input. It&amp;rsquo;s so difficult to know.  Will fixing the plan upgrade issue generate more revenue in the short term?  One user encountered a problem related to it, which we fixed through the Stripe interface.  Will others experience it soon?&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re planning our first Premium Mob session on Thursday.  That feels like it might have legs.  If that goes well and generates good energy it could be a powerful incentive for upgrading.  Coming full circle I think it comes back to Eliminate, Simplify, Delegate, Automate.  The mounting admin tasks are not helping me focus on the big picture.  Michael and I started looking at setting up a greeter bot to replace some of my AV slack greeting activities.  It seems on the Slack free tier we can only have one integrated bot, so any greeter bot would have to be merged with the AsyncVoting bot &amp;hellip; ultimately I resolved that the key thing to do today was to profile where I was spending my time and focus the lens of Eliminate, Simplify, Delegate, Automate on it.  I guess I have to measure as well &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YGl5BA6o43Y"&gt;Premium Plus with Adrian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/Mcm_uYE1vFM"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=u-g16rhSBUo"&gt;Bug Hunt on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OudkpuKQ7Aw"&gt;Deploying LocalSupport to drie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kNOigf5jLYI"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uvOFUDRbEmM"&gt;AgileBot Deploy and BrainStorming on WSO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Agile Workshop</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/21/agile-workshop/"/>
    <id>http://blog.url.com/2016/11/21/agile-workshop/</id>
    <published>2016-11-21T00:00:00+00:00</published>
    <updated>2016-11-23T18:23:01+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Friday was mainly consumed with a dry run of an Agile Project management workshop for non-profits and charities.  I&amp;rsquo;ve been working closely with Voluntary Action Harrow Cooperative (VAHC) for the last three years on the &lt;a href="https://www.harrowcn.org.uk"&gt;Harrow Community Network project&lt;/a&gt; which itself uses the &lt;a href="https://github.com/AgileVentures/LocalSupport"&gt;AgileVentures LocalSupport&lt;/a&gt; software&lt;/p&gt;

&lt;p&gt;&lt;img alt="Harrow Community Network Website" src="https://www.dropbox.com/s/j1n566aoa7hregq/Screenshot%202016-11-21%2009.36.51.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Over those three years we&amp;rsquo;ve been using an Agile project management approach to developing the software and coordinating the efforts and contributions of over 30 volunteers from &lt;a href="https://www.harrowcn.org.uk/contributors"&gt;all around the world&lt;/a&gt;.  We&amp;rsquo;ve been following the principles behind the Agile Manifesto:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&lt;/p&gt;

&lt;p&gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&lt;/p&gt;

&lt;p&gt;Working software is the primary measure of progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I meet with VAHC at least once every two weeks to show them the latest deployments to the website and get feedback on any changes, and well as showing them work in progress. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome changing requirements, even late in development. Agile processes harness change for the customer&amp;rsquo;s competitive advantage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every meeting we review the &lt;a href="https://www.pivotaltracker.com/n/projects/742821"&gt;project board on Pivotal Tracker&lt;/a&gt;, with a particular focus on the features in the backlog.  The backlog is maintained with higher priority items towards the top of the backlog.  As requirements change we follow the client&amp;rsquo;s advice about moving things up and down in the backlog, and even move things back to the icebox if they suddenly become of low relevance.  For example the story on &amp;ldquo;&lt;a href="https://www.pivotaltracker.com/story/show/116028767"&gt;being able to override doit vol ops&lt;/a&gt;&amp;rdquo; was top of the backlog at one point, but got moved onto the icebox as circumstances changed.&lt;/p&gt;

&lt;p&gt;Any new suggestions from the client are immediately added to the icebox and go through a voting process to estimate their technical complexity.  Once they are estimated they can be moved onto the backlog with the client&amp;rsquo;s consent and subject to the client&amp;rsquo;s preferences regarding priority.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Business people and developers must work together daily throughout the project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This can be challenging with a distributed team of developers all around the world.  We broadcast the client meetings via YouTube, and run it in a google hangout that developers are encouraged to join.  Any developer can participate in a client meeting, and can communicate with the client via email.  However as project manager I tend to funnel questions from developers through to the client, and bring them up in the client meeting.  Given the part-time volunteer nature of our project it is difficult to support daily interaction between client and developers; and since we are all developers our &amp;ldquo;business people&amp;rdquo; are arguably the client, although we make no strong distinction between devs and non-devs in our distributed team.  Everyone is learning, everyone is participating.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every developer is free to work on what they are interested in.  The client&amp;rsquo;s preferred priorities are expressed through the priority ordering on the backlog, but developers can start any story that takes their interest.  We do strongly encourage all developers to put any unestimated story to a vote (either synchronous in a scrum, or asynchronous in a text vote) before starting work on it; just to help increase awareness that they are interested in working on something.  They don&amp;rsquo;t need to wait for the vote to complete in order to start a spike or some experiments.  However it makes strong sense to let others know what you are thinking about so you can benefit from their thoughts and suggestions.  Even so this is not a hard and fast rule.  The software is open source and anyone can submit a pull request at any time, but getting involved in the voting and estimation process is a great way of staying on top of any information relevant to the task and increases the chance of a smooth merge of code later on, while reducing the chance of duplicated effort.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We agree, but we can&amp;rsquo;t afford to fly all the developers into the same location for this purpose.  Google hangouts gives us a close second to a face to face conversation, and I try to meet with the client in person where possible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;rsquo;ve been maintaining a slow and steady pace for the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Continuous attention to technical excellence and good design enhances agility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All code is submitted to the project via Pull Request for open review.  We encourage everyone to use Google hangouts to pair program online in order to get more immediate ongoing feedback as code is developed, although the logistics of time zones and lives don&amp;rsquo;t always support pairing.  Even with paired code, everything coming into the project is automatically checked for merge conflicts, tests passing, and style/coding guidelines.  Any developer can comment on any pull request, which we try to either close or merge within a week to avoid widely diverging branches.  The ultimate decision for merging rests with myself as project manager, and I try to maintain a match between any code coming in and the domain model that we have developed over the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simplicity&amp;ndash;the art of maximizing the amount of work not done&amp;ndash;is essential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I strongly encourage all developers, whether working on a chore, a bug fix or a feature, to submit the absolute minimum of code.  Only things related the specific ticket being worked on should be in the pull request.  The smaller the code changes in the pull request, the happier I am.  Small pull requests are easier to review, easier to merge, can often be done faster, and provide a more frequent sense of completion and progress for everyone involved.  See something else that needs to be fixed?  Open a refactoring ticket and submit a separate pull request for that.  There are always new folks coming into the project who will love a really simple refactoring ticket to allow them to get started on something where they don&amp;rsquo;t have to generate new tests. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best architectures, requirements, and designs emerge from self-organizing teams.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m a single point of failure in this project, although two or three others have access to all the necessary to continue merging and deploying if I was removed.  Other AgileVentures projects have more self-organising structures where PRs can be merged with the agreement of any 2 or 3 devs.  All structures are subject to revision.  Sensibly the LocalSupport project management structure will evolve and change.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Earlier in the project we had weekly retrospectives, but with few dedicated full timers, these have fallen away.  We&amp;rsquo;ve switched from many synchronous standups to more asynchronous voting in group text channels on Slack. The Agile principles are written around the idea of a full time co-located team, and we have adapted them to a volunteer part-time distributed team.  Our adaptations certainly need ongoing review and adjustment.  It&amp;rsquo;s not yet clear how best to ensure reflection. Tuning and adjustment happens frequently enough.&lt;/p&gt;

&lt;p&gt;Now, getting back to the workshop we dry ran last week; that involved a 90 minute co-located session with a non-technical charity group in which we used the Agile process itself to try to answer the general challenge of better understanding Agile.  I initially presented the Agile Manifesto and talked about related concepts such as scrum, XP and Kanban for a few minutes.  The overall structure, which compressed a two week sprint into 90 minutes was as follows:&lt;/p&gt;

&lt;p&gt;1) Present concept of Agile
2) Generate stories relating to Agile, and how it can be used in non-profits
3) Organise stories by theme, to identify core item and vote on them
4) Form teams and have each team pick a story
5) Teams each work on an individual story, preparing to present their thoughts
6) Each team presents their conclusions
7) Retrospective: each individual looks back on what went well, what could be improved&lt;/p&gt;

&lt;p&gt;The key stories that came out of the 2nd and 3rd stages were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How does Agile handle dramatic shifts and changes? (1.5 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with other non-Agile organisations? (3 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with fluid staffing? (2 points)&lt;/li&gt;
&lt;li&gt;Agile Logistics (how do scrums and standups work) (1 point)&lt;/li&gt;
&lt;li&gt;Is Agile a good fit for non-profits and charities? (3 points)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our three teams of two each chose one of the above and completed the 4th and 5th stages before presenting their thoughts to the whole group.  It all seemed to work pretty well, particularly with a group number of 6 sitting round a large table with the cards organised in front of us.  Everyone said they felt they understood Agile better and there were a lot of productive and interesting discussions.  One participant summed up Agile as an integration of strategy and operations, and I concurred.  Agile is not an absence of planning; it is a commitment to ongoing planning and reflection.  One confusion was that we were using the Agile process itself to understand the Agile process, and it was all rather meta.  A key concern was how would you use it to solve specific problems and implement the solutions?  I proposed that after a session like this, one could do a full day inception event with a team where the story tickets would be actual challenges to the organisation, and the retrospective component would take place 2 weeks later, after the team had done a sprint.&lt;/p&gt;

&lt;p&gt;Anyway, next up we&amp;rsquo;ll be running a full version of this &amp;ldquo;Understanding the Agile Process&amp;rdquo; with frontline charity and non-profit folks in a group of 10-20 people.  Stay tuned to this blog to find out how that goes!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Microservices Question</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/18/microservices-question/"/>
    <id>http://blog.url.com/2016/11/18/microservices-question/</id>
    <published>2016-11-18T00:00:00+00:00</published>
    <updated>2016-11-22T10:12:06+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Michael was off sick and so I didn&amp;rsquo;t get back to WSO coding.  That&amp;rsquo;s one of the things about having a pair partner, they keep you focused on things.  The previous day we&amp;rsquo;d investigated the poor performance on the projects page, which had turned out to be our non-cached checks of code climate stats for projects.  There was lots of other clear up indicated, but the simple drive-by was to remove that functionality for the moment.  Then we wrapped a payment bug that a Premium user had encountered, and got a fix in.  There were a whole series of other refactorings and changes that I wanted to get to, and thought I might hit today, but I was distracted by further developing the AsyncBot and working with our new sponsor &lt;a href="http://drie.co"&gt;drie&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I got the AsyncBot up on &lt;a href="https://github.com/AgileVentures/async_slack_bot"&gt;GitHub&lt;/a&gt; and developed the spike a little further so it would announce updates in the channel the vote had been started in:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;'document the API'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'https://waffle.io/ ... '&lt;/span&gt;
  &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'start new vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;start_channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;!channel&amp;gt; NEW ASYNC VOTE on &amp;lt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'|'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'I received your vote: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s1"&gt;' &amp;lt;@'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;start_channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;!here&amp;gt; ASYNC VOTE UPDATE '&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' on &amp;lt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'|'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ran a couple of votes in the #websiteone channel and another in the #async channel.  I was getting much more of what I wanted as well as some useful feedback on the system:&lt;/p&gt;

&lt;p&gt;&lt;img alt="WSO channel vote" src="https://www.dropbox.com/s/5v6ii9lrpox5pi5/Screenshot%202016-11-18%2009.25.31.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It was clear that when the votes came on thick and fast that the messages were a bit overwhelming; certainly room for some tuning.  Also running two votes in a row, we had confusion about what was being voted on from one user who hadn&amp;rsquo;t quite got caught up with their slack feed.  I have to say it is so nice to work with a small project where you&amp;rsquo;ve written all the code yourself, and you can tweak the interface as you please.  I can also see how without tests the whole thing could become a complete monster.  I also notice that unlike Ruby/RSpec I don&amp;rsquo;t have &amp;ldquo;throwing together a node test rig&amp;rdquo; memorised; I need to do some reps on setting those up so that I can&amp;rsquo;t use lack of familiarity there as an excuse for continuing the spike indefinitely.&lt;/p&gt;

&lt;p&gt;In the background we got the latest version of the AsyncVoter RESTful API running on &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; servers.  It seemed like the failing POST operation was just me not having pushed the right code out, and then getting confused about which endpoints were up and which weren&amp;rsquo;t.  In response I started a vote on documenting the AsyncVoter API, and Arreche got started on that.  It occurred to me that we might have moved faster by focusing on the Slack interface initially, but it is good to have a RESTful API up to try and avoid the worst spiky impulses.  It does feel that we&amp;rsquo;ve spent a while building something that could be generated in minutes by a Rails scaffold, or possibly even with Sails or a MEAN scaffolding operation.  That said, this low level work is great for everyone to appreciate the core of a RESTful API.&lt;/p&gt;

&lt;p&gt;The question is now about architecture going forward and where the slack bot gets hosted.  I paired with Ben from &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; and looked at his analysis of our Harrow Community Network logs where he tried to work out how frequently the &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; apps should be sleeping in order to give us the best performance.  We ended up identifying the different needs of the final deployed app versus the developer experience while creating it.  It also seemed like it might be problematic to host the slack bot on the &amp;ldquo;&lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;&amp;rdquo; offering since it uses an &amp;ldquo;always-on&amp;rdquo; web socket and it&amp;rsquo;s not clear whether traffic from slack on the socket will be sufficient to wake up the instance.  I started to think about whether to just host the bot on AWS.  We host the auto graders on AWS and I&amp;rsquo;m pretty familiar with the interface &amp;hellip;&lt;/p&gt;

&lt;p&gt;In principle the slack bot could talk directly to the MongoDB in order to persist the details of the vote.  This would mean that it wouldn&amp;rsquo;t be easy to interrogate the bot about the vote other than outside the slack interface.  It would certainly be nice to have a web dashboard of all the ongoing votes and get statistics and all.  I guess we have the question of whether the micro services architecture gives us a short term win here?  By making the RESTful API and starting work on two different clients we&amp;rsquo;ve gone for a more distributed architecture that might make the development of any individual client slower, but will give us more flexibility in the long run?&lt;/p&gt;

&lt;p&gt;In the background I&amp;rsquo;m talking to possible new sponsors of AgileVentures and getting ready for our first mob programming sessions on Avdi Grimm&amp;rsquo;s &amp;ldquo;Confident Ruby&amp;rdquo; for those who&amp;rsquo;ve upgraded their Premium memberships.   I think we need the asynchronous voting to keep the individual projects ticking over, but we need more money coming in from sponsors and premiums if we&amp;rsquo;re going to be able to continue to offering all our services, both free and premium.  There&amp;rsquo;s a new feeling of momentum to the community, but as I was saying the other day, it&amp;rsquo;s not just a question of sitting around and waiting for the growth.  Each bit of growth still has to be fought for at this stage, although perhaps the battle is getting easier - until we start coasting after we achieve that fabled critical mass? :-)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still not sure on the microservices question.  Will breaking things up help us avoid a monolith, and follow the single responsibility principle of having one app for each separate function?  It&amp;rsquo;s worked out well for Amazon, but then they&amp;rsquo;re at a completely different scale.  Right now I feel like I&amp;rsquo;m maintaining three different monoliths (LocalSupport, WebSiteOne and AutoGraders) and it always feels precarious when adding a new element.  I guess it&amp;rsquo;s ant colonies versus large vertebrates; single celled versus multi-cellular organisms.  There are pros and cons to each degree of organisational coupling.  As Kent Beck would say, it depends &amp;hellip; :-) &lt;/p&gt;

&lt;h3&gt;Related Video:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lCm8Ht7vvp8"&gt;Pairing on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_fogY2nGq2Q"&gt;Previous days &amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MW6JuYJSEQA"&gt;Pairing on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=soSqEHPT3tU"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SoILIjeb02E"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Semi Automatic Asynchronous Planning Poker Bot</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/17/semi-automatic/"/>
    <id>http://blog.url.com/2016/11/17/semi-automatic/</id>
    <published>2016-11-17T00:00:00+00:00</published>
    <updated>2016-11-18T12:13:46+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The AsyncVoter project has been humming recently.  A lot of people interested in coding in Node, putting a React front end together and so on.  They say that JavaScript is hot.  We&amp;rsquo;ve also had new folks come in and start to understand some of the Agile development approach, self-organise to get a series of basic RESTful endpoints in place.  All great, but I was starting to worry that our little RESTful MVP was not really making enough contact with end users.  I was getting antsy that we needed to start automating some of the tedious and error-prone parts of running asynchronous votes manually in project slack channels.&lt;/p&gt;

&lt;p&gt;I felt that Slack integration was key.  We had another vote on refactoring test support code so couldn&amp;rsquo;t start another vote on Slack integration if I was to follow my own guidelines of no voting on multiple stories in parallel.  I settled for moving the Slack integration ticket to the top of the backlog and searching for integration mechanisms.  Several of our systems ping messages to Slack, but I wanted more.  Custom slash commands for Slack looked like they might work, but they had custom payloads that our RESTful endpoint wasn&amp;rsquo;t set up to process.  I didn&amp;rsquo;t like the idea of customising endpoint specifically for Slack, since it would be nice to support other clients as well.  I also wanted to be able to have a personal bot that our community members could interact with.  I went ahead and made a &lt;a href="https://api.slack.com/bot-users"&gt;custom bot integration&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img alt="AsyncVotingBot integration" src="https://www.dropbox.com/s/wopizsow3ortdbu/Screenshot%202016-11-17%2009.17.40.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to get put off making custom commands and integration in Slack when they paste the &amp;ldquo;Your team has reached the integration limit&amp;rdquo; all over the place.  However this doesn&amp;rsquo;t mean you can&amp;rsquo;t add more configurations on the integrations you already have, including slash commands and bots.  One thing that accelerated my progress here was &lt;a href="https://howdy.ai/botkit/"&gt;botkit&lt;/a&gt;, which allowed me to avoid diving into Slack&amp;rsquo;s real time messaging API and just get up and started super fast.  Ironically, as I put the bot together Arreche found a &lt;a href="https://github.com/Sergej-Popov/hubot-planning-poker"&gt;Planning Poker Plugin&lt;/a&gt; for hubot and was getting that set up in another channel.  There are no new things under the sun!  &lt;/p&gt;

&lt;p&gt;Just writing this blog I did a search for &amp;ldquo;slack planning poker&amp;rdquo; and found a number of things that would have been good to review and check earlier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https://tangocode.com/2015/12/scrum-planning-poker-for-slack-part-1/&lt;/li&gt;
&lt;li&gt;https://github.com/apheleia/plan-b-ot&lt;/li&gt;
&lt;li&gt;https://github.com/nateyolles/slack-pokerbot&lt;/li&gt;
&lt;li&gt;https://github.com/paulodiovani/planning-poker-slack&lt;/li&gt;
&lt;li&gt;https://www.scrumbot.co/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although I think most of these are designed for synchronous operation, i.e. assuming that the team will all be assembled in the channel at the same time.  What I&amp;rsquo;m really after is something that can maintain open votes on a number of channels and provide a mechanism for people to check what they need to vote on, and have the bot proactively prompt the channel to ensure that votes don&amp;rsquo;t get left hanging.&lt;/p&gt;

&lt;p&gt;I went ahead and had fun creating a bot and running a semi-automated asynchronous vote in the #async_voter channel:&lt;/p&gt;

&lt;p&gt;&lt;img alt="async bot announces" src="https://www.dropbox.com/s/j2vu3nwh53yt1hp/Screenshot%202016-11-17%2009.28.26.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Each team member messaged the bot independently like so:&lt;/p&gt;

&lt;p&gt;&lt;img alt="me messaging the bot" src="https://www.dropbox.com/s/obn0y3xphjn85pg/Screenshot%202016-11-17%2009.29.38.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;and then I prompted the bot to display the result:&lt;/p&gt;

&lt;p&gt;&lt;img alt="async bot results" src="https://www.dropbox.com/s/4s2pjly2u2emsaf/Screenshot%202016-11-17%2009.28.58.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the complete code for the bot:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Botkit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'botkit'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Botkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slackbot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;SLACK_BOT_TOKEN&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;startRTM&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;votes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'start vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;!channel&amp;gt; NEW ASYNC VOTE on "Slack Integration" https://github.com/AgileVentures/AsyncVoter/issues/12  Please DM me with: `vote 1` (Simple), `vote 2` (Medium) or `vote 3` (Hard) - Discussion in ticket or here as you prefer. :slightly_smiling_face:'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'I received your vote: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s1"&gt;' &amp;lt;@'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'result'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'votes so far: \n\n'&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;@'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; voted: '&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that I hard coded the ticket I wanted the vote on and I ran locally without any persistence, so if my code or computer crashed then state would be lost, AND the bot needed to be prompted to both start &amp;amp; finish the vote.  We could wail and gnash our teeth and say that we need all those features sorted before we could push the bot live, but by eschewing them I was able to run a proof of concept of a successful vote in a channel, and I actually saved myself having to manage all the DMs I get during a manual vote.  You can say, oh, it&amp;rsquo;s obvious that it would all work, but I don&amp;rsquo;t trust computers to do what I think they&amp;rsquo;ll do.  My mental model of them is so often faulty.&lt;/p&gt;

&lt;p&gt;I also spiked this without tests.  I did manually test the code in a private channel before unleashing it on #async_voter, but I think this is a situation to spike, to get a tracer bullet in to see the round trip.   Of course the danger here is to get drunk with power and keep building on top of this untested code until it really is a total mess and impossible to change without breaking something.  We&amp;rsquo;ve got a nice tested RESTful core ready to start storing the data persistently.  I can run a few more test votes on other channels, and gradually refine the look and feel of the bot, ensuring along the way that it is having the positive effect on the projects and community that I am hoping for.&lt;/p&gt;

&lt;p&gt;I think this is the core of the Agile process.  Apart from remembering to reflect on your process frequently, it&amp;rsquo;s getting some sort of working system in front of the end users as often as possible.  I&amp;rsquo;m also a big fan of this semi-automated approach.  I still had to intervene to stop and start the vote, but it saved me some time compared to a full manual run.  Having confirmed the partial utility of the system I can cautiously automate more and more.  What I really need to add next is to have the bot update the channel where the vote started when someone makes a vote.  Let&amp;rsquo;s see if I can add a little of that today &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
