<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-03-24T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Conflicted</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/24/conflicted/"/>
    <id>http://blog.url.com/2017/03/24/conflicted/</id>
    <published>2017-03-24T00:00:00+00:00</published>
    <updated>2017-05-03T21:40:59+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="conflicted" src="/images/conflicted.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;What a week!  So many developments and me so internally conflicted.  Let me summarise some of the developments:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The UK Health Service (NHS) awards the AgileVentures charity a small grant to develop, host and moderate a &amp;ldquo;Social Prescribing&amp;rdquo; wiki&lt;/li&gt;
&lt;li&gt;I land a medium sized private closed-source contract for an educational site through my company NeuroGrid&lt;/li&gt;
&lt;li&gt;edX gives us the all clear to start another run of the MOOC in April&lt;/li&gt;
&lt;li&gt;With some success I used my last two blogging sessions to grapple with some sticky issues on the LocalSupport codebase&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So having the UK&amp;rsquo;s NHS as a client of the AgileVentures charity could be a big step forward.  It&amp;rsquo;s a small grant and I&amp;rsquo;m going into town today to get more details, but combine it with the small grant from WikiMedia EDU and we start to look like a respectable organisation that should be taken seriously :-)  I should be overjoyed, but I find myself conflicted because while it&amp;rsquo;s great news, I need to take better paying gigs now to pay the bills.  To that end, landing this medium-sized closed source contract is another fantastic breakthrough.  It&amp;rsquo;s a really interesting project, but the closed-source part of it makes me feel crestfallen.&lt;/p&gt;

&lt;p&gt;I just love not having to be secretive about things.  I love the potential for everyone learning when we do all our coding out in the open.  Of course when people are putting money on the line for a business proposition they are not incentivized to share - they want to minimise the chance that others can capitalize on their breakthroughs.  And sometimes, at least superficially, closed-source is needed to close the deal, so to speak.  I feel crestfallen because I&amp;rsquo;d prefer to have 100% of my time spent on open-source code, open-access pairing with the AgileVentures community.  The new private project won&amp;rsquo;t stop that completely, but it&amp;rsquo;ll probably take up 50% of my time for a few months.  Of course that may be just what the community needs, me stepping back a bit in order to allow other community members to take the lead.  And based on my personality I know I&amp;rsquo;d carry on doing some things exactly the same way till I drove myself into the ground, so it&amp;rsquo;s good to mix things up a bit.&lt;/p&gt;

&lt;p&gt;In parallel I&amp;rsquo;m caught slightly off guard by the MOOC being able to go live.  The pressure is on me to come up with start dates and my quandry at the moment is working out if/how we run the TA training course in advance of it.  Running the MOOC takes me away from what I love the most, which is just coding and pairing, and we still don&amp;rsquo;t have a great scalable framework for everyone doing that through the MOOC, or even via AgileVentures.  I managed to force myself to focus on unblocking some issues on the LocalSupport project this week by blogging about them, but I haven&amp;rsquo;t really wrapped up other jobs that I&amp;rsquo;m only part way through on WebsiteOne, AsyncVoter and Redeemify.  Managing too many projects? Me? Argh, we need some mechanism to scaffold folks into project management roles or something &amp;hellip;&lt;/p&gt;

&lt;p&gt;Could the combination of ongoing work by the marketing team and the start up of the MOOC take AgileVentures Premium subscriptions to the next level? At least I&amp;rsquo;m not going to be completely distracted by a new full time job.  I&amp;rsquo;m also doing remote pairing on toy-kata and other folks&amp;rsquo; personal projects just to mix things up, which is fun, but doesn&amp;rsquo;t move forward the devops blocks on our Agile projects for non-profits.  I just wish we had a seemless framework in place to let folks pair online.  Google have split Hangouts into separate chat and meetup which seems insanity to me in terms of the gamified pairing experience I keep imagining.  Of course Google has their eye on other things.  Maybe once I&amp;rsquo;ve finished this private project we can do a design sprint on how to build (and fund) such a thing &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://youtu.be/QqMTSqux9Gs"&gt;Pairing on Tennis Kata&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Pull Request Feedback by Blog</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/23/pullrequest-feedback-by-blog/"/>
    <id>http://blog.url.com/2017/03/23/pullrequest-feedback-by-blog/</id>
    <published>2017-03-23T00:00:00+00:00</published>
    <updated>2017-05-02T21:38:27+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="feedback" src="/images/feedback2.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So in the blogs over the last two days I managed to get to the bottom of the problems on one LocalSupport pull request from a Premium member (Zmago).  It&amp;rsquo;s clear from that experience that I&amp;rsquo;ve got to adjust the develop branch so that VCR/PuffingBilly caches are all up to date and correct, or no other developers are going to get a correct read on what&amp;rsquo;s going on with network connections.  I&amp;rsquo;ve also got another pull request on a complex three point feature, that I need to spend some concentrated review time on.&lt;/p&gt;

&lt;p&gt;Maybe I should have been opening another PR to fix up precisely that issue but I started by pulling down Marouen&amp;rsquo;s &amp;ldquo;Post Volunteer Opportunities to DoIt&amp;rdquo; branch locally and re-running it with the caches in place - I opened a PR on that basis - but it went to my old tansaku fork. I really need to disconnect that.&lt;/p&gt;

&lt;p&gt;Then I got down to reviewing Marouen&amp;rsquo;s PR, file by file, using the &amp;ldquo;compare with develop branch&amp;rdquo; feature in RubyMine, which is maybe a funny way to review, but well - start at the beginning.  I made the following notes as I worked through:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;doit&lt;em&gt;volunteer&lt;/em&gt;ops.js file being loaded on every page&lt;/li&gt;
&lt;li&gt;doit&lt;em&gt;volunteer&lt;/em&gt;ops.js hits local &lt;code&gt;/doit_organisations&lt;/code&gt; end point but does nothing with result?&lt;/li&gt;
&lt;li&gt;bootstrap datepicker being incorporated&lt;/li&gt;
&lt;li&gt;DoitOrganisationsController providing us local? endpoint to new service &lt;code&gt;Doit::GetManagedOrganisations.call&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;new DoitVolunteerOpsController to handle creation of new op on DoIt&lt;/li&gt;
&lt;li&gt;VolunteerOpsController has check for whether to display publish button (could be in helper or separate method)&lt;/li&gt;
&lt;li&gt;long running job PostToDoitJob&lt;/li&gt;
&lt;li&gt;new model DoitTrace to store DoIt publication status (VolunteerOp has_one) (in db)&lt;/li&gt;
&lt;li&gt;new model DoitVolunteerOp to store more data about doit op? (not in db - stored temporarily)&lt;/li&gt;
&lt;li&gt;Doit::PostToDoit service to do posting&lt;/li&gt;
&lt;li&gt;dropdown_list partial to allow for selection of doit orgs &amp;hellip;&lt;/li&gt;
&lt;li&gt;doit_orgs index.js.erb - not sure how this fits in&lt;/li&gt;
&lt;li&gt;new form for creating DoitVolunteerOps&lt;/li&gt;
&lt;li&gt;volunteer ops show page broken up into more partials&lt;/li&gt;
&lt;li&gt;sucker punch async job handling added&lt;/li&gt;
&lt;li&gt;doit_volunteer ops nested in volop URL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Marouen had a good summary in his PR description:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;add new model for tracing published vol ops to Doit&lt;/li&gt;
&lt;li&gt;add 2 services to interact with Doit API&lt;/li&gt;
&lt;li&gt;add form object to manage posting to Doit&lt;/li&gt;
&lt;li&gt;implement active&lt;em&gt;job with sucker&lt;/em&gt;punch as backend to avoid extra cost from Heroku&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but it took me going through the code, making my own notes, to really work out what was going on.  Then I ran the system locally to review how the UI looked:&lt;/p&gt;

&lt;p&gt;&lt;img alt="submitting a DoIt Volop" src="https://www.dropbox.com/s/90viie9yi9r7knu/Screenshot%202017-03-23%2014.20.56.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It was great to see a complete solution from Marouen, but we hadn&amp;rsquo;t done a UI mockup of how this should all work in advance.  Marouen was pushing up the code and driving from tests, but I hadn&amp;rsquo;t given him wireframes, which should have been the first step.  I had just assumed that publishing a doit opportunity would be done through the existing volunteer op form with a checkbox.  A checkbox that when checked might reveal the other possible fields. Zmago had done something like that in the past, but of course Marouen hadn&amp;rsquo;t necessarily seen that.&lt;/p&gt;

&lt;p&gt;I notice that we&amp;rsquo;ve lost some of the layout on the forms, presumably as a consequence of the bootstrap upgrade.  Gah!  I think the user experience would probably make more sense if we just had a single form.  I&amp;rsquo;m thinking about a user wanting to update the description at the point that they are published to DoIt:&lt;/p&gt;

&lt;p&gt;&lt;img alt="existing form" src="https://www.dropbox.com/s/g9rj5plfli4zz2o/Screenshot%202017-03-23%2014.28.05.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I made this scrappy mockup to show Marouen what I mean:&lt;/p&gt;

&lt;p&gt;&lt;img alt="mockup for merging two forms" src="https://www.dropbox.com/s/9a02yw28ypm7qte/Screenshot%202017-03-23%2018.24.47.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I guess I should get input from the client on this, but my intuition is that this will be simpler in terms of our URLs and the workflow for the end user.  The risk is that I&amp;rsquo;m pushing for changes that will just exhaust Marouen.  The buck stops with me here of course - I should have ensured we provided a mockup earlier, or made sure to check out the PR earlier.  So many PRs, so little time &amp;hellip;&lt;/p&gt;

&lt;p&gt;p.s. we won the nhs-wiki contract!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Debugging by Blog</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/22/debugging-by-blog/"/>
    <id>http://blog.url.com/2017/03/22/debugging-by-blog/</id>
    <published>2017-03-22T00:00:00+00:00</published>
    <updated>2017-04-27T21:51:22+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="debugging" src="/images/debugging.png" /&gt;&lt;/p&gt;

&lt;p&gt;Right, on to part 2 of &amp;ldquo;debugging by blog&amp;rdquo;, my attempt to force myself to work through code blockers while debugging.  Currently it&amp;rsquo;s LocalSupport, where we&amp;rsquo;ve had a weird CI failure that wasn&amp;rsquo;t replicated locally for myself or Zmago on our respective machines.  As I poked at it yesterday while &amp;ldquo;blog debugging&amp;rdquo; I found that the cached fixture files for VCR and PuffingBilly had been added to .gitignore.  This meant that the CI was hitting the 3rd party endpoints such as Google, Do-It, ReachSkills etc. as part of our CI test runs.  I can see why those folders would get added to .gitignore.  Whenever there is some change in the outgoing network connections from our code, those files will change.  Developers will see all these changes in their &lt;code&gt;git status&lt;/code&gt; checks and not think them worth checking in.  They may even fully understand that they are creating a network sandbox around our code, but just not want to deal with the hassle of them.&lt;/p&gt;

&lt;p&gt;The danger of not checking them in is that when developing a new feature, the cached network responses will be saved on a local developers machine, and then subsequent code changes may not necessarily produce the same outputs if the system was actively connected to the network.  I suspect this is what has happened with Zmago&amp;rsquo;s pull request.  Now that I removed those folders from the .gitignore file and reset the VCR/PuffingBilly fixture caches I am able to replicate the error locally.  Here is the error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ cucumber features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
[Coveralls] Using SimpleCov's 'rails' settings.
[DEPRECATION] `require 'billy/cucumber'` is deprecated. Please use `require 'billy/capybara/cucumber'` instead.
Using the default profile...
@vcr @javascript @billy
Feature: Reachskills volunteer opportunities
  As a member of the public
  So that I can see where organisations with volunteer opportunities are located
  I would like to see a map of reachskills volunteer opportunities

  Background:                                                          # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:7
    Given that the doit_volunteer_opportunities flag is enabled        # features/step_definitions/volunteer_op_steps.rb:60
    Given that the reachskills_volunteer_opportunities flag is enabled # features/step_definitions/volunteer_op_steps.rb:60
    And I run the import reachskills service                           # features/step_definitions/volunteer_op_steps.rb:35
    And cookies are approved                                           # features/step_definitions/authentication_steps.rb:98

  Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page                        # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
    Given I visit the volunteer opportunities page                                                                            # features/step_definitions/navigation_steps.rb:49
      #    And wait for 3 seconds
    Then the index should contain:                                                                                            # features/step_definitions/basic_steps.rb:521
      | Fundraising Volunteer | The volunteer will be required to work with the fundraising consultant research trusts and corporate grant making foundations appropriate to the ... | Chalkhill Community Centre |
      expected to find text "Fundraising Volunteer" in "Search Text &amp;lt;snip&amp;gt; ..." (RSpec::Expectations::ExpectationNotMetError)
      ./features/step_definitions/basic_steps.rb:525:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/basic_steps.rb:524:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/basic_steps.rb:523:in `each'
      ./features/step_definitions/basic_steps.rb:523:in `/^the index should( not)? contain:$/'
      features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:35:in `Then the index should contain:'
    Then I should see a link to "Chalkhill Community Centre" page "https://reachskills.org.uk/org/chalkhill-community-centre" # features/step_definitions/volunteer_op_steps.rb:80

Failing Scenarios:
cucumber features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32 # Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page

1 scenario (1 failed)
7 steps (1 failed, 1 skipped, 5 passed)
0m4.523s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem here is that this test is relying on some data from a ReachSkills opportunity that is no longer on the ReachSkills site.  The test passes if I update the details on the volunteer opportunity that is being checked for in the test.  Now the critical thing is to commit the relevant VCR files into git in along with the test and everything should pass on CI.  Irritatingly, failing test runs and runs of tests on other branches can generate a lot of noise in the VCR/PuffingBilly caches, so I use the following strategy to get ready for a commit:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ rm -rf features/req_cache
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ rm -rf features/vcr_cassettes
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ git checkout features/req_cache
[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ git checkout features/vcr_cassettes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Although it does get more complicated than that if some files have already been added or committed.  Then I run the working tests to generate the VCR and PuffingBilly cache files which show up in git status like so:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/LocalSupport (133663043_add_reachskills_vol_ops)]$ 
→ gst
On branch 133663043_add_reachskills_vol_ops
Your branch is up-to-date with 'zmago/133663043_add_reachskills_vol_ops'.
Changes to be committed:
  (use "git reset HEAD &amp;lt;file&amp;gt;..." to unstage)

    modified:   .gitignore

Changes not staged for commit:
  (use "git add &amp;lt;file&amp;gt;..." to update what will be committed)
  (use "git checkout -- &amp;lt;file&amp;gt;..." to discard changes in working directory)

    modified:   db/schema.rb
    modified:   features/volunteer_opportunities/reachskills_volunteer_opportunities.feature

Untracked files:
  (use "git add &amp;lt;file&amp;gt;..." to include in what will be committed)

    features/req_cache/get_maps.google.com_003bbc256d1363a112f914cfb75db8bfd1ba9186.yml
    features/req_cache/get_maps.google.com_4907fe14430b7875f162d6a087ab9fe810cef4c4.yml
    features/req_cache/get_maps.google.com_4b140e4c1e7dd61c9ed03042a6ea3173b0f93c21.yml
    features/req_cache/get_maps.google.com_59e27d9935cf723e2f772afbbb6222428b8f7303.yml
    features/req_cache/get_maps.google.com_903f013d4d1032501baea6f534b38e924321b4b6.yml
    features/req_cache/get_maps.google.com_9bb449f46f323b9bb6bf3ffb8d4e3d1f4c0bdb9b.yml
    features/req_cache/get_maps.google.com_b10b2089367dc41afe11f20775ff8cd4aad2f31e.yml
    features/req_cache/get_maps.google.com_b43294d3c3efeaa9c1138646be862df98e08a75a.yml
    features/req_cache/get_maps.google.com_d02253d8c9679439fe590dae8bf9b93cadefe83c.yml
    features/req_cache/get_maps.googleapis.com_f0a259f6b2f5f73b6d54fa224b954d14213b7bc0.yml
    features/req_cache/get_maps.gstatic.com_7b3f3d37460a085af155862dc94328ad3916985d.yml
    features/vcr_cassettes/Reachskills_volunteer_opportunities/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which I can now add, and things should pass reliably on CI.  So my original diagnosis of a JavaScript timing issue was incorrect.  VCR/PuffingBilly are powerful tools, but it seems rather easy for developers of all skills levels to impale themselves on them.  I&amp;rsquo;m not sure what the best way forward is.  It reminds me of Donald Norman&amp;rsquo;s &amp;ldquo;The Design of Everyday Things&amp;rdquo; in which he points out how an incorrect mental model of something can make its use terribly problematic.  His example is from a fridge thermostat, but I can see exactly the same pattern here.&lt;/p&gt;

&lt;p&gt;The real difficulty in some ways is the interaction between the caching of network interaction and the git version management.  We&amp;rsquo;ve got some similar issues on WebSiteOne.  More blogs to come on this I think.  I also wanted to get onto outstanding questions on other PRs from Marouen and Olena, but that will need to wait till tomorrow as it looks like the MOOC might be cranking up to go live and so I&amp;rsquo;m needing to get alot of things in gear very quickly.  At least blogging about the debugging process is helping ensure that I actually get some sticky things unblocked, rather than just navel gazing about why all socio-technical processes seem so hard :-)&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Long Running PRs</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/21/long-running-pull-requests/"/>
    <id>http://blog.url.com/2017/03/21/long-running-pull-requests/</id>
    <published>2017-03-21T00:00:00+00:00</published>
    <updated>2017-04-26T21:33:57+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="security" src="/images/long_running.JPG" /&gt;&lt;/p&gt;

&lt;p&gt;So the SSL encryption is all now working on &lt;a href="https://www.agileventures.org/"&gt;AgileVenture&amp;rsquo;s production site&lt;/a&gt;.  The slight login oddities on staging appear to have been just staging oddities.  I think maybe we could address them by re-cloning the production database to staging.  That would require upgrading the database plan there, but I guess we can afford that extra $9 a month to make sure our staging environment is closer to production.  Having staging replicate production as closely as possible is generally a good idea to increase the chances that production bugs can be solved on staging.  I took a risk yesterday pushing out to production, and it could have blown up in my face.  I followed a hunch and it seemed to work out.  I probably should pay fate back by doing that upgrade.&lt;/p&gt;

&lt;p&gt;Anyhow, so that means I completed 1 of the 4 story points that I committed to in last week&amp;rsquo;s WebSiteOne sprint.  I haven&amp;rsquo;t taken on any new points for this next sprint, and will see if I can close the others out this week.  We had the LocalSupport kick-off meeting yesterday and that&amp;rsquo;s not quite following the same format as the WebSiteOne kick-off where the stakeholders bring tickets for discussion and voting.  The big difference is that any AgileVentures community member is a client for WebSiteOne.  For LocalSupport we have a specific charity client who I&amp;rsquo;m now meeting every two weeks.  Maybe both sprints would be better off being two weeks long rather than a single week.  Although, with WebSiteOne I&amp;rsquo;m still happy voting every week, even if we don&amp;rsquo;t start on tickets.  That said, it seems like it&amp;rsquo;s important to work on tickets soon after you vote on them, otherwise the voting goes stale and it becomes wasted effort.&lt;/p&gt;

&lt;p&gt;In the LocalSupport kick-off yesterday there were both new and old PRs that needed to be dealt with.  Rather than voting on new tickets, I suggested we focus on getting them sorted.  That gives me an idea for a model for the kick-off meetings going forward&amp;ndash;that they could alternate between being voting sessions and board/PR clearing sessions.  I think the danger with fortnightly or bi-weekly meetings is that it&amp;rsquo;s confusing to remember whether the meeting is on or not, and it&amp;rsquo;s simpler and you get better attendance if the meeting is weekly.  Maybe the activity of the meeting can be determined as a function of the state of the project board.&lt;/p&gt;

&lt;p&gt;Anyhow, the state of the LocalSupport project was with five open pull-requests, three of which were long-running:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/427"&gt;Post our volunteer ops to Do-it via API key (Marouen)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/421"&gt;Incorporate reachskills volunteer opportunities (Zmago)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/LocalSupport/pull/424"&gt;Added unit test and a placeholder for integrated test (Marcelo)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last was a learning activity on a refactoring ticket from Marcelo, and I got his permission to close it and that we would work on it again when he was free.  Marcelo is busy with his day job, and that&amp;rsquo;s totally fair enough.  It&amp;rsquo;s a shame as I think there is a kind of critical mass for learning from pull-requests.  If the gaps between working on something are too great you end up forgeting pieces of the things you were focusing on and the results of earlier effort are lost.  Zmago&amp;rsquo;s PR, related to ReachSkills integration, is stuck with a failure that&amp;rsquo;s only happening on CI, and Marouen had just finished a big PR for posting volunteer opportunities to the DoIt API.  Marouen needs input and I know it will take me a run up to get into it and give good feedback.  Zmago&amp;rsquo;s CI-only (JavaScript timing?) failure is one of the frustrating long debug cycle issues that&amp;rsquo;s a real pain to fix.  I spent the first part of the kick-off outlining these PRs to Mahesh, Sigu, Cess and Stella.  As relative newcomers to the project it would be difficult for these four to move us forward on the outstanding PRs, but I encouraged them to take a look over and comment if they could.  Every little helps :-)&lt;/p&gt;

&lt;p&gt;Then the second half of the meeting we focused on the CodeClimate issues that were being flagged up on Cess and Stella&amp;rsquo;s pull-requests.  They were mainly class length and method length issues.  Reducing class size on the relevant controller would involve pulling out a service; a refactoring that I judged too complicated to get into right there.  I focused on the class length issue and how we could refactor out new methods, and even use before/after actions in the Rails controller.  We wrapped up looking at Mahesh&amp;rsquo;s proposal to add binding.pry support.  I wasn&amp;rsquo;t convinced that binding.pry let us do anything we couldn&amp;rsquo;t do with byebug, but Sigu pointed out that there was no harm in having both, and letting devs choose whichever they prefer.  I agreed, but I wonder if I&amp;rsquo;d quashed Mahesh&amp;rsquo;s enthusiasm.  That&amp;rsquo;s the old Sam coming back.  I hear statements like &amp;ldquo;binding.pry let&amp;rsquo;s us step into methods and has code completion&amp;rdquo;, and I know I can do both these things in byebug, so the academic in me wants to show that.  However showing that can be considered a block.  Perhaps better to just to express unalloyed enthusiasm for binding.pry to encourage Mahesh to submit a PR?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got another cold and I wasn&amp;rsquo;t on the ball yesterday.  I don&amp;rsquo;t know what the right thing is to do.  My natural flow of mind is just to say what I think, and if something seems unnecessary I say so, but that can quash people&amp;rsquo;s enthusiasm.  Does it follow that learners need to be working on toy projects where it doesn&amp;rsquo;t matter what code they add and an explosion of complexity is a learning experience that doesn&amp;rsquo;t have any negative impact on the end-user?  At some point folks do need to graduate beyond toy projects if they want to increase the chances of building things of value to others; balancing the different needs of the different project stakeholders.  In this case I think I should have just expressed enthusiasm for the &amp;ldquo;offer&amp;rdquo;.  It wasn&amp;rsquo;t worth making the point about byebug works.  It could have been an opportunity for me to learn more about binding.pry.  Instead of demo-ing byebug features, I could have had Mahesh work me through the binding.pry install locally and I could have started the PR with him in collaboration.  Oh well, we live and learn :-)&lt;/p&gt;

&lt;p&gt;But still, the critical thing that I should have been directing my attention to was Zmago and Marouen&amp;rsquo;s pull-requests.  Zmago is a Premium Mob member and Marouen is a Premium mentor.  I&amp;rsquo;m blogging about this all partly to force myself to analyze the issues more deeply. Zmago had tried adding some time-outs to his CI failing acceptance tests, but now the CI seemed to be stuck on an unrelated install error.  Zmago had previously given me access to his forked repo, so I thought I&amp;rsquo;d try to roll back to the previous error and take a closer look.  In the process of doing that I realised I could grab the previous error from the older Travis logs.  What we were getting is this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt; Scenario: See a list of current reachskills volunteer opportunities with a link to organisation page                        # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
    Given I visit the volunteer opportunities page                                                                            # features/step_definitions/navigation_steps.rb:49
    Then the index should contain:                                                                                            # features/step_definitions/basic_steps.rb:521
      | Fundraising Volunteer | The volunteer will be required to work with the fundraising consultant research trusts and corporate grant making foundations appropriate to the ... | Chalkhill Community Centre |
      expected to find text "Fundraising Volunteer" in " ...

cucumber -p first_try features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:32
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Google Geocoding API error: over query limit.
  Scenario: Reachskills volunteer opportunities are opened in a new page # features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:42
    Given I visit the volunteer opportunities page                       # features/step_definitions/navigation_steps.rb:49
    Then I should open "Fundraising Volunteer" in a new window           # features/step_definitions/volunteer_op_steps.rb:98
      Unable to find link "Fundraising Volunteer" (Capybara::ElementNotFound) ...

cucumber -p first_try features/volunteer_opportunities/reachskills_volunteer_opportunities.feature:42      

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I noticed a &amp;ldquo;Google Geocoding API error: over query limit.&amp;rdquo; message - I wondered what was happening with the cache.  The billy and vcr caches should be preventing the CI tests from hitting the real Google server. That lead me to notice that Piotr added the vcr and puffing billy caches to the .gitignore file last November. &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;features/vcr_cassettes
features/req_cache
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Probably as part of the bootstrap upgrade.  It&amp;rsquo;s understandable - those changing caches make PRs and checking git status a pain.  I hadn&amp;rsquo;t noticed that change.  Could that be a factor here?  A red herring - even with the timeout&amp;rsquo;s removed, Zmago&amp;rsquo;s CI was still stuck on installing a gem &amp;hellip;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Installing eventmachine_httpserver 0.2.1 with native extensions
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;was that some other weird timeout unrelated?  CI was passing for Stella and Cess. I decided to remove the VCR and billy fixtures from .gitignore.  That showed me loads of local files in the caches on git status, arising from my local test runs.  I deleted all caches (labelled fixtures) locally and re-checked out from git, and then kicked off a full cucumber test run to bring the local caches up to date.  The plan being to get full caches from a complete test run checked in and then pushed up to CI.  Perhaps that would allow Zmago&amp;rsquo;s PR to pass?  Actually it allowed me to replicate the error locally - now we were getting somewhere &amp;hellip; to be continued tomorrow!&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/D62ZcBOnNsc"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum and LocalSupport kick off&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;p.s. for Cucumber and RSpec I&amp;rsquo;d really like to adjust the output on CI so that it was progress dots for the passing tests, and full stack traces for the failure - I should investigate or open an &lt;a href="https://github.com/cucumber/cucumber-ruby/issues/new"&gt;issue&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;p.p.s. opened &lt;a href="https://github.com/cucumber/cucumber-ruby/issues/1094"&gt;one&lt;/a&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Security First</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/20/security-first/"/>
    <id>http://blog.url.com/2017/03/20/security-first/</id>
    <published>2017-03-20T00:00:00+00:00</published>
    <updated>2017-04-20T21:28:10+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="security" src="/images/security.png" /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re in the process of rolling out &amp;ldquo;https&amp;rdquo; support on the main AgileVentures site.  We&amp;rsquo;ve had &amp;ldquo;https&amp;rdquo; or &amp;ldquo;ssl&amp;rdquo; encoding set up on the LocalSupport project for a couple of years.  LocalSupport users are not a technical community so we don&amp;rsquo;t have facebook, twitter or GitHub login.  We&amp;rsquo;re storing a lot of personal address and phone number details there, and it was clear that without the right security we&amp;rsquo;d be sending user passwords and data back and forth in the clear.  During the initial launch of LocalSupport we switched from where we had been developing (Heroku) to another service provider (NineFold) who offered us SSL free.  So the initial LocalSupport launch was fully secure.&lt;/p&gt;

&lt;p&gt;NineFold eventually folded and we moved back to Heroku where we now pay for the expedited SSL package for LocalSupport.  The AgileVentures site (WebSiteOne) was, and is, targeted at a more technical crowd.  We&amp;rsquo;ve had GitHub and Google login via OAuth since close to the start.  By their nature these are secure.  We used to offer email signup, but shut that down a couple of years back, due to a proliferation of spam accounts, and haven&amp;rsquo;t re-opened it.  In principle, users can still log in insecurely via emails they signed up with at the start, but I&amp;rsquo;m not sure if anyone still does this, and new users all register via OAuth.  AgileVentures, the site, maintains all its data open for sharing, so security has seemed less of an issue, and the cost of setting up the SSL security always seemed to push its priority down the to-do list.&lt;/p&gt;

&lt;p&gt;In the last year we added payment support for Premium plans, first via Stripe and then via PayPal.  These are both secure in that user credit card details never touch our server - going instead directly to secure Stripe and PayPal servers.  So while in some ways that is sufficient security, Federico pointed out recently that the perception of a lack of security could be damaging.  We discussed in a WSO kickoff and got an &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1584"&gt;issue ticket&lt;/a&gt; and I started working on it.  Federico provided a great screen shot of what a user might see while making a Stripe payment:&lt;/p&gt;

&lt;p&gt;&lt;img alt="insecure http in backdrop of stripe payment" src="https://camo.githubusercontent.com/8a1104bf54461a478267e35477ec4cd24e8af3b6/68747470733a2f2f7777772e64726f70626f782e636f6d2f732f7034363764347773686833616276322f696e7365637572652d41562d7072656d69756d2d7369676e75702d66697265666f782e706e673f646c3d31" /&gt;&lt;/p&gt;

&lt;p&gt;Now no potential Premium member has complained about this, but then again you wouldn&amp;rsquo;t expect that kind of feedback.  Will fixing this unleash a wave of subscriptions? Probably not :-)  But it should get sorted, and while our whole community is based on openness, there are users who choose to de-activiate their accounts, and we need to respect their wishes, ensuring their data is secure when they want it to be hidden.&lt;/p&gt;

&lt;p&gt;Also, there&amp;rsquo;s now LetsEcrypt, which promises us the ability to generate SSL certs that can be used in tandem with the SSL endpoints that are now bundled with Heroku&amp;rsquo;s paid plans.  We have to have the AV site servers on Heroku paid plans for resources and also to have them part of Heroku&amp;rsquo;s group plan.  Maybe one day we can migrate to Dokku on Azure as part of a cost saving exercise &amp;hellip; we&amp;rsquo;ll see how that goes with the AsynVoter project first.  In the meantime it seems sensible to get SSL all set up, and last week I managed to get it working on both the develop and staging servers.  I was initially distracted by the &lt;a href="https://github.com/substrakt/letsencrypt-heroku"&gt;letsencrypt-heroku&lt;/a&gt; project, but that only works for certain domain hosting solutions.  However a couple of blog posts set me straight:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https://collectiveidea.com/blog/archives/2016/01/12/lets-encrypt-with-a-rails-app-on-heroku&lt;/li&gt;
&lt;li&gt;https://medium.com/@franxyzxyz/setting-up-free-https-with-heroku-ssl-and-lets-encrypt-80cf6eac108e#.gx52z5rvt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even if I had to combine elements of both to get us sorted.  The process was to install a program called &lt;code&gt;certbot&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ brew install certbot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then I needed to generate a certificate manually:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo certbot certonly --manual
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;agree to have my IP logged and then adjust WSO so that it could respond to a security challenge.  I had to leave the certbot operation hanging while I deployed the following code:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;StaticPagesController&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ApplicationController&lt;/span&gt;
  &lt;span class="n"&gt;before_filter&lt;/span&gt; &lt;span class="ss"&gt;:authenticate_user!&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;except: &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:show&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:letsencrypt&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;letsencrypt&lt;/span&gt;
    &lt;span class="n"&gt;render&lt;/span&gt; &lt;span class="ss"&gt;text: &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;params&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:id&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;.ENV['CERTBOT_SSL_CHALLENGE']"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:layout&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;false&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which then allowed the certbot challenge to be answered and various keys to be generated locally on my computer.  In the background I had also set the Rails config to force SSL:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;config&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;force_ssl&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and now I could deploy the locally generated keys via the Heroku CLI:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo heroku certs:add /etc/letsencrypt/live/develop.agileventures.org/fullchain.pem /etc/letsencrypt/live/develop.agileventures.org/privkey.pem -r develop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and we had SSL working!  There was more work though, as our Google and GitHub OAuth redirect URLs had to be updated to now refer to the HTTPS versions.  Once that was done, login and signup were working again, although I am slighltly suspicious that we may still encounter some problems.  Michael and I both experienced some issues on staging trying to log in, to get redirected to a sign up page indicating that our email already existed.  I have an intuition that previously generated OAuths may get invalidated and there may be something else we need to do.  I&amp;rsquo;m not clear how seriously this will affect production &amp;hellip; I can imagine that existing users may require resets.  I think the error message is a Devise one:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://www.dropbox.com/s/eb2b4453pjo8mpc/Screenshot%202017-03-20%2010.23.52.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the code, it&amp;rsquo;s not clear what set of circumstances causes that.  Just reviewing on staging, I see I can log in via GitHub, but if I try to log in using Google with my tansaku email then I get an &amp;ldquo;email already taken&amp;rsquo; message (with a redirect to sign up page) and if I try with my NeuroGrid email I get &amp;quot;csrf detected&amp;rdquo; first time around (nothing in the JS console), but then second time it works.  I guess I could be trying to wrap tests around this, but I doubt my ability to fully replicate the actual production instance and I&amp;rsquo;m just not sure how many others will experience this.  I held off deploying over the weekend - I guess I should ask more folks to try it out on staging &amp;hellip;&lt;/p&gt;

&lt;p&gt;Either way I didn&amp;rsquo;t actually manage to complete any of the WSO tickets I committed to in the last sprint, partly because of the SSL but also because I think I overcommitted.  I&amp;rsquo;ve not taken on any new ones this week and am committing to trying to finish the ones I&amp;rsquo;ve already started; even though there are loads of new exciting ones we have voted on.  Let&amp;rsquo;s see how this week goes.  I really hope I can get the new security setup on production.&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/edit?o=U&amp;amp;video_id=bjbdQ9L-KHw"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/edit?o=U&amp;amp;video_id=bi85l56Tcqg"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum and WSO kickoff&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/edit?o=U&amp;amp;video_id=Egf8LH_pRK0"&gt;&amp;ldquo;Bob Martin&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Private Pairing</title>
    <link rel="alternate" href="http://blog.url.com/2017/03/17/private-pairing/"/>
    <id>http://blog.url.com/2017/03/17/private-pairing/</id>
    <published>2017-03-17T00:00:00+00:00</published>
    <updated>2017-04-19T22:27:25+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="privacy" src="/images/private-keep-out.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Where to start? Intense week.  Just finished a one hour private pairing session on the &lt;a href="http://codingdojo.org/kata/Tennis/"&gt;tennis kata&lt;/a&gt; with a Ruby programmer I met on the &lt;a href="http://www.rubyonrails.link/"&gt;RailsLink Slack&lt;/a&gt;.  They were suggesting Vim/Tmux, but we ended up using Hangouts and GitHub pong.  It was a good session and I wish I&amp;rsquo;d recorded it.  It was very smooth ping pong back and forth, with some good discussion.  I&amp;rsquo;d asked my pair about recording, but they&amp;rsquo;d demurred and I didn&amp;rsquo;t push it.  I beat myself up internally, because I feel like it could have been a really great video for bootcamp grads and new AV members to watch.  Unlike other meandering sessions where we&amp;rsquo;re slogging through a legacy codebase, this was more likely something folks could get their head around&amp;ndash;a video we might have been able to promote.  However I think we&amp;rsquo;ve got to respect people&amp;rsquo;s preferences.  Not everyone wants their activities vidoed and played back, and perhaps that&amp;rsquo;s part of the crux of the issue at AgileVentures.  Maybe the Google Hangout plugins going offline on April 25th will be a blessing rather than a curse, as starting manually from YouTube live actually gives the Hangout creator control over whether to make the video private, unlisted, or public on YouTube.&lt;/p&gt;

&lt;p&gt;Anyway, all the code from the session is in a &lt;a href="https://github.com/tansaku/tennis-kata"&gt;repo on github&lt;/a&gt; where you can see the nice git pong commit history:&lt;/p&gt;

&lt;p&gt;&lt;img alt="commit history" src="https://www.dropbox.com/s/ybsik7662m3dsg1/Screenshot%202017-03-17%2010.37.31.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I picked up some good tips from the pairing, using a &lt;code&gt;let&lt;/code&gt; instead of a named subject &lt;code&gt;subject(:tennis) {described_class.new}
&lt;/code&gt;:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'tennis'&lt;/span&gt;

&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Tennis&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;let&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:tennis&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;subject&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;specify&lt;/span&gt; &lt;span class="s2"&gt;"players are love-all when game starts"&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tennis&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;score&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt; &lt;span class="s2"&gt;"0:0"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I was pulled back from excessive self-encapsulation, being referred to a &lt;a href="https://martinfowler.com/bliki/SelfEncapsulation.html"&gt;Martin Fowler article on the subject&lt;/a&gt;.  I&amp;rsquo;d worked hard with Ruby to work out how to use private &lt;code&gt;attr_writers&lt;/code&gt; internally&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Tennis&lt;/span&gt;

  &lt;span class="kp"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:score&lt;/span&gt;

  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;initialize&lt;/span&gt;
    &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;score&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"0:0"&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="kp"&gt;private&lt;/span&gt;

  &lt;span class="kp"&gt;attr_writer&lt;/span&gt; &lt;span class="ss"&gt;:score&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&amp;rsquo;s interesting how a pairing session can be alot about how you give ground.  I think my problem in the past has been my tendency to love joining a good debate about going either way with a particular approach; and I get the sense that a lot of people would rather have much less talk and a lot more coding going on.  Fair enough.  I tried that in this session and in the Elixir pairing session with Ryder on Thursday that we did record.  That was great fun too.  I immediately want to try out this Tennis kata in Elixir, as the really interesting thing is that the first way we reach to do the kata in Ruby is to start introducing object state.&lt;/p&gt;

&lt;p&gt;Pairing on Kata and other people&amp;rsquo;s personal projects (like Ryder&amp;rsquo;s text adventure game) is a new direction for me.  I&amp;rsquo;m usually so desparate to make every coding second count towards contributing to solving a charity or nonprofit problem.  Also, I&amp;rsquo;m running out of time and money and unless I land a contract very soon it&amp;rsquo;s going to be full time job search for me, and I won&amp;rsquo;t have the time to just do random pairing.  Gosh, I wish all this had been available before I had kids.  I could have learnt so many valuable lessons about coding and communicating with folks.&lt;/p&gt;

&lt;p&gt;At least at the end of the Tennis Kata session I got the chance to show what AgileVentures was about, and at the end of the session with Ryder I was able to explain my still unrealized vision of a massive online pair programming community.  Games like LeagueOfLegends, Splatoon and OverWatch allow anyone around the world to log in and hang out in gaming lobbies, until they&amp;rsquo;ve got enough folks together for a team game.  It just seems like it&amp;rsquo;s totally possible to do the same thing for pair programming.  You could have a video wall of all the different ongoing sessions with people browsing what they&amp;rsquo;d like to focus on (à la twitch.tv) but actually able to participate.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been wanting that for the last five years and channelled it through the MOOC, bootcamps, AgileVentures, but it still doesn&amp;rsquo;t exist in the form that I imagine.  Perhaps we have to build our own screensharing teleconferencing system.  As they say &amp;ldquo;Markets can stay irrational longer than you can stay solvent&amp;rdquo;.  I think once people get over their initial resistance to pairing with strangers online and being video&amp;rsquo;d, they&amp;rsquo;d get so much out of it.  If only we had a properly staggered system that allowed people to do some initial private pairing &amp;ldquo;free tasters&amp;rdquo; and then an escalator that introduced them to the possibilities of online pairing.&lt;/p&gt;

&lt;p&gt;I think the interface has just got to be smooth.  Like playing a video game - just click a few buttons and you&amp;rsquo;re in.  None of these off-putting warning messages from Google Hangouts.  The interface updating in realtime as other people come on and offline.  Perhaps our new AgileVentures Electron project will help - or some other kind of Slack integration.  Slack seems like the perfect lobby system to me.  We just need the ability to have recordable pairing sessions launched from Slack and archived and then be browsable by tech stack.  Actually I think the streaming/recording is most useful as an activity trace for others to see what&amp;rsquo;s happening and see that it can happen and realise that they can do it themselves &amp;hellip;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll get there, although knowing reality, someone else will do it first.  FreeCodeCamp is part way there, but they&amp;rsquo;re JavaScript only and the pairing is adhoc (I think) - the online bootcamps have it for a select rich few - if you&amp;rsquo;re inspired come help us make it a reality.  I think it should be open for everyone in the world to participate, just like an online computer game.  Maybe we need a design sprint?&lt;/p&gt;

&lt;h2&gt;Related Videos:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/kYQP9sRgXRY"&gt;Elixir Pairing with Ryder&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
