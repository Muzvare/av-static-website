<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-11-30T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>AV EcoSystem Review Prioritization Conflict</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/30/av-ecosystem-review-prioritization-conflict/"/>
    <id>http://blog.url.com/2017/11/30/av-ecosystem-review-prioritization-conflict/</id>
    <published>2017-11-30T00:00:00+00:00</published>
    <updated>2018-03-08T21:09:33+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="switches" src="/images/switches.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Blargh.  Let&amp;rsquo;s get the latest fix deployed on WebSiteOne.  Recently these blogs are little WebSiteOne admin activities and then the release process gets smeared out over the day.  What would it be like to actually focus on a single project for a day or, gasp, for a whole week?  I&amp;rsquo;ve also made the process more complicated by switching off the staging and develop servers when we&amp;rsquo;re not using them, in order to save money.  It&amp;rsquo;s also easy to burn time on these dependabot gem upgrades, although do I sense I&amp;rsquo;m getting a handle on them now?  Could we even turn back on the PR updates in the #websiteone channel?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m suddenly paranoid about the Google login failing, should I be on that?  Let&amp;rsquo;s try to clean up first.  We&amp;rsquo;ve got pending notices in the Jasmine tests and RSpec.  I&amp;rsquo;ve got &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1858#issuecomment-348141856"&gt;half an idea&lt;/a&gt; about how to fix the &lt;code&gt;local_time&lt;/code&gt; gem upgrade that dependabot is recommending, but heuristic: I already pulled in one dependabot today; stay on target.&lt;/p&gt;

&lt;p&gt;Jasmine has this set of pending statements:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Pending:
        eventDatePicker hides event repeat options by default
          awaiting refactor of related form for use in fixture

        eventDatePicker shows event repeat options when event is set to repeat
          awaiting refactor of related form for use in fixture

        eventDatePicker shows event repeat optional ending when event is set to end
          awaiting refactor of related form for use in fixture

        eventDatePicker hides event repeat optional ending when event is set to never end
          awaiting refactor of related form for use in fixture
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and RSpec this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  1) Karma add some examples to (or delete) /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/karma_spec.rb
     # Not yet implemented
     # ./spec/models/karma_spec.rb:4

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The eventDatePickerSpec concern seems to be that the fixture is too large.  Just delete the test? It says it is awaiting refactor of the form, but that doesn&amp;rsquo;t look like it will be happening anytime soon &amp;hellip;, so I make some specs with a fixture in a separate file:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'eventDatePicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Michael is concerned that fixture is large and involved and creating too complex a seam&lt;/span&gt;
    &lt;span class="nx"&gt;loadFixtures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'event_datepicker.html'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;eventDatepicker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat options by default'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat options when event is set to repeat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat optional ending when event is set to end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat optional ending when event is set to never end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'never'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and making it all work involves me breaking out the js debugger and stepping through to see which elements are being hidden when:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/zsckxs1juv27wax/Screenshot%202017-11-30%2010.47.52.png?dl=0" /&gt;&lt;/p&gt;

&lt;p&gt;I feel paranoid that this is all yesterday&amp;rsquo;s tech.   I notice the JasmineJQuery library is looking for a new maintainer, and apparently some folks are using &lt;a href="https://github.com/tmpvar/jsdom"&gt;https://github.com/tmpvar/jsdom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I could also be refactoring out some of the operations in this test &amp;hellip; I equivocate and go for it:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;describe&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'eventDatePicker'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;

  &lt;span class="nx"&gt;beforeEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// Michael is concerned that fixture is large and involved and creating too complex a seam&lt;/span&gt;
    &lt;span class="nx"&gt;loadFixtures&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'event_datepicker.html'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;eventDatepicker&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;init&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeats'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;set_event_repeat_ends_to_never&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'never'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#event_repeat_ends_string'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'change'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat options by default'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat options when event is set to repeat'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeats_weekly_options'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'.event_option'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'shows event repeat optional ending when event is set to end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;not&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'hides event repeat optional ending when event is set to never end'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeats_to_weekly&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;set_event_repeat_ends_to_never&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on_label'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'#repeat_ends_on'&lt;/span&gt;&lt;span class="p"&gt;)).&lt;/span&gt;&lt;span class="nx"&gt;toBeHidden&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It works and I&amp;rsquo;m rewarded with fully passing Jasmine specs, no pending, and I think the intention of the code above is now slighlty better in terms of self-documenting the intention by method names rather than comments.  We still have the issue that the fixture is too large, but that can be updated as and when.  Really the parts of the fixture that are relevant are just a few items being shown and hidden.  Ideally the fixture could be auto-generated, but really my concern here is just clearing the deck for others to work on things.&lt;/p&gt;

&lt;p&gt;I create a ticket for clearing pending items.  Can I also get the RSpec sorted?  The Karma class is this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Karma&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the spec is&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'spec_helper'&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;pending&lt;/span&gt; &lt;span class="s2"&gt;"add some examples to (or delete) &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I don&amp;rsquo;t know that the Karma model is yet doing anything special that needs testing.  I think this is boiler plate.  I&amp;rsquo;m going to delete the pending message, since I hate deleting files where I might want to add something later, hmmm.  I go for:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'spec_helper'&lt;/span&gt;

&lt;span class="no"&gt;RSpec&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;Karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="c1"&gt;# no new functionality besides standard ActiveRecord functions yet&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then I screw up by pushing to develop instead of creating a branch.  Urgh, I amend the commit name to say it fixes the pending issue, but can&amp;rsquo;t force push that up to develop because it&amp;rsquo;s protected.  Blargh.  I remove the protection, force that up, and then put the protection back on.  Not ideal. Getting there.  Gotta finish up the blog.  Shame to pollute my inner space with this constant pressure to work faster, do more.  Need to meditate on that, but no time :-)&lt;/p&gt;

&lt;p&gt;Anyhow, I think what I&amp;rsquo;ve got is now a pretty clean output from both Jasmine and RSpec.  Now if we really want to clean up the cucumber output then we&amp;rsquo;ve got to move on to removing this Mercury editor.  So I update that &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1767"&gt;branch&lt;/a&gt; and I guess I work on that tomorrow, pulling examples from what I do into the new README &amp;hellip; also our coverage tracking seems to be broken.  Need to get that fixed up too &amp;hellip; no rest for the wicked &amp;hellip; and no respite from the prioritization conflicts &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Getting Stuck</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/29/av-ecosystem-review-getting-stuck/"/>
    <id>http://blog.url.com/2017/11/29/av-ecosystem-review-getting-stuck/</id>
    <published>2017-11-29T00:00:00+00:00</published>
    <updated>2018-03-07T21:54:08+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="getting stuck" src="/images/getting_stuck.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m getting a bit stuck.  My motivation to clear things off my desk has completely collapsed.  Today I did my social media station keeping before opening the blog.  I&amp;rsquo;d love to get to the computer at 8am like I sometimes used to and get a real meaty chunk of work by 10am to then have the motivation to hit on non social-media admin.  Gosh, social media is gamified addiction fun, isn&amp;rsquo;t it?&lt;/p&gt;

&lt;p&gt;Anyhow, I&amp;rsquo;ve cleared all the dependabot low hanging fruit, so I&amp;rsquo;m rebuilding some older PRs, which might just be falling foul of intermittent fails.  Gosh, that&amp;rsquo;s a time sink - that reminds me about my plan to try and get the medium-editor in place so we can drop mercury.  I&amp;rsquo;m also slighltly stuck on my revision to the WSO README for fear of getting into arguments about the accuracy of the project history - maybe better to leave that section out?  Maybe I move the new draft README out of my last blog and into a placeholder location &amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/blob/develop/README-draft.md"&gt;https://github.com/AgileVentures/WebsiteOne/blob/develop/README-draft.md&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So keep polishing the README, sort out the pending issues showing up in the test output, work on the medium editor branch, or fix some of the niggly things, e.g. the formatting issue that Susanna highlighted yesterday?  I think I can get a quick win on this &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1994"&gt;formatting issue&lt;/a&gt; from Susanna.  I make a branch and amend an existing cucumber test:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given following events exist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;             &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;project&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_weekly_each_days_of_the_week_mask&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_every_n_weeks&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Daily&lt;/span&gt; &lt;span class="n"&gt;standup&lt;/span&gt; &lt;span class="n"&gt;meeting&amp;lt;br&amp;gt;woot!&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;           &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;weekly&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;15&lt;/span&gt;                                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;1&lt;/span&gt;                 &lt;span class="p"&gt;|&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see &lt;span class="s"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which fails in the way I expect, i.e. the html tag shows up in the list view as Susanna pointed out.  I want to refactor the cuke, but I must fix the issue first, which might be as simple as just adding the &lt;code&gt;auto_link&lt;/code&gt; command to the relevant part of the view:&lt;/p&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;              &lt;span class="nt"&gt;&amp;lt;p&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;auto_link&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;description&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;truncate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;separator: &lt;/span&gt;&lt;span class="sr"&gt;/\s/&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It is.  So can I make the cuke a better example of self documentation?  I refactor it to:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="nt"&gt;@vcr&lt;/span&gt;
&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; List Repeating Events
  As an event creator
  So that I don't have to keep making separate events for repeating meetings
  I would like everyone to see repeats of regular events

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given following events exist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;             &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;project&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_weekly_each_days_of_the_week_mask&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;repeats_every_n_weeks&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Daily&lt;/span&gt; &lt;span class="n"&gt;standup&lt;/span&gt; &lt;span class="n"&gt;meeting&amp;lt;br&amp;gt;woot!&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;           &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;weekly&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="n"&gt;15&lt;/span&gt;                                      &lt;span class="p"&gt;|&lt;/span&gt;     &lt;span class="n"&gt;1&lt;/span&gt;                 &lt;span class="p"&gt;|&lt;/span&gt;
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nf"&gt;Do&lt;/span&gt; not show raw HTML in repeating event description
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should not see &lt;span class="s"&gt;"&amp;lt;br&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It feels like a waste of resources to break it into two scenarios when it&amp;rsquo;s the same set up and it&amp;rsquo;s effectively reloading the entire system twice to check for something that could be checked in sequence.  Perhaps it would be better to get the intent of the second scenario in the step definition itself.  I adjust like so:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would love to adjust the background step so it wasn&amp;rsquo;t quite so wide &amp;hellip; I&amp;rsquo;ve got it down to:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="nt"&gt;@vcr&lt;/span&gt;
&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; List Repeating Events
  As an event creator
  So that I don't have to keep making separate events for repeating meetings
  I would like everyone to see repeats of regular events

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="err"&gt;Given the following events exist that repeat every weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;name&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;category&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;start_datetime&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;duration&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;time_zone&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Standup&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;always&amp;lt;br&amp;gt;woot!&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scrum&lt;/span&gt;    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;2014/02/03&lt;/span&gt; &lt;span class="n"&gt;07:00:00&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;150&lt;/span&gt;      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;UTC&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="err"&gt;Given the date is "2016/05/01 09&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;15&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt; &lt;span class="err"&gt;UTC"&lt;/span&gt;
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see &lt;span class="s"&gt;"Standup"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should see &lt;span class="s"&gt;"woot!"&lt;/span&gt;
    &lt;span class="err"&gt;And the local time element should be set to "2016-05-10T07&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="err"&gt;00Z"&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;d still like to add more explanation to the &lt;code&gt;local time element should be set to &amp;quot;2016-05-10T07:00:00Z&amp;quot;&lt;/code&gt; step so that it explains that this is the raw element that the javascript library &lt;code&gt;local_time&lt;/code&gt; uses to display the correct time zone to the user and that we gave up testing the execution of that, since the headless browser can&amp;rsquo;t easily be manipulated to a different time zone.  Still my ideal Scenario text would be more like:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Show correct timezone for repeating event
    &lt;span class="nf"&gt;Given&lt;/span&gt; the date is a weekday in 2016
    &lt;span class="nf"&gt;When&lt;/span&gt; I am on events index page
    &lt;span class="nf"&gt;Then&lt;/span&gt; I should see the event title and description
    &lt;span class="nf"&gt;And&lt;/span&gt; I should not see any HTML tags
    &lt;span class="nf"&gt;And&lt;/span&gt; the elements needed by the local_time js library that shows times in the users timezone should be set correctly
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;where the intention for each line is explicit.  I&amp;rsquo;ll leave that for another time, as I&amp;rsquo;ve performed several refactorings already.  At least I now have some aspirational text to put in the new README draft.&lt;/p&gt;

&lt;p&gt;Well that makes me feel heaps better, to actually have a &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1995"&gt;quick fix&lt;/a&gt; for something reported by a Premium user.  I do need to get on to that medium editor thing in order to speed up our overall process.  Even the double run of the cukes hasn&amp;rsquo;t really addressed our failing javascript tests.  I guess the trick is to keep fixing things up, improving the cukes and getting those as examples into the system documentation showing how we are trying to improve things &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Even More Hospitable</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/"/>
    <id>http://blog.url.com/2017/11/28/av-ecosystem-review-even-more-hospitable/</id>
    <published>2017-11-28T00:00:00+00:00</published>
    <updated>2018-03-06T21:51:37+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="namaste" src="/images/namaste.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So, continuing to work from &lt;a href="https://gist.github.com/nodunayo/c919477906aab6c1af6065ff8e868d3e"&gt;Nadia&amp;rsquo;s README template&lt;/a&gt;: &lt;/p&gt;

&lt;h1&gt;AgileVentures WebSiteOne&lt;/h1&gt;

&lt;p&gt;This &lt;a href="http://rubyonrails.org/"&gt;Ruby on Rails&lt;/a&gt; app powers the &lt;a href="http://agileventures.org/"&gt;AgileVentures main developer site&lt;/a&gt;, showing lists of active &lt;a href="https://www.agileventures.org/projects"&gt;projects&lt;/a&gt;, &lt;a href="https://www.agileventures.org/users"&gt;members&lt;/a&gt;, &lt;a href="https://www.agileventures.org/events"&gt;upcoming events&lt;/a&gt;, &lt;a href="https://www.agileventures.org/scrums"&gt;past event recordings&lt;/a&gt;, as well as all the machinery for &lt;a href="https://www.agileventures.org/pricing"&gt;Premium membership payments&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;See the &lt;a href="docs/project_setup.md"&gt;Project Setup&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;:construction: UNDER CONSTRUCTION :construction:&lt;/p&gt;

&lt;p&gt;See the site &lt;a href="docs/how_to_use_the_site.md"&gt;How To&lt;/a&gt; documentation&lt;/p&gt;

&lt;h2&gt;Contributing&lt;/h2&gt;

&lt;p&gt;See our &lt;a href="CONTRIBUTING.md"&gt;Contribution guidelines&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;History&lt;/h2&gt;

&lt;p&gt;in 2011 Sam Joseph had the idea for an online pairing community where everyone worked together to use the agile development methodology to deliver solutions to IT charities and non-profits.  Thomas Ochman joined as project manager and led the development of the WebSiteOne codebase with Bryan Yap serving as technical lead.  Initialy Sam was the notional &amp;ldquo;client&amp;rdquo;, not getting involved in the tech development, and many different volunteers contributed code.  During this phase the events, projects and user systems were developed.  There was also a blog-like articles system.  Yaro Appletov led a tight integration with Google hangouts to allow recordable hangouts to be launched from the site and report back telemetry.&lt;/p&gt;

&lt;p&gt;Later Raoul Diffou joined to take over as project manager as Thomas and Bryan had less and less time for the project.  Sam took over the technical lead role in 2016 and also started pairing with Raoul as project manager.  Later in 2016 as Raoul had less and less time Sam became the sole project manager.  During the course of 2016 Sam and long time AV contributor, Michael, revised the events framework, and replaced the articles system with a Premium payments framework intended to help ensure AV was sustainable into the future.  In 2017 Google withdrew their Hangouts API, breaking various functionality in the site.  Sam and Lokesh Sharma replaced the API integration with manual updates, and Sam pulled in the agile-bot node microservice so that WSO now communicates directly with Slack to alert members about new online meetings and their recordings.&lt;/p&gt;

&lt;h2&gt;Approaches&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile Development

&lt;ul&gt;
&lt;li&gt;We try to work from user stories in regular sprints, offer daily standups, and get regular feedback from end users.  We try to reflect regularly on our process and experiment with incremental changes to how we get things done.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behaviour Driven Development (BDD)

&lt;ul&gt;
&lt;li&gt;We use Cucumber and RSpec testing tools that describe the behaviours of the system and its units&lt;/li&gt;
&lt;li&gt;We try to work outside in, starting with acceptance tests, dropping to unit tests and then writing application code&lt;/li&gt;
&lt;li&gt;We do spike application code occasionally to work out what&amp;rsquo;s going on, but then either throw away the spike, or make sure all our tests break before wrapping the application code in tests (by strategically or globally breaking things)&lt;/li&gt;
&lt;li&gt;Where possible we go for declarative over imperative scenarios in our acceptance tests, trying to boil down the high level features to be easily comprehensible in terms of user intention&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Domain Driven Design (DDD)

&lt;ul&gt;
&lt;li&gt;Sometimes we switch to inside out, trying to adjust the underlying entity schema to better represent the domain model&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-documenting code

&lt;ul&gt;
&lt;li&gt;We prefer executable documentation (tests) and relatively short methods where the method and variable names effectively document the code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Reading material&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://fasteragile.com/blog/2015/01/19/declarative-user-stories-translate-to-good-cucumber-features/"&gt;Imperative vs Declarative Cucumber&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bibwild.wordpress.com/2016/02/18/struggling-towards-reliable-capybara-javascript-testing/"&gt;JavaScript Acceptance test trials&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Walkthroughs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;An example of a simple interface change&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L1"&gt;user story&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Here is the original &lt;a href="features/jitsi_meet/start_jitsi_button.feature#L15"&gt;cucumber scenario&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We did not write a spec, as this would have involved a view spec which we don&amp;rsquo;t feel add any value&lt;/li&gt;
&lt;li&gt;Here&amp;rsquo;s the &lt;a href="app/views/events/show.html.erb#L38"&gt;code&lt;/a&gt; that implemented the feature&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a new feature involving a database change
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;An example of a bug fix
&amp;hellip;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So looking through all the cucumber scenarios I&amp;rsquo;m not finding wonderful examples of the declarative style I think we should be using, and this is at least as true for the cucumber scenarios I have written myself :-(  I guess the edit future event timezone related work that Michael and I implemented is closest.  I&amp;rsquo;m going to have to go back through some old pull requests to work out other walkthrough examples.  I also note that we don&amp;rsquo;t have any documentation on how to use the website, either in git or on the site itself.  I guess I&amp;rsquo;ve always been slightly skeptical of the value of that sort of written documentation in that it becomes another thing to maintain that folks don&amp;rsquo;t even necessarily read.&lt;/p&gt;

&lt;p&gt;Blurgh, overall I don&amp;rsquo;t think things are very hospitable and it feels like a mountain to climb to try and make them so.  One step at a time I guess &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Code Hospitality</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/27/av-ecosystem-review-code-hospitality/"/>
    <id>http://blog.url.com/2017/11/27/av-ecosystem-review-code-hospitality/</id>
    <published>2017-11-27T00:00:00+00:00</published>
    <updated>2018-03-05T20:53:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/hospitality.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Pairing with Marian over the weekend we managed to clear up the last piece of junk in the RSpec log, the deprecation warning about the event_repeats boolean column in the events table.  It turned out that we could fix it simply by adjusting the specs, since it was they that were trying to force strings into the boolean column, not any part of the main app.  We drifted over a few other areas where issues could be investigated or things refactored.  We saw the code that was supposed to email notify us when there are 500 errors (which I never receive) and it looked like we could make the events code simpler, by pulling the string &amp;ndash;&amp;gt; boolean transformations into the select options.&lt;/p&gt;

&lt;p&gt;I wanted to focus this morning on code hospitality a la Nadia Odunayo, but I&amp;rsquo;ve been distracted by Slack and Email already, and putting the above items into new of existing issues:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1808#issuecomment-347133830"&gt;500 error notifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1992"&gt;Event form refactoring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Anyhow, I found &lt;a href="https://gist.github.com/nodunayo/c919477906aab6c1af6065ff8e868d3e"&gt;Nadia&amp;rsquo;s README template&lt;/a&gt;, so perhaps I can just quickly do a version for AgileVentures WebSiteOne&lt;/p&gt;

&lt;h1&gt;AgileVentures WebSiteOne&lt;/h1&gt;

&lt;p&gt;This app powers the AgileVentures main developer site, showing lists of active projects, members, upcoming events, past event recordings, as well as all the machinery for Premium membership payments&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;link to installation doc&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;???&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Contributing&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;link to contributing guide&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;History&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Sam Joseph had the idea for an online pairing community where everyone worked together to use the agile development methodology to deliver solutions to IT charities and non-profits.  Thomas Ochman joined as project manager and led the development of the WebSiteOne codebase with Bryan Yap serving as technical lead.  Initialy Sam was the notional &amp;ldquo;client&amp;rdquo;, not getting involved in the tech development, and many different volunteers contributed code.  Later Raoul joined as project manager as Thomas and Bryan had less and less time for the project.  Sam switched roles joining Raoul as project manager, and is now the sole project manager as Raoul became unavailable.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Approaches&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Agile Development

&lt;ul&gt;
&lt;li&gt;We try to work from user stories in regular sprints, offer daily standups, and get regular feedback from end users&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Behaviour Driven Development (BDD)

&lt;ul&gt;
&lt;li&gt;We use Cucumber and RSpec testing tools that describe the behaviours of the system and its units&lt;/li&gt;
&lt;li&gt;We try to work outside in, starting with acceptance tests, dropping to unit tests and then writing application code&lt;/li&gt;
&lt;li&gt;We do spike occasionally to work out what&amp;rsquo;s going on, but then either throw away the spike, or make sure all our tests break before wrapping in tests (by strategically or globally breaking things)&lt;/li&gt;
&lt;li&gt;Where possible we go for declarative over imperative scenarios in our acceptance tests, trying to boil down the high level features to be easily comprehensible in terms of user intention&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Domain Driven Design (DDD)

&lt;ul&gt;
&lt;li&gt;Sometimes we switch to inside out, trying to adjust the underlying entity schema to better represent the domain model&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Self-documenting code

&lt;ul&gt;
&lt;li&gt;We prefer executable documentation (tests) and relatively short methods where the method and variable names effectively document the code&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Reading material&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="#"&gt;Imperative vs Declarative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;JavaScript Accpetance test trials&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#"&gt;What is DDD?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Walkthroughs&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Some new feature we added &amp;hellip;

&lt;ul&gt;
&lt;li&gt;Here is the original feature request&lt;/li&gt;
&lt;li&gt;This is the &lt;a href="#"&gt;spec&lt;/a&gt; that was written&lt;/li&gt;
&lt;li&gt;Here&amp;rsquo;s the &lt;a href="#"&gt;code&lt;/a&gt; that fixed that spec&lt;/li&gt;
&lt;li&gt;And then &lt;a href="#"&gt;we refactored it&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That&amp;rsquo;s a start - more tomorrow &amp;hellip;  &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Fixing Event Repeats</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/24/av-ecosystem-review-fixing-event-repeats/"/>
    <id>http://blog.url.com/2017/11/24/av-ecosystem-review-fixing-event-repeats/</id>
    <published>2017-11-24T00:00:00+00:00</published>
    <updated>2018-03-05T20:47:41+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/fixing.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So the Semaphore CI was busy burning away yesterday as it re-ran all the different dependabot pull requests, and a few of them have gone green &amp;hellip; and I can also now update the medium-editor PR to the base branch, which seemed to be blocked all day yesterday:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/zs5jgyf1bl5hx2z/Screenshot%202017-11-24%2010.32.46.png" /&gt;&lt;/p&gt;

&lt;p&gt;In the background I guess I&amp;rsquo;m supposed to be getting tweaks to the home page text out to production.  I rebase staging into production and push out, and see we&amp;rsquo;ve got a few things in there:&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropbox.com/s/l5bpb26nuklllp8/Screenshot%202017-11-24%2010.35.53.png" /&gt;&lt;/p&gt;

&lt;p&gt;Will be good to give them a chance to settle in on production &amp;hellip; there are eight dependabot PRs that are now green.  Shall I just dump them in to develop?  I do, but I&amp;rsquo;m burning time, and I didn&amp;rsquo;t leave myself much time for blogging today.  In addition, Fridays are now super busy with mobs and pairing.  I wanted to get into this deprecation warning about &lt;code&gt;repeat_ends&lt;/code&gt; for events &amp;hellip; maybe after the WSO meeting later today &amp;hellip;&lt;/p&gt;

&lt;p&gt;It would be great to work through and remove any gems we don&amp;rsquo;t need.  Some related items here:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/questions/14333963/how-to-find-unused-gems-in-my-gemfile/28628993#28628993"&gt;https://stackoverflow.com/questions/14333963/how-to-find-unused-gems-in-my-gemfile/28628993#28628993&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pboling/gem_bench"&gt;https://github.com/pboling/gem_bench&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Okay, I managed to get us down to a single page of pull-requests, and opened all the others to look at the fails to see if they&amp;rsquo;re just intermittent ones.  There seems to be some really weird random fails from coveralls - that needs sorting too.&lt;/p&gt;

&lt;p&gt;End of day, and I&amp;rsquo;m still no closer to working on this event &lt;code&gt;repeat_ends&lt;/code&gt; issue.  Although I do feel like a new focus is called for - make the projects super developer friendly and easy to onboard and that way we get more folks working on all the small fixes that would make the main AV site more welcoming &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Sweeping Up</title>
    <link rel="alternate" href="http://blog.url.com/2017/11/23/av-ecosystem-review-sweeping-up/"/>
    <id>http://blog.url.com/2017/11/23/av-ecosystem-review-sweeping-up/</id>
    <published>2017-11-23T00:00:00+00:00</published>
    <updated>2018-02-19T21:53:28+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="broom" src="/images/broom.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So confused about where to direct my efforts.  Maybe it doesn&amp;rsquo;t matter?  Maybe I should be avoiding code like Avdi Grimm?  I&amp;rsquo;m going to start by trying to clear up all the dependabot PRs.&lt;/p&gt;

&lt;p&gt;I just used my administrator privileges to merge in upgrades to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1898"&gt;Brakeman&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1899"&gt;Bullet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1900"&gt;Bundler-Audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1901"&gt;Jasmine&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;m not really clear what the first three gems do.  Jasmine allows us to unit test our JavaScript.  Trying to update all these four in succession, leading to merges getting stuck through the GitHub UI.  I&amp;rsquo;ve banged on them and I think they&amp;rsquo;re all through now.  I pull those changes locally to update my gems locally.&lt;/p&gt;

&lt;p&gt;One project manager experienced a 500 error last night that I assume was performance related, but we get nothing from systems like AirBrake that are supposed to tell us about these things.  I sort of feel like for a system of this size, what we need is four full time engineers to keep maintaining it all.  Maybe upgrading to Rails 5 is the key?  Maybe spending no time with my family? Or maybe re-doing the whole thing in WordPress like Avdi and Chuck &amp;hellip;&lt;/p&gt;

&lt;p&gt;Anyway, I&amp;rsquo;m putting my head down and getting every dependabot automated gem upgrade PR through now.  I generally shy away from making multiple changes like this, but I&amp;rsquo;m sick of the dependabot PRs drowning out the human PRs.  Of course even once I&amp;rsquo;ve got the green ones through, there are all those that have come through and caught on the CI.  Now some are clearly failing because code needs to change, but others will just be from intermittent jasmine fails.  I think if we could rip out Mercury and replace it with a new editor, and that might get rid of half the intermittent fails, and maybe clear the way to get onto Rails 5.  However, I am unclear precisely what Rails 5 really buys us - maybe the ability to use websockets cleanly and so avoid a lot of stale data for our users in their browsers.  That said, realistically we could fix some of the current staleness issues with timers.&lt;/p&gt;

&lt;p&gt;The difficultly with this dependabot system is that we&amp;rsquo;ve got hundreds of gems and there&amp;rsquo;s always going to be gem versions being bumped.  So even if I get through the current lot, there&amp;rsquo;ll be more to come.  Perhaps the trick is to get new members merging these PRs?  Although that would mean needing to give them merge privileges &amp;hellip; the ones where there&amp;rsquo;s work required are generally tricky and not necessarily a good place for new members.  Perhaps just having them take the green PRs and running them locally to double check the CI?&lt;/p&gt;

&lt;p&gt;So as I try to merge in more, I get conflicts in the Gemfile and Gemfile.lock, which I try to patch up.  I go to all the other dependabot failing PRs and update their branches.  Am I just doing a very long slow drawn out &lt;code&gt;bundle update&lt;/code&gt; here?  Every single gem has to be tested with each other, in each combination.  The other issue is that every PR puts a load on our CI and our CI blocks deployment, so I&amp;rsquo;ve probably set us up to be unable to deploy anything today.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve got a chunk of gems upgraded and I&amp;rsquo;m running the tests locally to check, but I don&amp;rsquo;t have so much faith in the tests. Hmmm.  What I do really want to do is get that new editor that Matt started working on and update the branch.  Matt&amp;rsquo;s been MIA for the longest of the different contributors.  I&amp;rsquo;m also seeing various messy messages in our build output.  When unclear about direction I guess maybe it&amp;rsquo;s best just to focus on cleaning things up &amp;hellip;&lt;/p&gt;

&lt;p&gt;Frustratingly when I run RSpec in progress mode I can&amp;rsquo;t see which tests the deprecation warnings are coming from.  The main ones I&amp;rsquo;m getting are:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:244)
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/github"]
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;WARNING: Using the `raise_error` matcher without providing a specific error or message risks false positives, since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing the expectation to pass without even executing the method you are intending to call. Actual error raised was #&amp;lt;ActiveRecord::StatementInvalid: PG::NotNullViolation: ERROR:  null value in column "user_id" violat...
: UPDATE "authentications" SET "user_id" = $1, "updated_at" = $2 WHERE "authentications"."id" = $3&amp;gt;. Instead consider providing a specific error class or message. This message can be suppressed by setting: `RSpec::Expectations.configuration.on_potential_false_positives = :nothing`. Called from /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/authentication_spec.rb:12:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ah, actually some of the error messages are telling me where the problems are arising &amp;hellip;  of course kicking off a cucumber test run locally blocks me from doing any coding work on the project for 10 minutes+ since we still have these stupidly long running tests in places &amp;hellip; I guess I will do my station keeping (social media updates) until they finish&amp;hellip;&lt;/p&gt;

&lt;p&gt;Only one failure in the cukes:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Encountered Error in get: 404 Resource Not Found: {"code":"route_not_found","kind":"error","error":"The path you requested has no valid endpoint."}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Having merged the conflict in the Medium-editor branch, I&amp;rsquo;m not even getting the chance to update the branch, so let&amp;rsquo;s at least try to clear up some cruft in the RSpec output.&lt;/p&gt;

&lt;p&gt;The first item seems a little tricky, although it looks like we do need to fix it before we move to Rails 5, and it seems like I can fix it at the spec level as simply as adding this to the event model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;repeat_ends&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;repeat_ends&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;super&lt;/span&gt; &lt;span class="n"&gt;repeat_ends&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s1"&gt;'on'&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and fixing the factories to ensure they used &amp;lsquo;on&amp;rsquo; and &amp;#39;never&amp;rsquo; rather than booleans.  The issue here is that the underlying column type for &lt;code&gt;repeat_ends&lt;/code&gt; is boolean, but the model is working with it as a string.  Of course the real question is how the acceptance tests perform now.  I get a sequence of errors - if I&amp;rsquo;m lucky they are all about factories (being used in the Cukes).  They are not - they are actually using the full form, and we have javascript running in the browser to set things up - and it&amp;rsquo;s not showing certain fields.  There&amp;rsquo;s some complexity to fix all this, and even if I have the tests passing, I won&amp;rsquo;t be sure I haven&amp;rsquo;t introduced a bug into our events management.&lt;/p&gt;

&lt;p&gt;Fixing the &lt;code&gt;raise_error&lt;/code&gt; issue is a trivial change to the spec:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'must have an associated user'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="c1"&gt;# Bryan: validations done at database level to avoid complications, but will raise exceptions&lt;/span&gt;
    &lt;span class="vi"&gt;@auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;user_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kp"&gt;nil&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="vi"&gt;@auth&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save&lt;/span&gt; &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;raise_error&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;StatementInvalid&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- add this error type here&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And I decide to delete all the view specs, as those warnings are telling me that many of them aren&amp;rsquo;t testing what they should be.  In the ideal world I&amp;rsquo;d work through every single one and work out where they&amp;rsquo;re corresponding to in terms of missing acceptance test functionality, but part of the overall problem here is not having the resources to maintain so much code.  I think I need to hack and slash a bit to make some kind of progress.  Maybe I can spend tomorrow debugging the events &lt;code&gt;repeat_ends&lt;/code&gt; issue and I&amp;rsquo;ll have the RSpec output cleaned out.  Not sure that&amp;rsquo;s where my attention is most needed, but when I really can&amp;rsquo;t decide what high level issue to focus on, I guess it&amp;rsquo;s not a bad thing to do some sweeping up &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
