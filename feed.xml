<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-11-21T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Agile Workshop</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/21/agile-workshop/"/>
    <id>http://blog.url.com/2016/11/21/agile-workshop/</id>
    <published>2016-11-21T00:00:00+00:00</published>
    <updated>2016-11-21T10:21:20+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Friday was mainly consumed with a dry run of an Agile Project management workshop for non-profits and charities.  I&amp;rsquo;ve been working closely with Voluntary Action Harrow Cooperative (VAHC) for the last three years on the &lt;a href="https://www.harrowcn.org.uk"&gt;Harrow Community Network project&lt;/a&gt; which itself uses the &lt;a href="https://github.com/AgileVentures/LocalSupport"&gt;AgileVentures LocalSupport&lt;/a&gt; software&lt;/p&gt;

&lt;p&gt;&lt;img alt="Harrow Community Network Website" src="https://www.dropbox.com/s/j1n566aoa7hregq/Screenshot%202016-11-21%2009.36.51.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Over those three years we&amp;rsquo;ve been using an Agile project management approach to developing the software and coordinating the efforts and contributions of over 30 volunteers from &lt;a href="https://www.harrowcn.org.uk/contributors"&gt;all around the world&lt;/a&gt;.  We&amp;rsquo;ve been following the principles of behind the Agile Manifesto:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&lt;/p&gt;

&lt;p&gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&lt;/p&gt;

&lt;p&gt;Working software is the primary measure of progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I meet with VAHC at least once every two weeks to show them the latest deployments to the website and get feedback on any changes, and well as showing them work in progress. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome changing requirements, even late in development. Agile processes harness change for the customer&amp;rsquo;s competitive advantage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every meeting we review the &lt;a href="https://www.pivotaltracker.com/n/projects/742821"&gt;project board on Pivotal Tracker&lt;/a&gt;, with a particular focus on the features in the backlog.  The backlog is maintained with higher priority items towards the top of the backlog.  As requirements change we follow the clients advice about moving things up and down in the backlog, and even move things back to the icebox if they suddenly become of low relevance.  For example the story on &amp;ldquo;&lt;a href="https://www.pivotaltracker.com/story/show/116028767"&gt;being able to override doit vol ops&lt;/a&gt;&amp;rdquo; was top of the backlog at one point, but got moved onto the icebox as circumstances changed.&lt;/p&gt;

&lt;p&gt;Any new suggestions from the client are immediately added to the icebox and go through a voting process to estimate their technical complexity.  Once they are estimated they can be moved onto the backlog with the client&amp;rsquo;s consent and subject to the client&amp;rsquo;s preferences regarding priority.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Business people and developers must work together daily throughout the project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This can be challenging with a distributed team of developers all around the world.  We broadcast the client meetings via YouTube, and run a google hangout that developers are encouraged to join.  Any developer can participate in a client meeting, and can communicate with the client via email.  However as project manager I tend to funnel questions from developers through to the client, and bring them up in the client meeting.  Given the part time volunteer nature of our project it is difficult to support daily interaction between client and developers; and since we are all developers our &amp;ldquo;business people&amp;rdquo; are arguably the client, although we make no strong distinction between devs and non-devs in our distributed team.  Everyone is learning, everyone is participating.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every developer is free to work on what they are interested in.  The client&amp;rsquo;s preferred priorities are expressed through the priority ordering on the backlog, but developers can start any story that takes their interest.  We do strongly encourage all developers to put any unestimated story to a vote (either synchronous in a scrum, or asynchronous in a text vote) before starting work on it just to help increase awareness that they are interested in working on something.  They don&amp;rsquo;t need to wait for the vote to complete in order to start a spike or some experiments.  However it makes strong sense to let others know what you are thinking about so you can benefit from their thoughts and suggestions.  Even so this is not a hard and fast rule.  The software is open source and anyone can submit a pull request at any time, but getting involved in the voting and estimation process is a great way of staying on top of any information relevant to the task and increases the chance of a smooth merge of code later on, while reducing the chance of duplicated effort.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We agree, but we can&amp;rsquo;t afford to fly all the developers into the same location for this purpose.  Google hangouts gives us a close second to a face to face conversation, and I try to meet with the client in person where possible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able  to maintain a constant pace indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;rsquo;ve been maintaining a slow and steady pace for the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Continuous attention to technical excellence and good design enhances agility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All code is submitted to the project via Pull Request for open review.  We encourage everyone to use google hangouts to pair program online in order to get more immediate ongoing feedback as code is developed, although the logistics of time zones and lives don&amp;rsquo;t always support pairing.  Even with paired code, everything coming into the project is automatically checked for merge conflicts, tests passing, and style/coding guidelines.  Any developer can comment on any pull request, which we try to either close or merge within a week to avoid widely diverging branches.  The ultimate decision for merging rests with myself as project manager, and I try to maintain a match between any code coming in and the domain model that we have developed over the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simplicity&amp;ndash;the art of maximizing the amount of work not done&amp;ndash;is essential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I strongly encourage all developers, whether working on a chore, a bug fix or a feature, to submit the absolute minimum of code.  Only things related the specific ticket being worked on should be in the pull request.  The smaller the code changes in the pull request, the happier I am.  Small pull requests are easier to review, easier to merge, can often be done faster, and provide a more frequent sense of completion and progress for everyone involved.  Seeing something else that needs to be fixed? Open a refactoring ticket and submit a separate pull request for that.  There are always new folks coming into the project who will love a really simple refactoring ticket to allow them to get started on something where they don&amp;rsquo;t have to generate new tests. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best architectures, requirements, and designs emerge from self-organizing teams.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m a single point of failure in this project, although two or three others have access to all the necessary to continue merging and deploying if I was removed.  Other AgileVenture&amp;rsquo;s projects have more self-organising structures where PRs can be merged with the agreement of any 2 or 3 devs.  All structures are subject to revision.  Maybe ultimately the LocalSupport project management structure needs to evolve and change.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Earlier in the project we had weekly retrospectives, but with few dedicated full timers these have fallen away.  We&amp;rsquo;ve switched from many synchronous standups to more asynchronous voting in group text channels on Slack. The Agile principles are written around the idea of a full time co-located team, and we have adapted them to a volunteer part-time distributed team.  Our adaptations certainly need ongoing review and adjustment.  It&amp;rsquo;s not yet clear how best to ensure reflection, tuning and adjustment happens frequently enough.&lt;/p&gt;

&lt;p&gt;The workshop dry run (remember that?) involved a 90minute session in which we used the Agile process itself to try to answer the general challenge of better understanding Agile.  I initially presented the Agile Manifesto and talked about related concepts such as scrum and XP for a few minutes.  The overall structure, which compressed a two week sprint into 90 minutes was as follows:&lt;/p&gt;

&lt;p&gt;1) Present concept of Agile
2) Generate stories relating to Agile, and how it can be used in non-profits
3) Organise stories by theme, to identify core item and vote on them
4) Form teams and have each team pick a story
5) Teams each work on an individual story, preparing to present their thoughts
6) Each team presents their conclusions
7) Retrospective: each individual looks back on what went well, what could be improved&lt;/p&gt;

&lt;p&gt;The key stories that came out of the 2nd and 3rd stages above were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How does Agile handle dramatic shifts and changes? (1.5 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with other non-Agile organisations? (3 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with fluid staffing? (2 points)&lt;/li&gt;
&lt;li&gt;Agile Logistics (how to scrums and standups work) (1 point)&lt;/li&gt;
&lt;li&gt;Is Agile a good fit for non-profits and charities (3 points)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our three teams of two each chose one of the above and completed the 4th and 5th stages before presenting their thoughts to the whole group.  It all seemed to work pretty well, particularly with a group number of 6 sitting round a large table with the cards organised in front of us.  Everyone said they felt they understood Agile better and there were a lot of productive and interesting discussions.  One participant summed up Agile as an integration of strategy and operations, and I concurred.  Agile is not an absence of planning; it is a commitment to ongoing planning and reflection.  One confusion was that we were using the Agile process to understand the Agile process, and it was all rather meta.  How would you use it to solve specific problems and implement the solutions?  I proposed that after a session like this, one could do a full day inception event with a team where the story tickets would be actual challenges to the organisation, and the retrospective component would take place 2 weeks later.&lt;/p&gt;

&lt;p&gt;Anyway, first up we&amp;rsquo;ll be running a full version of this &amp;ldquo;Understanding the Agile Process&amp;rdquo; with frontline charity and non-profit folks in a group of 10-20 people.  Stay tuned to this blog to find out how that goes!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Microservices Question</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/18/microservices-question/"/>
    <id>http://blog.url.com/2016/11/18/microservices-question/</id>
    <published>2016-11-18T00:00:00+00:00</published>
    <updated>2016-11-21T10:41:36+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Michael was off sick and so I didn&amp;rsquo;t get back to WSO coding.  That&amp;rsquo;s one of the things about having a pair partner, they keep you focused on things.  The previous day we&amp;rsquo;d investigated the poor performance on the projects page, which had turned out to be our non-cached checks of code climate stats for projects.  There was lots of other clear up indicated, but the simple drive-by was to remove that functionality for the moment.  Then we wrapped a payment bug that a Premium user had encountered, and got a fix in.  There were a whole series of other refactorings and changes that I wanted to get to, and thought I might hit today, but I was distracted by further developing the AsyncBot and working with our new sponsor &lt;a href="http://drie.co"&gt;drie&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I got the AsyncBot up on &lt;a href="https://github.com/AgileVentures/async_slack_bot"&gt;GitHub&lt;/a&gt; and developed the spike a little further so it would announce updates in the channel the vote had been started in:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
              &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;'document the API'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
              &lt;span class="na"&gt;url&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'https://waffle.io/AgileVentures/AsyncVoter/cards/582afb10c2d2ce320075f487'&lt;/span&gt;
            &lt;span class="p"&gt;};&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'start new vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;start_channel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;!channel&amp;gt; NEW ASYNC VOTE on &amp;lt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'|'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'I received your vote: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s1"&gt;' &amp;lt;@'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;say&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;channel&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;start_channel&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;!here&amp;gt; ASYNC VOTE UPDATE '&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote_text&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;' on &amp;lt;'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;url&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'|'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;story&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;instructions&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I ran a couple of votes in the #websiteone channel and another in the #async channel.  I was getting much more of what I wanted as well as some useful feedback on the system:&lt;/p&gt;

&lt;p&gt;&lt;img alt="WSO channel vote" src="https://www.dropbox.com/s/5v6ii9lrpox5pi5/Screenshot%202016-11-18%2009.25.31.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It was clear that when the votes came on thick and fast that the messages were a bit overwhelming.  certainly room for some tuning.  Also running two votes in a row, we had confusion about what was being voted on from one user who hadn&amp;rsquo;t quite got caught up with their slack feed.  I have to say it is so nice to work with a small project where you&amp;rsquo;ve written all the code yourself, and you can tweak the interface as you please.  I can also see how without tests the whole thing could become a complete monster.  I also notice that unlike Ruby/RSpec I don&amp;rsquo;t have &amp;ldquo;throwing together a node test rig&amp;rdquo; memorised; I need to do some reps on setting those up so that I can&amp;rsquo;t use lack of familiarity there as an excuse for continuing the spike indefinitely.&lt;/p&gt;

&lt;p&gt;In the background we got the latest version of the AsyncVoter RESTful API running on &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; servers.  It seemed like the failing POST operation was just me not having pushed the right code out, and then getting confused about which endpoints were up and which weren&amp;rsquo;t.  In response I started a vote on documenting the AsyncVoter API, and Arreche got started on that.  It occurred to me that we might have moved faster by focusing on the Slack interface initially, but it is good to have a RESTful API up to try and avoid the worst spiky impulses.  It does feel that we&amp;rsquo;ve spent a while building something that could be generated in minutes by a Rails scaffold, or possibly even with Sails or a MEAN scaffolding operation.  That said this low level work is great for everyone to appreciate the core of a RESTful API.&lt;/p&gt;

&lt;p&gt;The question is now about architecture going forward and where the slack bot gets hosted.  I paired with Ben from &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; and looked at his analysis of our Harrow Community Network logs where he tried to work out how frequently the &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; apps should be sleeping in order to give us the best performance.  We ended up identifying the different needs of the final deployed app versus the developer experience during creating it.  It also seemed like it might be problematic to host the slack bot on the &amp;ldquo;&lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;&amp;rdquo; offering since it uses an &amp;ldquo;always-on&amp;rdquo; web socket and it&amp;rsquo;s not clear whether traffic from slack on the socket will be sufficient to wake up the instance.  I started to think about whether to just host the bot on AWS.  We host the auto graders on AWS and I&amp;rsquo;m pretty familiar with the interface &amp;hellip;&lt;/p&gt;

&lt;p&gt;In principle the slack bot could talk directly to the MongoDB in order to persist the details of the vote.  This would mean that it wouldn&amp;rsquo;t be easy to interrogate the bot about the vote other than outside the slack interface.  It would certainly be nice to have a web dashboard of all the ongoing votes and get statistics and all.  I guess we have the question of whether the micro services architecture gives us a short term win here?  By making the RESTful API and starting work on two different clients we&amp;rsquo;ve gone for a more distributed architecture that might make the development of any individual client slower, but will give us more flexibility in the long run?&lt;/p&gt;

&lt;p&gt;In the background I&amp;rsquo;m talking to possible new sponsors of AgileVentures and getting ready for our first mob programming sessions on Avdi Grimm&amp;rsquo;s &amp;ldquo;Confident Ruby&amp;rdquo; for those who&amp;rsquo;ve upgraded their Premium memberships.   I think we need the asynchronous voting to keep the individual projects ticking over, but we need more money coming in from sponsors and premiums if we&amp;rsquo;re going to be able to continue to offering all our services, both free and premium.  There&amp;rsquo;s a new feeling of momentum to the community, but as I was saying the other day, it&amp;rsquo;s not just a question of sitting around and waiting for the growth.  Each bit of growth still has to be fought for at this stage, although perhaps the battle is getting easier - until we start coasting after we achieve that fabled critical mass? :-)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still not sure on the microservices question.  Will breaking things up help us avoid a monolith, and follow the single responsibility principle of having one app for each separate function?  It&amp;rsquo;s worked out well for Amazon, but then they&amp;rsquo;re at a completely different scale.  Right now I feel like I&amp;rsquo;m maintaining three different monoliths (LocalSupport, WebSiteOne and AutoGraders) and it always feels precarious when adding a new element.  I guess it&amp;rsquo;s ant colonies versus large vertebrates; single celled, versus multi-cellular organisms.  There&amp;rsquo;s pros and cons to each degree of organisational coupling.  As Kent Beck would say, it depends &amp;hellip; :-) &lt;/p&gt;

&lt;h3&gt;Related Video:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=lCm8Ht7vvp8"&gt;Pairing on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_fogY2nGq2Q"&gt;Previous days &amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=MW6JuYJSEQA"&gt;Pairing on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=soSqEHPT3tU"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=SoILIjeb02E"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Semi Automatic Asynchronous Planning Poker Bot</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/17/semi-automatic/"/>
    <id>http://blog.url.com/2016/11/17/semi-automatic/</id>
    <published>2016-11-17T00:00:00+00:00</published>
    <updated>2016-11-18T12:13:46+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;The AsyncVoter project has been humming recently.  A lot of people interested in coding in Node, putting a React front end together and so on.  They say that JavaScript is hot.  We&amp;rsquo;ve also had new folks come in and start to understand some of the Agile development approach, self-organise to get a series of basic RESTful endpoints in place.  All great, but I was starting to worry that our little RESTful MVP was not really making enough contact with end users.  I was getting antsy that we needed to start automating some of the tedious and error-prone parts of running asynchronous votes manually in project slack channels.&lt;/p&gt;

&lt;p&gt;I felt that Slack integration was key.  We had another vote on refactoring test support code so couldn&amp;rsquo;t start another vote on Slack integration if I was to follow my own guidelines of no voting on multiple stories in parallel.  I settled for moving the Slack integration ticket to the top of the backlog and searching for integration mechanisms.  Several of our systems ping messages to Slack, but I wanted more.  Custom slash commands for Slack looked like they might work, but they had custom payloads that our RESTful endpoint wasn&amp;rsquo;t set up to process.  I didn&amp;rsquo;t like the idea of customising endpoint specifically for Slack, since it would be nice to support other clients as well.  I also wanted to be able to have a personal bot that our community members could interact with.  I went ahead and made a &lt;a href="https://api.slack.com/bot-users"&gt;custom bot integration&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img alt="AsyncVotingBot integration" src="https://www.dropbox.com/s/wopizsow3ortdbu/Screenshot%202016-11-17%2009.17.40.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s easy to get put off making custom commands and integration in Slack when they paste the &amp;ldquo;Your team has reached the integration limit&amp;rdquo; all over the place.  However this doesn&amp;rsquo;t mean you can&amp;rsquo;t add more configurations on the integrations you already have, including slash commands and bots.  One thing that accelerated my progress here was &lt;a href="https://howdy.ai/botkit/"&gt;botkit&lt;/a&gt;, which allowed me to avoid diving into Slack&amp;rsquo;s real time messaging API and just get up and started super fast.  Ironically, as I put the bot together Arreche found a &lt;a href="https://github.com/Sergej-Popov/hubot-planning-poker"&gt;Planning Poker Plugin&lt;/a&gt; for hubot and was getting that set up in another channel.  There are no new things under the sun!  &lt;/p&gt;

&lt;p&gt;Just writing this blog I did a search for &amp;ldquo;slack planning poker&amp;rdquo; and found a number of things that would have been good to review and check earlier:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;https://tangocode.com/2015/12/scrum-planning-poker-for-slack-part-1/&lt;/li&gt;
&lt;li&gt;https://github.com/apheleia/plan-b-ot&lt;/li&gt;
&lt;li&gt;https://github.com/nateyolles/slack-pokerbot&lt;/li&gt;
&lt;li&gt;https://github.com/paulodiovani/planning-poker-slack&lt;/li&gt;
&lt;li&gt;https://www.scrumbot.co/&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although I think most of these are designed for synchronous operation, i.e. assuming that the team will all be assembled in the channel at the same time.  What I&amp;rsquo;m really after is something that can maintain open votes on a number of channels and provide a mechanism for people to check what they need to vote on, and have the bot proactively prompt the channel to ensure that votes don&amp;rsquo;t get left hanging.&lt;/p&gt;

&lt;p&gt;I went ahead and had fun creating a bot and running a semi-automated asynchronous vote in the #async_voter channel:&lt;/p&gt;

&lt;p&gt;&lt;img alt="async bot announces" src="https://www.dropbox.com/s/j2vu3nwh53yt1hp/Screenshot%202016-11-17%2009.28.26.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Each team member messaged the bot independently like so:&lt;/p&gt;

&lt;p&gt;&lt;img alt="me messaging the bot" src="https://www.dropbox.com/s/obn0y3xphjn85pg/Screenshot%202016-11-17%2009.29.38.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;and then I prompted the bot to display the result:&lt;/p&gt;

&lt;p&gt;&lt;img alt="async bot results" src="https://www.dropbox.com/s/4s2pjly2u2emsaf/Screenshot%202016-11-17%2009.28.58.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the complete code for the bot:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;
&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Botkit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'botkit'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;controller&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Botkit&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;slackbot&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;spawn&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="na"&gt;token&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"&amp;lt;SLACK_BOT_TOKEN&amp;gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;startRTM&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;votes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'start vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;!channel&amp;gt; NEW ASYNC VOTE on "Slack Integration" https://github.com/AgileVentures/AsyncVoter/issues/12  Please DM me with: `vote 1` (Simple), `vote 2` (Medium) or `vote 3` (Hard) - Discussion in ticket or here as you prefer. :slightly_smiling_face:'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'vote'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;match&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/&lt;/span&gt;&lt;span class="se"&gt;\d&lt;/span&gt;&lt;span class="sr"&gt;+/&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="na"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="na"&gt;user&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'I received your vote: '&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;  &lt;span class="s1"&gt;' &amp;lt;@'&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s1"&gt;'&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="nx"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;hears&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'result'&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s1"&gt;'direct_message'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;'direct_mention'&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'votes so far: \n\n'&lt;/span&gt;
  &lt;span class="nx"&gt;votes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;forEach&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;response&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s1"&gt;'&amp;lt;@'&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;user&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'&amp;gt; voted: '&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;vote&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;vote&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'\n'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;});&lt;/span&gt;
  &lt;span class="nx"&gt;bot&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;reply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nx"&gt;response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that I hard coded the ticket I wanted the vote on and I ran locally without any persistence, so if my code or computer crashed then state would be lost, AND the bot needed to be prompted to both start &amp;amp; finish the vote.  We could wail and gnash our teeth and say that we need all those features sorted before we could push the bot live, but by eschewing them I was able to run a proof of concept of a successful vote in a channel, and I actually saved myself having to manage all the DMs I get during a manual vote.  You can say, oh, it&amp;rsquo;s obvious that it would all work, but I don&amp;rsquo;t trust computers to do what I think they&amp;rsquo;ll do.  My mental model of them is so often faulty.&lt;/p&gt;

&lt;p&gt;I also spiked this without tests.  I did manually test the code in a private channel before unleashing it on #async_voter, but I think this is a situation to spike, to get a tracer bullet in to see the round trip.   Of course the danger here is to get drunk with power and keep building on top of this untested code until it really is a total mess and impossible to change without breaking something.  We&amp;rsquo;ve got a nice tested RESTful core ready to start storing the data persistently.  I can run a few more test votes on other channels, and gradually refine the look and feel of the bot, ensuring along the way that it is having the positive effect on the projects and community that I am hoping for.&lt;/p&gt;

&lt;p&gt;I think this is the core of the Agile process.  Apart from remembering to reflect on your process frequently, it&amp;rsquo;s getting some sort of working system in front of the end users as often as possible.  I&amp;rsquo;m also a big fan of this semi-automated approach.  I still had to intervene to stop and start the vote, but it saved me some time compared to a full manual run.  Having confirmed the partial utility of the system I can cautiously automate more and more.  What I really need to add next is to have the bot update the channel where the vote started when someone makes a vote.  Let&amp;rsquo;s see if I can add a little of that today &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Automating What To Do Next</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/16/automating-what-to-do-next/"/>
    <id>http://blog.url.com/2016/11/16/automating-what-to-do-next/</id>
    <published>2016-11-16T00:00:00+00:00</published>
    <updated>2016-11-17T10:22:01+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;After the &amp;ldquo;Martin Fowler&amp;rdquo; scrum I caught up with Raphael to talk about the dynamic of the AsyncVoter project.  Raphael had been suggesting a team meeting.  Team meetings can be great.  I think if a team wants to move forward fast it&amp;rsquo;s great to get everyone in a room, and ideally match that with a shared working space that everyone can come to.  However that usually takes a lot of money to set up :-)  Although, having the team all distributed around the world might have advantages in terms of pulling in more influences and perspectives.  Of course you don&amp;rsquo;t need a shared space for a team meeting.  We&amp;rsquo;ve run them regularly on different projects at different times.  The ability to have them is a function of team members&amp;rsquo; availability.  Sometimes teams will form or dissipate based on whether there is sufficient overlap in their schedules. &lt;/p&gt;

&lt;p&gt;Part of the idea behind the AsyncVoter project is to reduce the need for team meetings.  Not that a team shouldn&amp;rsquo;t get together if they want to, but in WSO at least I&amp;rsquo;d got the sense that people weren&amp;rsquo;t enjoying the meetings, which usually involved voting on tickets in the backlog.  In LocalSupport people were just not on at the same time, or couldn&amp;rsquo;t use hangouts.  I wondered if part of desire for a team meeting was related to the issue was understanding what to do next.  In a session with Raphael off the back of the &amp;ldquo;Martin Fowler&amp;rdquo; scrum I wrote up the following:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Using Waffle and GitHub to work out what to do next
---------------------------------------

0) if there are any [open PRs](https://github.com/AgileVentures/AsyncVoter/pulls) then review them and if possible give feedback

1) are there any tickets "in progress" on [waffle](https://waffle.io/AgileVentures/AsyncVoter)? If you'd like to help reach out to the assigned team member to see if you can help

1) is there an estimated ticket in the ready column on waffle that I am interested in working on?
1a) yes --&amp;gt; then start work on it, pairing or not

1b) no --&amp;gt; find a ticket from the backlog (on waffle) that I'm interested in and start a vote (in a scrum, or async)

2) throughout process rather than adding new features, new elements or major refactoring to the existing ticket, freely make new tickets to go on to the backlog (on waffle)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Hopefully that was some help.  It seems transparent in my mind as a way of doing distributed Agile work, but there&amp;rsquo;s no reason why others should have that pattern in their minds.  Would be great to have one of those animated videos showing the flow.&lt;/p&gt;

&lt;p&gt;Michael and I started off following the above pattern for WSO after lunch.  We went through the open pull requests, &amp;ldquo;in progress&amp;rdquo; tickets, the &amp;ldquo;ready&amp;rdquo; column and the &amp;ldquo;estimated&amp;rdquo; column.  We have an additional column in WSO called estimated for those tickets we have voted on but yet to prioritise:&lt;/p&gt;

&lt;p&gt;&lt;img alt="WSO waffle board" src="https://www.dropbox.com/s/o2kc9kx6gimfmx0/Screenshot%202016-11-16%2009.31.25.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;As usual, I agonised about all the different things we seemed to need to get done on WSO, but ultimately followed the &amp;ldquo;drive by&amp;rdquo; or &amp;ldquo;whistle-stop&amp;rdquo; approach that says finish things that are in the rightmost columns on the board, and if there isn&amp;rsquo;t easy progress move back across the board from right to left so that columns get cleared out (assuming &amp;ldquo;done&amp;rdquo; is rightmost).  I&amp;rsquo;m a terrible person for leaving stuff lying around.  I&amp;rsquo;ve also noticed that as you clear stuff up you make more space to think about new things.  We attacked a ticket in the ready column related to AgileBot that looked simple.  Michael drove for an hour, and we got the functionality we needed, but identified &amp;ldquo;oh so many&amp;rdquo; &lt;a href="https://github.com/AgileVentures/agile-bot/issues/45"&gt;refactoring&lt;/a&gt; needs.  I&amp;rsquo;m still intimidated by the apparent brittleness of the Hubot stack we have on AgileBot.  We followed the drive-by pattern and moved on to pastures new after the &amp;ldquo;Kent Beck&amp;rdquo; scrum.&lt;/p&gt;

&lt;p&gt;Raoul had joined us in the scrum, which gave us a chance to talk about whether we were missing team meetings on WSO and whether the AsyncVoting was replacing the team meetings effectively.  Michael reflected that there were a few people who attended those meetings who weren&amp;rsquo;t around now.  Neither Michael nor Raoul seemed passionate about re-instating regular long meetings voting on tickets, and I reflected that what I really wanted was the AsyncVoter bot to kick in and keep us regularly voting on tickets.  We&amp;rsquo;ve built a little RESTful core, and I&amp;rsquo;m worried that we have to hook up fast to something that actually benefits the community.  I&amp;rsquo;ve got to get a slack bot shell working even if it&amp;rsquo;s only semi-automated!&lt;/p&gt;

&lt;p&gt;After the scrum I drove on a ticket addressing missing video links on the main WSO site.  That was fairly straightforward, and although there&amp;rsquo;s still lots of technical debt to pay down on both WSO and AgileBot, we managed to get a feature out and a bug fix in place while not making the code any worse.  In fact I think we improved the test config for AgileBot and reduced the numbers of line in the app code for both projects.   In the ideal world we&amp;rsquo;d have a bigger team of folks helping us knock off these additional refactoring tickets we keep generating.  In slack Mikael was making some great suggestions about AgileVentures letting people know what they could do to help, given the amount of time they have to spare, e.g. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;lt;15 minutes to spare?  Review a pull request, vote on a ticket, or even start a new vote&lt;/li&gt;
&lt;li&gt;&amp;lt;30 minutes to spare? join a scrum and say hi, give us an update on what you&amp;rsquo;re doing, read a project&amp;rsquo;s documentation; observe a pairing session&lt;/li&gt;
&lt;li&gt;&amp;lt;60 minutes to spare? Start getting set up with a code base for a new project&lt;/li&gt;
&lt;li&gt;&amp;lt;90 minutes to spare? Start working on a ticket, join a pairing session&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What I&amp;rsquo;d really love is a performant version of WSO that could give every user a feed of things to do with associated time commitments.  Almost like the feed of unanswered questions from StackOverflow, but a feed of chunks of work to be done on tickets, voting on things, reviewing code:&lt;/p&gt;

&lt;p&gt;&lt;img alt="StackOverflows unanswered question feed" src="https://www.dropbox.com/s/pvp2i3q3d3xkpmm/Screenshot%202016-11-16%2009.48.54.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Maybe that will be easier to achieve than the wall of pairing/meeting live stream video feeds I keep imagining.&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=aYCGCegwjvY"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qRCeF-IECaU"&gt;Pairing on AgileBot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=1gMF_0oALyY"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=tKqG-pSQcfU"&gt;Pairing on WebSiteOne&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Multiple Pull Request Learning</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/15/multiple-pull-request-learning/"/>
    <id>http://blog.url.com/2016/11/15/multiple-pull-request-learning/</id>
    <published>2016-11-15T00:00:00+00:00</published>
    <updated>2016-11-18T12:13:35+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I didn&amp;rsquo;t get much solo or pair time coding today. It was a day of helping Premium member&amp;rsquo;s with bug fixes and reviewing pull requests.  The &amp;ldquo;Martin Fowler&amp;rdquo; scrum was crowded and brought up various requests for help, support and review.  I started by creating a hangout to look at Sasha&amp;rsquo;s WSO pull request to check whether YouTube videos were valid before tweeting them.  Sasha was concerned whether he&amp;rsquo;d sandboxed correctly, and I explained the &lt;code&gt;@vcr&lt;/code&gt; tag we had that meant individual VCR cassettes weren&amp;rsquo;t necessary.  More interestingly we were seeing that the tweets going out were slightly out of sync with their messages.  Sasha was investigating the issue of invalid YouTube links going into the tweets:&lt;/p&gt;

&lt;p&gt;&lt;img alt="AV tweets" src="https://www.dropbox.com/s/845stvx878zuumo/Screenshot%202016-11-15%2009.23.27.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;What we were seeing was that the tweets to post the hangout link and the finished video were both going out as soon as the hangout started.  Sometimes the person starting the hangout wouldn&amp;rsquo;t press &amp;ldquo;Start Broadcast&amp;rdquo; so the YouTube video link would lead nowhere. There was no feature test covering this twitter functionality, and so I wrote one out:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Tweeting Live Events
  As a site admin
  In order to increase participation in events
  I would like live events to generate twitter notifications

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nf"&gt;Given&lt;/span&gt; an event &lt;span class="s"&gt;"Scrum"&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Event going live causes tweet of hangout link to be sent
    &lt;span class="nf"&gt;Given&lt;/span&gt; that the HangoutConnection has pinged to indicate the event start
    &lt;span class="nf"&gt;Then&lt;/span&gt; an appropriate tweet has been sent  

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Event stream going live causes tweet of the youtube stream to be sent
    &lt;span class="nf"&gt;Given&lt;/span&gt; that the HangoutConnection has pinged to indicate the event start
    &lt;span class="nf"&gt;And&lt;/span&gt; youtube stream has gone live
    &lt;span class="nf"&gt;Then&lt;/span&gt; an appropriate tweet has been sent &lt;span class="c"&gt;# e.g. see live stream&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Broadcast termination causes tweet of the youtube URL to be sent
    &lt;span class="nf"&gt;Given&lt;/span&gt; that the HangoutConnection has pinged to indicate the event start
    &lt;span class="nf"&gt;And&lt;/span&gt; youtube stream has gone live
    &lt;span class="nf"&gt;And&lt;/span&gt; that recording has finished
    &lt;span class="nf"&gt;Then&lt;/span&gt; an appropriate tweet has been sent &lt;span class="c"&gt;# e.g. see recording&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sasha asked the important question of did we really want to be posting all this stuff to Twitter.  I guess the motivation is that by posting hangouts, live streams and videos to Twitter then we increase the chances that people will watch out videos and join our hangouts.  Looking at my YouTube traffic report for the last year I see that 5.3% of watch time on my video account comes from Twitter:&lt;/p&gt;

&lt;p&gt;&lt;img alt="pie chart" src="https://www.dropbox.com/s/z66n3h4046zp3oi/Screenshot%202016-11-15%2009.32.54.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt="pie chart legend" src="https://www.dropbox.com/s/hjdtgfld0lph838/Screenshot%202016-11-15%2009.33.30.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;compared to 60% from edX, 8.3% from Google search and 6.6% from the AV site itself.  While social media traffic to our AV site (over the last year) was dominated by Google+, Meetup, StackOverflow, Facebook and LinkedIn.  Twitter came in 8th with only 3.46%.  Now maybe this is because of broken video links, or because the feed is almost entirely automated. Either way, what we were putting out there was inconsistent, and the simplest fix was to only tweet the video link once the broadcast went live, and Sasha and I saw there was an easy check we could make for that through the YT gem.   Sasha had to run off to do a tech test; which made me think it would be awesome if tech companies would take AV participation as a tech test equivalent!&lt;/p&gt;

&lt;p&gt;After lunch I merged an &lt;a href="https://github.com/AgileVentures/LocalSupport/pull/396"&gt;exquisitely small and updated PR on LocalSupport&lt;/a&gt; from new contributor Kostas and then jumped on an AsyncVoter performance testing issue, running a profile of the AsyncVoter app running on &lt;a href="http://drie.co"&gt;drie&lt;/a&gt; and heroku.  &lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ ab -n 50 https://async-voter-production.herokuapp.com/stories

Time per request:       381.987 [ms] (mean)

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:      257  280   7.4    284     288
Processing:    92  102   7.3    100     130
Waiting:       92  102   7.3    100     129
Total:        353  382  11.8    384     414

Percentage of the requests served within a certain time (ms)
  50%    384
  66%    385
  75%    387
  80%    389
  90%    399
  95%    401
  98%    414
  99%    414
 100%    414 (longest request)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;drie&amp;rsquo;s average was slightly faster, but the variance was much larger:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ ab -n 50 http://master.async_voter_production.app.push.drieapp.co/stories

Time per request:       355.193 [ms] (mean, across all concurrent requests)

Connection Times (ms)
              min  mean[+/-sd] median   max
Connect:       88   91   2.2     93      94
Processing:    92  264 474.9    100    3093
Waiting:       92  264 474.9    100    3093
Total:        180  355 475.1    193    3186

Percentage of the requests served within a certain time (ms)
  50%    193
  66%    196
  75%    220
  80%    486
  90%    881
  95%   1102
  98%   3186
  99%   3186
 100%   3186 (longest request)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was a very rough test and not really fair on drie since we&amp;rsquo;d just used both the apps, so Heroku was awake and didn&amp;rsquo;t suffer a start up cost.  But drie currently sleeps their &amp;ldquo;push&amp;rdquo; apps every 30 seconds, which explains the variance and means we would suffer the slow start up costs much more frequently.  I was able to take that data to discuss with the drie folks in our regular catch up meeting.  No sooner was that done that I was on a bug hunt with new Premium member Rose, identifying issues with seed files and cucumber tests.  After we got the BURideShare cukes green, I took a quick pass through an &lt;a href="https://github.com/strawberrycanyon/redeemify/pull/43"&gt;updated Redeemify pull request&lt;/a&gt; which had been updated really nicely.  &lt;/p&gt;

&lt;p&gt;I was trying to get a handle also on the new SHF-project, reviewing the new &lt;a href="https://github.com/AgileVentures/shf-project/blob/develop/CONTRIBUTING.md"&gt;CONTRIBUTING.md&lt;/a&gt; from Ashley and then joining a hangout with Ashley and Susanna who were discussing a &lt;a href="https://github.com/AgileVentures/shf-project/pull/22"&gt;pull request&lt;/a&gt;.  Susanna was keen to get it pulled in after having followed one set of advice from one mentor, but Ashley was concerned that things were getting too complex, and I was inclined to agree with her.  I offered what advice I could and then had to go to supper.  Bottom line is that it&amp;rsquo;s okay to accrue technical debt from things like using non-RESTful controller methods, but it&amp;rsquo;s good to be aware that you&amp;rsquo;re doing that and that you&amp;rsquo;ll pay a price later on.  If you&amp;rsquo;ve got to move fast right now then guidelines can be ignored, but short term speed has to be balanced against long term progress.&lt;/p&gt;

&lt;p&gt;In summary a productive day I think, although I didn&amp;rsquo;t spend much time focused on one thing.  Great to see so many active projects on AgileVentures, and so much learning arising from all the pull requests coming in.  We just need lots more of this and lots of processes in place to ensure my head doesn&amp;rsquo;t spin off trying to keep track of it all :-)&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?feature=player_embedded&amp;amp;v=kkm2KdUDuC8"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=k4UrtG6Q0vw"&gt;WebSiteOne Code Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=rwc4luv4_6c"&gt;AsyncVoter Performance Testing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=eNfi_j6BT0k"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=qjfV2_DFG18"&gt;Bug Hunt on BURideShare&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Banking Disruption</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/14/banking-disruption/"/>
    <id>http://blog.url.com/2016/11/14/banking-disruption/</id>
    <published>2016-11-14T00:00:00+00:00</published>
    <updated>2016-11-15T09:58:02+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;My main achievement on Friday was opening a bank account for the AgileVentures charity.  This has been a long time coming.  I originally started with Lloyds bank and spent an hour or so on the phone explaining the whole concept of &amp;ldquo;in context learning on charity IT projects&amp;rdquo; to them, before receiving a lot of self-contradictory paperwork that they didn&amp;rsquo;t respond to my email queries about.  The need for a bank account has become more pressing as we start to have a non-trivial Premium payments coming through Stripe.  It&amp;rsquo;s still a small trickle, but with our new sponsor drie, we&amp;rsquo;re on the road to becoming sustainable early next year if we can keep up our current rate of growth.  That might make it sound like we can just wait for that growth to happen, but every little bit of growth requires a lot of hard graft on my part, as well as lots of generous donations of time and effort from our AV mentors.  I also have to make sure that in the process of bringing in new sponsors and premium members that we keep supporting our existing sponsors and premium members.  Simplify, Eliminate, Delegate, Automate!&lt;/p&gt;

&lt;p&gt;Having given up on making progress with Lloyds, I heard that the new UK bank &amp;ldquo;Metro&amp;rdquo; had a reasonable charity account, and that some other local charities had got set up with them before official UK charity status approval (which we are still waiting for - no updates since July &amp;hellip;), and seeing their neat, open-plan branch in my local town centre, and their modern looking website I thought I&amp;rsquo;d give them a try.  I&amp;rsquo;ve also received advice that the Coop bank and Triodos were good options.  Metro had an email link for charities and I emailed them and got an email back within a day.  Responsivity by email is a big plus. Looking back I probably should have mailed all three possible banks to see how fast a response came. I did notice that with Metro I was emailing a specific person at rather than a &lt;code&gt;charities@metrobank.co.uk&lt;/code&gt;, but I pressed on.  We needed to provide the charity constitution, signed minutes of a trustees meeting agreeing to open the bank account, various ID for the bank account signatories, and fill out an application form.  &lt;/p&gt;

&lt;p&gt;&lt;img src="https://www.dropbox.com/s/8f0kxo94ckkaz3d/Screenshot%202016-11-14%2009.25.52.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Over the course of several weeks we assembled all the different components and sent them off to my contact at the head office.  We had a good back and forth in email with my contact checking electronic copies of the documents before I mailed in signed versions.  It seemed to be going well.  I got the last package of documents together and sent them of, paying extra for a verified delivery.  Then nothing.  No communication.  My emails unanswered.  My contact also had a cellphone number on their email signature.  I texted, I left messages, nothing.  After a few days I started calling the head office and trying to get them to contact me.  It turned out that my contact was on annual leave.  Fair enough, although it would have been nice to be getting annual leave notification messages against the emails I was sending.  I was starting to get frustrated.&lt;/p&gt;

&lt;p&gt;It turns out that another person was trying to contact me via email, but they had my email address mis-spelt from the operators I&amp;rsquo;d been speaking to when I was calling the bank.  Eventually we got that figured out, but I didn&amp;rsquo;t manage to make a connection with this person.  They kept on asking me to send in additional paperwork that I believed I had already sent.  I held off as presumably my original contact would soon be back from annual leave and could sort it out.  It stretched out and it seemed that annual leave had become leaving.  I finally managed to speak to the new contact in real time on the phone and established that we had sent in all the paperwork, but that we would have to go into the bank to confirm our identities.&lt;/p&gt;

&lt;p&gt;My plan to save time by doing this all online had backfired.  I&amp;rsquo;d been trying to prefer email but that had caused delays.  Finally on Friday Rachel and I went into the bank and got our identities confirmed, and started working through the other paperwork.  Ultimately it took over 2 hours, first because the bank was saying the accounts they provided couldn&amp;rsquo;t support the detailed finance policy we&amp;rsquo;d put in the minutes.  I was fuming.  I called up the other trustees and on speaker phone allowed the bank manager to hear their approval for an account without detailed support for the finance policy which we would be implementing ourselves rather than relying on bank restrictions.&lt;/p&gt;

&lt;p&gt;That done the bank manager had to re-type the entire PDF application form that I had filled out and sent in.  I was hoping that a recently setup modern bank would be just the sort to avoid this sort of ridiculousness.  Rachel and I caught up and I supported the AV slack channels in the background as we ground through the process.  We were just about to give up and leave when it was all done.  We got bank cards, and I got the online banking hooked up, and the all important sort code and account number that would allow me to issue new invoices and sort out the AgileVentures finances.&lt;/p&gt;

&lt;p&gt;I still like what MetroBank is trying to do.  I think the UK banking industry is ripe for disruption.  Maybe it being difficult to open an account is in some sense a feature.  Convoluted and unnecessary steps discourage all those but the truly serious.  Maybe one day the decentralised cryptocurrencies will replace all this, but I&amp;rsquo;m not holding my breath &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
