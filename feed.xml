<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-11-28T00:00:00+00:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title/>
    <link rel="alternate" href="http://blog.url.com/2016/11/28/local-charities/"/>
    <id>http://blog.url.com/2016/11/28/local-charities/</id>
    <published>2016-11-28T00:00:00+00:00</published>
    <updated>2016-11-29T15:20:38+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Friday was full of meetings.  I started off heading down to the &lt;a href="https://www.harrowcn.org.uk/organisations/carramea-community-resource"&gt;Carramea Community Resource Center&lt;/a&gt; (formerly the Consortium of Anti-Racist Refugee and Minority-Ethnic Associations). Carramea has been operating in South Harrow for over 12 years, and provides affordable office solutions for small charities and voluntary groups; as well as IT and Language classes.  I&amp;rsquo;d met the head honcho Tony O&amp;#39;Hara at local WoodCraft and other charity events, and that morning Rachel from Voluntary Action Harrow Cooperative was running a training session to show some of the staff how to work with Harrow Community Network (HCN), Do-It and SurveyMonkey.&lt;/p&gt;

&lt;p&gt;I was there to observe and took notes as Rachel guided three staff through the mechanisms to update directory information in HCN, and to post volunteer opportunities.  Tony dropped in and out as he covered the reception desk while the training session was underway.  Rachel then went on to show how to post opportunities on Do-It and give pro-tips.  Carramea already had an opportunity up on Do-It (for volunteer receptionists) and it was already showing in our system, having been pulled in automatically from the Do-It database.&lt;/p&gt;

&lt;p&gt;&lt;img alt="Carramea volunteer opportunity on HCN" src="https://www.dropbox.com/s/aa2o2g87b23z98p/Screenshot%202016-11-28%2009.42.00.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;We may have been projecting, but it seemed clear that there was not much incentive for the Carramea staff to add volunteer opportunities directly through our interface unless it would also post them to Do-It.  And even then, it would probably take a superlative user experience, and posting to other sites such as TeamLondon and ReachSkills in order for it to be worth their while.  This sort of system does seem to be Rachel&amp;rsquo;s vision for Harrow Community Network going forward.  No one wants to be entering the same information over and over, and if we can create a seamless experience that allows posting to multiple volunteer sites we really might start to see usage of the HCN site go up.&lt;/p&gt;

&lt;p&gt;As Rachel went on to train the staff on SurveyMonkey one of the main things that seemed to be causing a drag was password management, and at the end when asked, I suggested that perhaps 1password or LastPass might be something that the Carramea might like to try internally.   It had been great to see a local charity being shown the HCN site.  As a training session we didn&amp;rsquo;t get to see usability problems that might come up when the staff use it independently, but that pushes me to get better at monitoring and interpreting the site usage.&lt;/p&gt;

&lt;p&gt;Then I dashed back to my home office to get the days blog up, try out a new process of editing blogs directly on GitHub and do pull requests from a branch to auto notify the #blog_drafts channel, then lunch and a Premium Plus pairing on P vs NP and classic problems like Travelling Salesman, Knapsack and 3-SAT.  I must dig out the paper I wrote on 3-Sat &amp;hellip;&lt;/p&gt;

&lt;p&gt;There wasn&amp;rsquo;t much chance to reflect though, I was immediately off to another local charity event.  Rachel had suggested I come along to the Youth First event, an initiative being funded by Harrow Council through the &lt;a href="https://youngharrowfoundation.org"&gt;Young Harrow Foundation&lt;/a&gt;, which seems to center around creating a platform for Youth services, resources and opportunities in Harrow.  In particular an app which young people could use on their phones to find out about activities and resources local to them in the hope that this would help those who might otherwise fall in with gangs or fall out of the system due to challenges such as mental health problems.  I got there early and did a quick on-location &amp;ldquo;Kent Beck Scrum&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;At the event itself there were moving speeches by a former gang member, and another youth who&amp;rsquo;d faced mental health challenges, about the paths they&amp;rsquo;d ended up taking and how they&amp;rsquo;d turned things around.  There was enthusiastic applause for both, and I was particularly struck by the former gang member who&amp;rsquo;d turned to crime to get money to pay for things like going to football training.  I&amp;rsquo;m coach of an under eight soccer team, and it makes me think about ways in which we can make things more affordable for disadvantaged youths and their families.  I also met Lynne who works with former gang members and told me there are free football sessions being run in Harrow, so there&amp;rsquo;s definitely room for connecting young people with the resources available to them.&lt;/p&gt;

&lt;p&gt;There was concern voiced at the event about the longevity of the project.  Apparently a well-intentioned website had previously tried to do something similar in the past, but had fallen by the wayside.  We heard that the council had already selected an IT firm to deliver on the project for the next five years, but I worry that this will go the way of similar large projects where the feedback from the community and end-users do not reach the developers.  Or does not reach them quickly enough to have an impact.  Clearly disadvantaged youths are not going to always have cellphones, but care-worker and other support folks will, and in round table discussions we talked about how just having that information to hand could be very useful.  At the same time it&amp;rsquo;s another dangerous &amp;ldquo;technology to the rescue&amp;rdquo; setup.  Another member of the round table pointed out that even with the information about what&amp;rsquo;s available locally there&amp;rsquo;s actually getting individuals to the take the step towards attending events, and reaching out for support.&lt;/p&gt;

&lt;p&gt;Similarly it occurred to me on the way home that part of the challenge is the increasing population in Harrow, with many single family occupancy houses being turned into bedsits for 5 or 6, and the building of low-rise flats in almost every available free space.  Harrow might seem to be a privileged borough in North West London, but it&amp;rsquo;s not without its problems.  The Youth Offer event was taking place the day after a &lt;a href="http://www.standard.co.uk/news/crime/student-stabbed-outside-south-harrow-tube-station-loses-fight-for-life-a3403541.html"&gt;19 year old died&lt;/a&gt; from an apparently unprovoked knife attack outside South Harrow tube station, just down the road from the Carremea offices.&lt;/p&gt;

&lt;p&gt;It was a packed day, but great to see the connection between our work and members of the community.  The difficulty with being charity and non-profit focused is that money is scarce, and everything&amp;rsquo;s being run on a shoestring.  And let&amp;rsquo;s not fool ourselves that we&amp;rsquo;ll have a positive impact by throwing technology at the problem; let&amp;rsquo;s keep everything on the table and try to have an impact first and foremost and worry about which tools and technology we use second.  That said these are projects that you can really put your heart and soul into, because they are fighting to make a positive difference in people&amp;rsquo;s lives, not just fighting to make a buck.  If you believe there&amp;rsquo;s more to life than money then come join us and put your heart and soul into projects that can make a difference worth fighting for.&lt;/p&gt;

&lt;h3&gt;Related Videos&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=w6iiaACBfWk"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dV0zpULNXHQ"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Mob Programming</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/25/mob-programming/"/>
    <id>http://blog.url.com/2016/11/25/mob-programming/</id>
    <published>2016-11-25T00:00:00+00:00</published>
    <updated>2016-11-28T09:33:29+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;We ran our first AV Premium Mob Programming session looking at code from the book &amp;ldquo;Confident Ruby&amp;rdquo; by Avdi Grimm.  We created a Cloud9 workspace and gave everyone access to the enviroment.   We had four Premium members join the hangout, and I introduced some of the concepts from &amp;ldquo;Confident Ruby&amp;rdquo; before playing with some of the code samples.  All the members in the hangout had read and write access to the Cloud9 workspace, but on this first occasion I did most of the typing.  Most of the members had Avdi&amp;rsquo;s book or had been listening to the Ruby Book Club podcasts that cover it, but it was the first time mob programming for all of them, and hopefully we&amp;rsquo;ll get them doing more typing in future sessions.&lt;/p&gt;

&lt;p&gt;We focused on Avdi&amp;rsquo;s &amp;ldquo;Use built-in conversion protocols&amp;rdquo; &lt;em&gt;Collecting Input&lt;/em&gt; pattern with chats about the use of Structs in Ruby, monkey patching (duck punching), duck typing and whether the implicit and explicit conversion operators (e.g. &lt;code&gt;to_int&lt;/code&gt; vs &lt;code&gt;to_i&lt;/code&gt;) should be more actively documented in the Ruby core classes.  I also touched on the concept of &amp;ldquo;Power Level&amp;rdquo; in response to the question of when to use Structs vs using Classes.  In my experience Structs are an often over-looked aspect of Ruby that allow a developer to create a data structure that has less power than a full blown class.  In parallel with the security guideline that you should only ever provide the minimum level of access necessary to get a job done, there&amp;rsquo;s a similar argument to say that you should only ever use the minimally flexible data structure or entity in order to acheive a given task.&lt;/p&gt;

&lt;p&gt;Flexibility sounds great, but it actually equates with complexity.  More powerful entities can do more things, and they are more complex to interact with as a result.  I often write out a simplified power sequence for Ruby as follows from low power to high power:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;nil&lt;/li&gt;
&lt;li&gt;boolean ( true/false )&lt;/li&gt;
&lt;li&gt;integer&lt;/li&gt;
&lt;li&gt;float&lt;/li&gt;
&lt;li&gt;string&lt;/li&gt;
&lt;li&gt;array&lt;/li&gt;
&lt;li&gt;struct&lt;/li&gt;
&lt;li&gt;hash&lt;/li&gt;
&lt;li&gt;class&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;This is a massive over simplification as the functionality of each of these entities varies along many different dimensions.  However in general we should prefer to use, say, a boolean (true/false) to represent something that has two possible values (e.g. receive email updates preference), rather than using a String to store the values &amp;ldquo;true&amp;rdquo; and &amp;ldquo;false&amp;rdquo;.  The Struct in Avdi&amp;rsquo;s example looks like this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Place&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Struct&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:index&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:prize&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"first"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Peasant's Quest game"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"second"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Limozeen Album"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Place&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"third"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Butter-da"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;although he could have used hashes:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;index: &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"first"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;prize: &lt;/span&gt;&lt;span class="s2"&gt;"Peasant's Quest game"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;index: &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"second"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;prize: &lt;/span&gt;&lt;span class="s2"&gt;"Limozeen Album"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="n"&gt;third&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;index: &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;name: &lt;/span&gt;&lt;span class="s2"&gt;"third"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;prize: &lt;/span&gt;&lt;span class="s2"&gt;"Butter-da"&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The hash is more flexible. We can add arbitrary additional key/value pairs to the individual hash objects, e.g.&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:amount&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That flexibility is extra power, that we maybe don&amp;rsquo;t need at this stage.  You can argue we might need it later, but the hashes are also rather unDRY in that the key names have to be repeated over and over, and if we need an &lt;code&gt;:amount&lt;/code&gt; key we can add it to the Struct, which is arguably DRYer than the long form hashes.  The Struct also provides us a nicer syntax for accessing its key/value contents:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;index&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There are pros and cons to both approaches.  DRYing out the keys into the Struct means that we have increased the dependency between the three entities, so that if we add an &lt;code&gt;:amount&lt;/code&gt; to the Struct, all the instances of the Struct will also sprout an &lt;code&gt;:amount&lt;/code&gt; key.  Maybe we want that and maybe we don&amp;rsquo;t; it all depends on the domain model and the behaviours we are trying to support.  Ruby Structs and Hashes differ in various ways, and the real challenge when choosing one over the other is getting the right match, from the various features of Struct and Hash, to the problem we are trying to solve.  It&amp;rsquo;s also sensible to avoid agonising and choose whatever seems simplest to start with and then change to more powerful or complex entities as the required behaviour starts to generate pain points in the code.&lt;/p&gt;

&lt;p&gt;The feedback from the mob session was positive, and we had great suggestions for more group problem solving in the future to get everyone&amp;rsquo;s fingers dirty with the code.  It was a good day, and after lunch I started knocking off the automation tasks identified from the previous couple of days profiling.  I started by pushing the slack bot code onto &lt;code&gt;drie push&lt;/code&gt; where remarkably the bot stayed live, and so I ran some votes.  Michael joined me in a hangout as I updated the static website so that blog images would have a max-width of 700px (to save me re-sizing), and then worked on WebSiteOne to have members&amp;rsquo; titles update when they upgrade to Premium.  That was a nice set of three things to automate small tasks that are leaching away at my time.&lt;/p&gt;

&lt;p&gt;Going forward I hope to keep iterating on automating away simple tasks so I can have more time for interacting with Premium members in Mob, F2F and Plus programming sessions!&lt;/p&gt;

&lt;h3&gt;Related Videos&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=5rQ-SLPjKVs"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=L_jdimj1l3E"&gt;Mob Programming Session&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dordkH0qlF0"&gt;AsyncVoter Coding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=TI3JhhZHmyo"&gt;Kent Beck&amp;quot; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>More Profiling of My Days</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/24/more-profiling/"/>
    <id>http://blog.url.com/2016/11/24/more-profiling/</id>
    <published>2016-11-24T00:00:00+00:00</published>
    <updated>2016-11-28T09:34:24+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;So I did a second day of profiling.  The details are as follows:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;09:15 - 10:15 writing blog draft (plus distribution)

10:30 - 11:00 reviewing slack and email - promoting mentors and premiums

11:00 - 11:30 Writing emails to potential sponsors

11:30 - 11:45 Scrum

11:45 - 12:30 WSO hangout with Premium F2F member

12:30 - 12:45 Negotiating with company on potential paid project

12:45 - 13:00 Getting CraftAcademy and PayPal folks into new premium chat instance - notifying Premium Mobs, F2Fs and Pluses about mob programming session

14:15 - 15:15 Fielding questions from Premiums on Slack (got an upgrade to F2F), co-founder 

15:15 - 15:45 PR Review (AsyncVoter, LocalSupport)

15:45 - 16:00 Scrum

16:00 - 17:00 More PRs - fixed AsyncVoter - SHF comments, did AV mailing, updated and posted blog 

18:15 - 18:45 Reviewing ProjectScope PRs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Reviewing this again with Eliminate, Simplify, Automate, Delegate (ESAD) an early insight was that I could automate the creation of the list or related videos that I drop into the end of each blog.  A tiny saving, but maybe worth it.  Reviewing other elements in turn: Slack and Email - I feel like I really have to do that each day to stay in touch with sponsors, premiums and mentors.  Promoting a new Premium member and a new Premium Mentor involved some manual work on the database, so I created a &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1300"&gt;ticket on WSO&lt;/a&gt; to cover the details of what might be automated there.  That looks promising. There&amp;rsquo;s a couple of relatively straightforward coding tasks there, although there is also my desire to refactor the charges controller &amp;hellip; my intuition is that there&amp;rsquo;s a double win for that sort of automation when we do it in a live pairing session.  I think it can help when others see into our codebase, and can serve as a potential learning platform.   Not that thousands of people will ever pour over our videos, but it&amp;rsquo;s a chance for me to pair with other AV members and I think we all get value from that.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m trying to step up writing of emails to potential sponsors after Charles Max Wood of Ruby Rogues talked on the Freelancers show about how that was the critical task that could have the biggest impact that he often didn&amp;rsquo;t get around to.  Don&amp;rsquo;t think I can drop or delegate that yet.  After the scrum I got in a hangout with Matt to unblock him on WebSiteOne.  I burned some time explaining why I don&amp;rsquo;t like the UX of our status feature on WSO.  Maybe that&amp;rsquo;s wasting time, or maybe that&amp;rsquo;s important communication of my values regarding UX design to other team members?  I feel like at least some value was being derived both for WSO and for Matt as we unblocked him and cleared up ambiguity around the latest ticket he was working on.&lt;/p&gt;

&lt;p&gt;Then I was negotiating in Slack with a company about a potential paid project.  Maybe that will come to nothing, but my intuition (which I think Michael and Marouen share) is that a few paid projects would make the whole Premium package so much more attractive to those on the fence about whether to sign up.  Then it was more Slack action getting the CA and Paypal Premiums into the new Premium chat instance.  I&amp;rsquo;d used the Stripe &amp;ldquo;customer&amp;rdquo; list to invite folks, so that had left out those who had not signed up directly through Stripe.  That pushes me to want to improve the domain model in WSO so we can properly represent all the current avenues members use to go Premium, so that I have a clear central place for a coherent list, although thinking about it I can see how I can extract that data from the console &amp;hellip;  Still as the number of Premium users increases (which is a key goal) we&amp;rsquo;ve got to get better at consistently tracking who they are and how they&amp;rsquo;ve come to us.&lt;/p&gt;

&lt;p&gt;I spent a little time notifying Premium Extras (a new term - that&amp;rsquo;s Mob, F2F and Pluses, i.e. everyone eligible for Mob) about the Mob Programming session we&amp;rsquo;ll do later today.  Mob programming sessions feel like they could be an important engine of growth.  After lunch Michael wasn&amp;rsquo;t around again and I dithered about throwing myself into programming tasks versus just catching up on admin and station keeping.  I was fielding questions on Slack for almost an hour.  I could argue that I should have been productively coding with that hour, however one Premium member did upgrade to F2F following our conversation.  I think that&amp;rsquo;s something critical there.  Communicating with those consuming the services you provide is essential.  That doesn&amp;rsquo;t mean doing tech support for everyone on every tier all the time.  However, giving an ear to those who are already committed to support our charity financially and helping them find ways to derive more value &amp;hellip; that feels kind of core.  &lt;/p&gt;

&lt;p&gt;I guess ultimately I need some full time programmers, some full time marketing people, some full time &amp;ldquo;sales&amp;rdquo; people &amp;hellip; :-) Well I hope we can stay small and friendly for some time to come.  After that Slack binge I did get down to some PR review, getting two PRs merged into AsyncVoter and a flurry of comments on LocalSupport PRs.  We had another quick scrum and there was more admin, doing the AV mailing - 7 more 15 minute stabs at that and I&amp;rsquo;ll have emailed everyone in the community and then perhaps I can take a bigger picture look about how we stay in touch people in the long term.  Or am I setting an artificial barrier for myself there?&lt;/p&gt;

&lt;p&gt;I had forgotten to update and post my blog of the previous day, so I hit that and then grabbed some time later in the evening to review ProjectScope PRs for the Berkeley students.  Armando feels the ProjectScope project metric tracking system is going to be critical to managing his course in the future and the part 3 project course for the MOOC.  I was able to give a flurry of comments and agonise about whether I was pushing on the students too hard.  I need to spend some time deploying their branches and experimenting with real project data.&lt;/p&gt;

&lt;p&gt;Also the bot shut down when I closed my computer so we may have lost attempted 3rd votes to the async vote we were trying to run in WSO.  Gotta get that bot deployed permanently.  So anyhow, what could I eliminate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;posts on PRs that are too long&lt;/li&gt;
&lt;li&gt;scrums running over time&lt;/li&gt;
&lt;li&gt;me ranting&lt;/li&gt;
&lt;li&gt;slow AV mailings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;what could I simplify:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;PR posts&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;what could I automate:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Blog draft submission&lt;/li&gt;
&lt;li&gt;Blog draft video lists&lt;/li&gt;
&lt;li&gt;AV mailing process&lt;/li&gt;
&lt;li&gt;Premium and Mentor upgrade&lt;/li&gt;
&lt;li&gt;Tracking of current range of Premiums&lt;/li&gt;
&lt;li&gt;Hosting of async bot&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and I don&amp;rsquo;t know what, if anything, I can delegate. Everyone&amp;rsquo;s a volunteer in our organisation, and I don&amp;rsquo;t think I can ask anyone to do anything.  I need to wait for people to ask for interesting things to do.  The most successful thing so far has been a process of making tickets of everything I can think of as important on the relevant repos and occasionally pointing to things when people ask :-)&lt;/p&gt;

&lt;p&gt;Well, I think that&amp;rsquo;s enough profiling for now.  There&amp;rsquo;s some clear possibilities for automations, and I guess rather than agonise about which to do I should just start knocking them off in some order :-)&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/aGjQ5N7nRfQ"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=dPJqeBPFluc"&gt;WSO Huddle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4qn9b8MVbvg"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Profiling My Day</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/23/profiling-my-day/"/>
    <id>http://blog.url.com/2016/11/23/profiling-my-day/</id>
    <published>2016-11-23T00:00:00+00:00</published>
    <updated>2016-11-24T11:03:34+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I profiled my day yesterday in an attempt to apply the Eliminate, Simplify, Automate, Delegate (ESAD) mantra and create space for the important things :-)  Here&amp;rsquo;s my rough profile of the day:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;09:00 - 10:00 writing blog (5mins on getting that up and in slack #blog_drafts)

10:15 - 10:40 reviewing slack and email - starting a WSO vote

10:40 - 11:00 reviewing previous days blog and pushing out

11:00 - 11:30 rebuilding slack client after creation and renaming of teams

11:30 - 12:15 scrum and debugging with Premium Mob Member

12:30 - 13:30 edX emailing, AV emailing, Social Media update, negotiating with company about a paid project, editing and promoting blog for Kenyan Bootcamp code9ty

14:45 - 15:00 rebooking physic appt

15:00 - 15:45 reviewing asyncvoterUI and LS PRs (starting hangout 2nd time adding my AV banner)

15:45 - 16:15 scrum - catch up with co-founder Thomas, voting with Rose and student

16:15 - 17:00 meeting with heroku about our charges

17:00 - 17:30 chatting with sponsor drie about hosting services
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So let&amp;rsquo;s apply the ESAD criteria to each in turn.  I don&amp;rsquo;t know that there&amp;rsquo;s anyway to simplify the process of actually writing the blog.  I could make them shorter, or even eliminate them, perhaps doing them less frequently.  I&amp;rsquo;m reluctant to do that as I find them a nice grounding start to the day, the prevents me from just sitting down and reacting to whichever seems the most urgent message on Slack or in email.  Intuitively the feedback I&amp;rsquo;m getting on the blogs is that they are often too long, have too much code, not enough images, but also that they&amp;rsquo;ve helped others understand my perspectives and what we are trying to achieve with AgileVentures.  I can&amp;rsquo;t really delegate them (although I&amp;rsquo;d love to have more in the community blogging), and the only place for automating them would be to work on the final portion of pushing them to GitHub and Slack where each day I have to do the following:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Copy from TextEdit to Sublime&lt;/li&gt;
&lt;li&gt;Save in correct location and format for middleman blog (e.g. 2016-11-03-pithy-title.html.markdown)&lt;/li&gt;
&lt;li&gt;Add middleman blog header, edit date there, edit title and edit keywords&lt;/li&gt;
&lt;li&gt;Navigate to my av-static-website terminal&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git add .&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git commit -am &amp;#39;new blog&amp;#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Type &lt;code&gt;git push&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open a browser in the blogs directory of the av-static-website: i.e. https://github.com/AgileVentures/av-static-website/tree/master/source/blog_articles&lt;/li&gt;
&lt;li&gt;Navigate to the link for the days blog and copy it&lt;/li&gt;
&lt;li&gt;Switch to slack and paste to the #blog_drafts channel with &lt;code&gt;@channel new blog draft &amp;lt;link&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now this only takes a minute or two, but I am doing it every day, and having written it out I think several parts could be automated or simplified.  It might take 30-60 minutes to get automated in the way I want, so I&amp;rsquo;d need to feel sure that I was going to write another 15-30 blogs before I&amp;rsquo;d start to see time savings.  Possibly I could write a bash script &amp;hellip; there are also things that can go wrong if I have to deal with merge conflicts (I should always &lt;code&gt;git pull&lt;/code&gt; first).  I could just blog on medium and be done with it.  I&amp;rsquo;ve avoided that partly because I want to share drafts with anyone who joins #blog_drafts and have them able to submit PRs, although perhaps a better solution is to just make everyone interested a members of the AgileVentures organisation on Medium.&lt;/p&gt;

&lt;p&gt;I start to think about whether there are some existing automations, like setting up pure PR notifications on the #blog_drafts channel, and submitting my blog as a PR from a branch.  That might seem like crazy extra work, but it connects to something else I&amp;rsquo;d like to automate further; the process of submitting a PR from the command line, which seems to involve me re-typing the same thing several times over, e.g. &lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;git checkout -b #waffle_id_exciting_feature_name&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;doing and committing the work (commit message often includes &amp;lsquo;exciting feature name&amp;rsquo;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hub pull-request -b develop&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;editing the PR description in vim to include the text &lt;code&gt;fixes #waffle_id&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I keep thinking here that if I could get something like a default commit message based on the branch name, then I could avoid typing the waffle_id and feature name twice.  In the blog case there are no waffle ticket ids to link up, but I guess I&amp;rsquo;m looking at being able to type something like the following from the command line:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ blog_draft &amp;lt;blog title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which would do the following steps:&lt;/p&gt;

&lt;p&gt;a) &lt;code&gt;git pull&lt;/code&gt;&lt;br&gt;
b) &lt;code&gt;git checkout -b new_blog&amp;lt;blog_title&amp;gt;&lt;/code&gt;&lt;br&gt;
b) &lt;code&gt;git add source/blog_articles&lt;/code&gt;&lt;br&gt;
c) &lt;code&gt;git commit -m &amp;#39;new blog on &amp;lt;blog title&amp;gt;&amp;#39;&lt;/code&gt;&lt;br&gt;
d) &lt;code&gt;hub pull-request -b develop&lt;/code&gt;  &lt;/p&gt;

&lt;p&gt;and with the right notifications a bash script doing the above could ping the #blog&lt;em&gt;drafts channel.  With a Ruby script I could probably get finer tweaks so that it actually sent  &lt;code&gt;@channel new blog draft &amp;lt;link&amp;gt;&lt;/code&gt; to #blog&lt;/em&gt;drafts.&lt;/p&gt;

&lt;p&gt;So I could clearly do the above analysis on all the sections of the day.  Blog getting too long?  Quick review.  Daily review of Slack and Email?  Can&amp;rsquo;t really avoid, just have to avoid getting sucked in to low priority things.  I try to pull each question or request into my action plan document and order and then take passes through my action plan to work out what order to do things in.  The asynchronous voting is already the subject of ongoing automation.  &lt;/p&gt;

&lt;p&gt;Reviewing the previous days blog and pushing that out requires some more automatable steps e.g.&lt;/p&gt;

&lt;p&gt;a) merge any PRs&lt;br&gt;
b) &lt;code&gt;git pull&lt;/code&gt;&lt;br&gt;
c) read through and make minor corrections (10mins?)&lt;br&gt;
d) &lt;code&gt;git add&lt;/code&gt;&lt;br&gt;
e) &lt;code&gt;git commit -m &amp;#39;tweaks&amp;#39;&lt;/code&gt;&lt;br&gt;
f) &lt;code&gt;git push&lt;/code&gt;&lt;br&gt;
g) &lt;code&gt;rake publish&lt;/code&gt;&lt;br&gt;
h) checking http://nonprofits.agileventures.org/blog/&lt;br&gt;
i) adjusting image sizes, making sure blog looks okay  &lt;/p&gt;

&lt;p&gt;The issue with both the initial blog generation and publishing the previous days draft is that the bulk of the time is not automatable without a serious AI.  I guess the question is whether the surrounding command line cruft is worth automating.  Even if it&amp;rsquo;s not, it could be fun, and possibly beneficial if the automation can make PRs from the command line slightly less work &amp;hellip;&lt;/p&gt;

&lt;p&gt;The Slack rebuild was (hopefully) a one off.  The scrums - I do two a day, and they are capped at 15 mins, but I often end up doing another 15 mins after the scrum - today the first scrum was followed by 15 mins debugging with a Premium Mob member, which was fun and (I think) worth it.  The second scrum 15 min follow on was a catch up with my Co-Founder so pretty important &amp;hellip;  Although scrums can certainly serve to break up flow on a longer more complex piece of work; it&amp;rsquo;s also critical to coordinate with the team, and these Scrums are our welcome mat and showcase.  I am still conflicted about whether they are worth the effort to maintain.  Google Hangouts on Air and our plugin seem stable-ish again after our outage of a couple of weeks back, although I am needing to re-start hangouts occasionally, and the fact that my lower third banner is not saved means I&amp;rsquo;m re-adding that for every scrum and hangout - which burns 30 seconds every time, although it&amp;rsquo;s helped me memorise the AV colour code (#ee7335).&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m unclear if the &lt;a href="https://www.hangouttoolbox.com/"&gt;google hangout toolbox&lt;/a&gt; is still being maintained.  I just posted the following to their G+ support group:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The lower third still works for me, but I can&amp;rsquo;t save it - I have to re-enter the details every time.  Is the code for this open source?  Is there someone actively maintaining it?&lt;/p&gt;

&lt;p&gt;Here are some more details - I can set up my lower third like so:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="setting up lower third" src="https://www.dropbox.com/s/nz4gwqb0pbfhfwc/Screenshot%202016-11-23%2010.04.34.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I have the setting to enable auto load and autoload last used lower:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="auto reload settings" src="https://www.dropbox.com/s/8zr12w8e7sf4wtu/Screenshot%202016-11-23%2010.05.34.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;and here&amp;rsquo;s me having reloaded the hangout and the saved presets have gone :-(&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img alt="saved presets missing :-(" src="https://www.dropbox.com/s/24ik2p5qauunua6/Screenshot%202016-11-23%2010.07.36.png?dl=1" /&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Any ideas?&lt;/p&gt;

&lt;p&gt;Many thanks in advance&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So I can see the names of the developers on the site.  I&amp;rsquo;ll leave that &lt;a href="https://plus.google.com/+SamJoseph/posts/QyAdAzTXPuG"&gt;G+ post&lt;/a&gt; for a couple of days and then maybe reach out to the maintainers.&lt;/p&gt;

&lt;p&gt;Michael wasn&amp;rsquo;t around so I reviewed PRs instead of pairing.  Felt good to get into the details of the new AsyncVoter React client and get to some other outstanding PRs.  PR review is what Premium members get priority on.  I&amp;rsquo;m still not sure if this is the key thing that Premium&amp;rsquo;s want, but reviewing PRs takes a lot of work and time, and I believe it is very beneficial for learning.  Other meetings in the day were one offs and can&amp;rsquo;t really be ESADed.  Other key area for ESADing is the edX and AV emailings.  I think I&amp;rsquo;ve got the Social Media update fairly automated.  It involves reviewing an older blog, tweaking and then pushing to Medium, which automatically pushes to Twitter and Facebook, although with boring &amp;ldquo;I just published&amp;rdquo; text.  I push to LinkedIn manually, but it&amp;rsquo;s the edX and AV emailings that are time consuming.  The edX ones go through mail chimp, but they don&amp;rsquo;t give me enough access to automate them.  For the AV mailings, I really need to look into the Amazon SES service.  I&amp;rsquo;m just finishing a run of mailing all the AV members individually through my Thunderbird client.  I have a couple of scripts to semi-automate this, but I am trying to reach out personally to everyone.&lt;/p&gt;

&lt;p&gt;I do feel a bit like a spammer, but it&amp;rsquo;s a one off, and I&amp;rsquo;m responding individually to every email back, and we&amp;rsquo;ve signed up about ten new premium members as a direct result of these personal mailings over the last two months.  Longer term we need some way of enabling people to opt-in/out of emails.  Lots to do there.  I&amp;rsquo;m going to try profiling a few more days to see if I can find some sweet spots to ESAD, and if you have suggestions about how I can operate more efficiently I&amp;rsquo;m all ears! :-)&lt;/p&gt;

&lt;h3&gt;Related Videos&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OiBuIltBooM"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=4rRIwgGasKI"&gt;Solo work on Async Voter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=-Sn4r03hNL4"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Levels of Focus</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/22/levels-of-focus/"/>
    <id>http://blog.url.com/2016/11/22/levels-of-focus/</id>
    <published>2016-11-22T00:00:00+00:00</published>
    <updated>2016-11-23T18:31:23+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;It was a busy weekend.  That was partly the kids&amp;rsquo; birthday parties and coaching under eights football, but also because of my last Mentive mentoring session and two Premium Plus pairing sessions.  I usually prefer not to work at the weekend, but I really want to make AgileVentures sustainable, and for people who work during the week, it&amp;rsquo;s often convenient to get support from their mentor at the weekend.  The Mentive experience has been interesting to try out GotoMeeting, which is okay, and more powerful than Google Hangouts, but the ability to share a URL with a hangout to anyone, and stream/record live to YouTube, makes me prefer Hangouts.  &lt;/p&gt;

&lt;p&gt;As the Mentive chats have become more abstract the Premium Plus pairing sessions have been very code focused. On Sunday I worked with Adrian through a Cross Origin Resource Sharing issue on AsyncVoter so that the new React client could read data off the &amp;ldquo;&lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;&amp;rdquo; hosted app.  We got a spiky &lt;a href="https://github.com/AgileVentures/AsyncVoter/pull/77"&gt;Work in Progress(WIP) PR&lt;/a&gt; in and I deployed the branch to the drie staging instance so that Adrian could proceed to work on the &lt;a href="https://github.com/AgileVentures/asyncvoter-ui"&gt;React UI&lt;/a&gt;.  We&amp;rsquo;d used the &lt;a href="https://www.npmjs.com/package/cors"&gt;cors package&lt;/a&gt; to ensure that we would accept incoming AJAX requests from all sources for the time being.&lt;/p&gt;

&lt;p&gt;I had a quick break and was then working on a &lt;a href="https://www.hackerrank.com/challenges/find-the-running-median"&gt;running median problem&lt;/a&gt; which involved writing some min and max heaps in Ruby.  Simple sort was deemed too inefficient and we needed a custom data structure to allow fast access to the median.  This was just part of looking at algorithms in general, but I was already thinking about how we could be linking this to useful stats from data-feeds we have on voting and pairing sessions.  We didn&amp;rsquo;t get as far as I would have liked into the analysis portion and we&amp;rsquo;ll hit that next weekend.&lt;/p&gt;

&lt;p&gt;There hadn&amp;rsquo;t been programming or pairing of note either side of the weekend on Friday or Monday, Friday having been taken up with an Agile Projects workshop and then some brainstorming with Michael and Ashley.  There&amp;rsquo;d been sporadic async slack bot hacking, and we got most of the way of pushing a version of LocalSupport onto &lt;a href="http://push.drie.co"&gt;drie push&lt;/a&gt;. Brainstorming finished up the day as Michael and I digested the new PRs and issue comment from Ashley on the generic &lt;a href="https://github.com/AgileVentures/AgileVentures"&gt;AgileVentures&lt;/a&gt; repo.  Ashley had created some great diagrams, and was pushing us to be thinking in terms of more specific user models and big vision statements:&lt;/p&gt;

&lt;p&gt;&lt;img alt="Strategy, Goals and Impacting Users" src="https://www.dropbox.com/s/7g7m9j5hgnsplgt/Screenshot%202016-11-23%2018.30.52.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;ll be enormous value if the big picture vision of AgileVentures can be communicated effectively in a compelling and visually attractive manner.  I find myself torn between all the small admin tasks that are ever increasing, smoothing off the rough edges on aspects of the paid premium user experience, delivering on our commitments to the premium users and conducting bigger planning and vision generation efforts.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s clear that the onboarding experience is bumpy and could be vastly improved at each stage of our funnel, from becoming aware of AgileVentures, to browsing our website, signing up, joining slack, joining a hangout, participating in a project and starting a project; not to mention signing up for one of the paid plans, and upgrading to get even more professional development support.  Michael and I spent an hour kicking ideas about.  I was reminded of Pavel&amp;rsquo;s point from a couple of years ago about the importance of measuring things&amp;ndash;that if we were going to make changes like having the popups on the site encouraging people to join slack, or join hangouts, then we wanted to know if these were having measurable impacts.  However I keep thinking that some things are no-brainers, but then I&amp;rsquo;m a complete hypocrite.  The whole point of small simple PRs is to curtail the risky assumption that you know how things are going to work.&lt;/p&gt;

&lt;p&gt;At the same time, perhaps I am justifiably cautious about efforts to pull out lots of data, where it&amp;rsquo;s unclear what that data is telling us.  We could have a super active Slack and super active hangouts, but without enough income it doesn&amp;rsquo;t really mean anything, unless sponsors are seeing that activity as incentive.  Either way I need to get the income past a certain threshold soon.  That&amp;rsquo;s not the best place to be coming from, not the best place to be doing decision making.  It feels difficult to devote time to big picture planning that could be spent on, say, making sure that all the different premium plan options were available for upgrade on each user page.   I do want to make it easier for people to onboard and understand what we&amp;rsquo;re doing, and how they can get involved and derive the most possible benefit from the AV experience.  That said, it feels counterproductive to focus on that when there are directly income related things to fix. Can others do it?  Perhaps not without my input. It&amp;rsquo;s so difficult to know.  Will fixing the plan upgrade issue generate more revenue in the short term?  One user encountered a problem related to it, which we fixed through the Stripe interface.  Will others experience it soon?&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re planning our first Premium Mob session on Thursday.  That feels like it might have legs.  If that goes well and generates good energy it could be a powerful incentive for upgrading.  Coming full circle I think it comes back to Eliminate, Simplify, Delegate, Automate.  The mounting admin tasks are not helping me focus on the big picture.  Michael and I started looking at setting up a greeter bot to replace some of my AV slack greeting activities.  It seems on the Slack free tier we can only have one integrated bot, so any greeter bot would have to be merged with the AsyncVoting bot &amp;hellip; ultimately I resolved that the key thing to do today was to profile where I was spending my time and focus the lens of Eliminate, Simplify, Delegate, Automate on it.  I guess I have to measure as well &amp;hellip;&lt;/p&gt;

&lt;h3&gt;Related Videos:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=YGl5BA6o43Y"&gt;Premium Plus with Adrian&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/Mcm_uYE1vFM"&gt;&amp;ldquo;Martin Fowler&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=u-g16rhSBUo"&gt;Bug Hunt on WSO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OudkpuKQ7Aw"&gt;Deploying LocalSupport to drie&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=kNOigf5jLYI"&gt;&amp;ldquo;Kent Beck&amp;rdquo; Scrum&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=uvOFUDRbEmM"&gt;AgileBot Deploy and BrainStorming on WSO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Agile Workshop</title>
    <link rel="alternate" href="http://blog.url.com/2016/11/21/agile-workshop/"/>
    <id>http://blog.url.com/2016/11/21/agile-workshop/</id>
    <published>2016-11-21T00:00:00+00:00</published>
    <updated>2016-11-23T18:23:01+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Friday was mainly consumed with a dry run of an Agile Project management workshop for non-profits and charities.  I&amp;rsquo;ve been working closely with Voluntary Action Harrow Cooperative (VAHC) for the last three years on the &lt;a href="https://www.harrowcn.org.uk"&gt;Harrow Community Network project&lt;/a&gt; which itself uses the &lt;a href="https://github.com/AgileVentures/LocalSupport"&gt;AgileVentures LocalSupport&lt;/a&gt; software&lt;/p&gt;

&lt;p&gt;&lt;img alt="Harrow Community Network Website" src="https://www.dropbox.com/s/j1n566aoa7hregq/Screenshot%202016-11-21%2009.36.51.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Over those three years we&amp;rsquo;ve been using an Agile project management approach to developing the software and coordinating the efforts and contributions of over 30 volunteers from &lt;a href="https://www.harrowcn.org.uk/contributors"&gt;all around the world&lt;/a&gt;.  We&amp;rsquo;ve been following the principles behind the Agile Manifesto:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our highest priority is to satisfy the customer through early and continuous delivery of valuable software.&lt;/p&gt;

&lt;p&gt;Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale.&lt;/p&gt;

&lt;p&gt;Working software is the primary measure of progress.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I meet with VAHC at least once every two weeks to show them the latest deployments to the website and get feedback on any changes, and well as showing them work in progress. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Welcome changing requirements, even late in development. Agile processes harness change for the customer&amp;rsquo;s competitive advantage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every meeting we review the &lt;a href="https://www.pivotaltracker.com/n/projects/742821"&gt;project board on Pivotal Tracker&lt;/a&gt;, with a particular focus on the features in the backlog.  The backlog is maintained with higher priority items towards the top of the backlog.  As requirements change we follow the client&amp;rsquo;s advice about moving things up and down in the backlog, and even move things back to the icebox if they suddenly become of low relevance.  For example the story on &amp;ldquo;&lt;a href="https://www.pivotaltracker.com/story/show/116028767"&gt;being able to override doit vol ops&lt;/a&gt;&amp;rdquo; was top of the backlog at one point, but got moved onto the icebox as circumstances changed.&lt;/p&gt;

&lt;p&gt;Any new suggestions from the client are immediately added to the icebox and go through a voting process to estimate their technical complexity.  Once they are estimated they can be moved onto the backlog with the client&amp;rsquo;s consent and subject to the client&amp;rsquo;s preferences regarding priority.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Business people and developers must work together daily throughout the project&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This can be challenging with a distributed team of developers all around the world.  We broadcast the client meetings via YouTube, and run it in a google hangout that developers are encouraged to join.  Any developer can participate in a client meeting, and can communicate with the client via email.  However as project manager I tend to funnel questions from developers through to the client, and bring them up in the client meeting.  Given the part-time volunteer nature of our project it is difficult to support daily interaction between client and developers; and since we are all developers our &amp;ldquo;business people&amp;rdquo; are arguably the client, although we make no strong distinction between devs and non-devs in our distributed team.  Everyone is learning, everyone is participating.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Every developer is free to work on what they are interested in.  The client&amp;rsquo;s preferred priorities are expressed through the priority ordering on the backlog, but developers can start any story that takes their interest.  We do strongly encourage all developers to put any unestimated story to a vote (either synchronous in a scrum, or asynchronous in a text vote) before starting work on it; just to help increase awareness that they are interested in working on something.  They don&amp;rsquo;t need to wait for the vote to complete in order to start a spike or some experiments.  However it makes strong sense to let others know what you are thinking about so you can benefit from their thoughts and suggestions.  Even so this is not a hard and fast rule.  The software is open source and anyone can submit a pull request at any time, but getting involved in the voting and estimation process is a great way of staying on top of any information relevant to the task and increases the chance of a smooth merge of code later on, while reducing the chance of duplicated effort.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The most efficient and effective method of conveying information to and within a development team is face-to-face conversation.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We agree, but we can&amp;rsquo;t afford to fly all the developers into the same location for this purpose.  Google hangouts gives us a close second to a face to face conversation, and I try to meet with the client in person where possible.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We&amp;rsquo;ve been maintaining a slow and steady pace for the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Continuous attention to technical excellence and good design enhances agility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All code is submitted to the project via Pull Request for open review.  We encourage everyone to use Google hangouts to pair program online in order to get more immediate ongoing feedback as code is developed, although the logistics of time zones and lives don&amp;rsquo;t always support pairing.  Even with paired code, everything coming into the project is automatically checked for merge conflicts, tests passing, and style/coding guidelines.  Any developer can comment on any pull request, which we try to either close or merge within a week to avoid widely diverging branches.  The ultimate decision for merging rests with myself as project manager, and I try to maintain a match between any code coming in and the domain model that we have developed over the last three years.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Simplicity&amp;ndash;the art of maximizing the amount of work not done&amp;ndash;is essential.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I strongly encourage all developers, whether working on a chore, a bug fix or a feature, to submit the absolute minimum of code.  Only things related the specific ticket being worked on should be in the pull request.  The smaller the code changes in the pull request, the happier I am.  Small pull requests are easier to review, easier to merge, can often be done faster, and provide a more frequent sense of completion and progress for everyone involved.  See something else that needs to be fixed?  Open a refactoring ticket and submit a separate pull request for that.  There are always new folks coming into the project who will love a really simple refactoring ticket to allow them to get started on something where they don&amp;rsquo;t have to generate new tests. &lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The best architectures, requirements, and designs emerge from self-organizing teams.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I&amp;rsquo;m a single point of failure in this project, although two or three others have access to all the necessary to continue merging and deploying if I was removed.  Other AgileVentures projects have more self-organising structures where PRs can be merged with the agreement of any 2 or 3 devs.  All structures are subject to revision.  Sensibly the LocalSupport project management structure will evolve and change.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Earlier in the project we had weekly retrospectives, but with few dedicated full timers, these have fallen away.  We&amp;rsquo;ve switched from many synchronous standups to more asynchronous voting in group text channels on Slack. The Agile principles are written around the idea of a full time co-located team, and we have adapted them to a volunteer part-time distributed team.  Our adaptations certainly need ongoing review and adjustment.  It&amp;rsquo;s not yet clear how best to ensure reflection. Tuning and adjustment happens frequently enough.&lt;/p&gt;

&lt;p&gt;Now, getting back to the workshop we dry ran last week; that involved a 90 minute co-located session with a non-technical charity group in which we used the Agile process itself to try to answer the general challenge of better understanding Agile.  I initially presented the Agile Manifesto and talked about related concepts such as scrum, XP and Kanban for a few minutes.  The overall structure, which compressed a two week sprint into 90 minutes was as follows:&lt;/p&gt;

&lt;p&gt;1) Present concept of Agile
2) Generate stories relating to Agile, and how it can be used in non-profits
3) Organise stories by theme, to identify core item and vote on them
4) Form teams and have each team pick a story
5) Teams each work on an individual story, preparing to present their thoughts
6) Each team presents their conclusions
7) Retrospective: each individual looks back on what went well, what could be improved&lt;/p&gt;

&lt;p&gt;The key stories that came out of the 2nd and 3rd stages were:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;How does Agile handle dramatic shifts and changes? (1.5 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with other non-Agile organisations? (3 points)&lt;/li&gt;
&lt;li&gt;How does Agile work with fluid staffing? (2 points)&lt;/li&gt;
&lt;li&gt;Agile Logistics (how do scrums and standups work) (1 point)&lt;/li&gt;
&lt;li&gt;Is Agile a good fit for non-profits and charities? (3 points)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Our three teams of two each chose one of the above and completed the 4th and 5th stages before presenting their thoughts to the whole group.  It all seemed to work pretty well, particularly with a group number of 6 sitting round a large table with the cards organised in front of us.  Everyone said they felt they understood Agile better and there were a lot of productive and interesting discussions.  One participant summed up Agile as an integration of strategy and operations, and I concurred.  Agile is not an absence of planning; it is a commitment to ongoing planning and reflection.  One confusion was that we were using the Agile process itself to understand the Agile process, and it was all rather meta.  A key concern was how would you use it to solve specific problems and implement the solutions?  I proposed that after a session like this, one could do a full day inception event with a team where the story tickets would be actual challenges to the organisation, and the retrospective component would take place 2 weeks later, after the team had done a sprint.&lt;/p&gt;

&lt;p&gt;Anyway, next up we&amp;rsquo;ll be running a full version of this &amp;ldquo;Understanding the Agile Process&amp;rdquo; with frontline charity and non-profit folks in a group of 10-20 people.  Stay tuned to this blog to find out how that goes!&lt;/p&gt;
</content>
  </entry>
</feed>
