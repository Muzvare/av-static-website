<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2017-10-02T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>The pilot+copilot organizational pattern</title>
    <link rel="alternate" href="http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/"/>
    <id>http://blog.url.com/2017/10/02/pilot-copilot-organizational-pattern/</id>
    <published>2017-10-02T01:00:00+01:00</published>
    <updated>2017-10-04T21:52:30+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="pair flying" src="/images/pairflying.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;In 2002, I graduated a distance-learning masters in applied mathematics. Every month, the university mailed me an A4 enveloppe containing the course support. I was supposed to learn from the course material and returned the completed assignments within a month. A month later, I would receive an answer key. Should I have a question, I could mail it to the professor and wait for his reply. The whole process was cumbersome. I was often behind schedule. Interactivity was near to zero. &lt;/p&gt;

&lt;p&gt;Later on, I participated in the MOOC endeavour. The video of the instructor gave a feeling of a one-to-one training session. Discussion forums, deadlines, follow-up mails, peer-reviews grounded the learning process. There were meetups too. And a MOOC about Agile Development using Ruby On Rails offered remote pair-programming sessions between participants. &lt;/p&gt;

&lt;p&gt;Pair-programmming reuses the rather old organizational pattern of pilot+copilot : double-check, higher focusing, external view, and stronger engagement. You may object that programming is very different from flying. Yes, it is! &lt;/p&gt;

&lt;p&gt;But programming requires a strong level of accuracy too. Your pairing fellow is both a watch dog that tells you not to call a library without checking how it works, not to cut and paste code across your work, and an inspiration to experiment with new ways of coding. As some aerobatic aircrafts don&amp;rsquo;t include a copilot seat, some programs are implemented by lone wolves in the wild.&lt;/p&gt;

&lt;p&gt;Tools like teamviewer, logmein, skype, hangout or joinme have been instrumental to the success of remote pair working. There is still room for improvement:&lt;/p&gt;

&lt;p&gt;1) In a face-to-face meeting, there is a desk between the two interlocutors. Webcams should recreate this confortable spacing. I&amp;rsquo;m neither a barber nor a dental professional!
2) Remote working platforms lack of interoperability. Some only run on Windows, some require to install a software, others are more suitable for mobile use&amp;hellip; and don&amp;rsquo;t try to connect to hangout with skype
3) Security is a weak point for all of these platforms. Choosing which window you share, which you don&amp;rsquo;t, masking your passwords or your personal information are not intuitive. In my earlier days, I remembered displaying my passwords on a recorded session. Not so good a security practice!
4) Optimizing the screen definition so that everybody can watch comfortably is not supported either.&lt;/p&gt;

&lt;p&gt;Every desktop application from IDE to word processors will probably include some kind of remote pair working feature sooner or later. C9 already includes some simple pair-programming features, for instance.  &lt;/p&gt;

&lt;p&gt;Bugs in the code? Don&amp;rsquo;t blame me, it&amp;rsquo;s my pair programming partner who fooled around!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Return to the Greeter Bots</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/26/av-ecosystem-review-return-to-the-greeter-bots/"/>
    <id>http://blog.url.com/2017/09/26/av-ecosystem-review-return-to-the-greeter-bots/</id>
    <published>2017-09-26T01:00:00+01:00</published>
    <updated>2017-11-27T20:43:53+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="bots" src="/images/../images/bots2.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;I had no comments on the multiple source repository pull request (apart from my own), so I&amp;rsquo;ve merged that to play with on develop.  I want to pop back all the way to up to reviewing the flow of folks through AgileVentures and my experiments with the getting started pages, but there&amp;rsquo;s a couple of stops on the way.   First is to get the new code of conduct more prominent, and sort out the greeter bots; as well as finishing up the changes to the Premium Mob/F2F pages.&lt;/p&gt;

&lt;p&gt;So let&amp;rsquo;s start with the greeter bot, which should mention the code of conduct, I think.  First up I&amp;rsquo;ll merge in the simple unit tests I added previously:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
→ npm &lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;greeter_bot@1.0.0 &lt;span class="nb"&gt;test&lt;/span&gt; /Users/tansaku/Documents/GitHub/AgileVentures/greeter_bot
&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;mocha &lt;span class="nb"&gt;test&lt;/span&gt;/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.js

  Bot
    ✓ should include linked techtalk channel &lt;span class="k"&gt;in &lt;/span&gt;greeting
    ✓ should include linked new_members channel &lt;span class="k"&gt;in &lt;/span&gt;greeting
    ✓ should include linked random channel &lt;span class="k"&gt;in &lt;/span&gt;greeting

  3 passing &lt;span class="o"&gt;(&lt;/span&gt;9ms&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;They&amp;rsquo;re all passing on master, and now I can test drive the addition of the code of conduct link:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;  &lt;span class="nx"&gt;it&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'should include link to our code of conduct'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(){&lt;/span&gt;
    &lt;span class="nx"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;to&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'&amp;lt;https://github.com/AgileVentures/AgileVentures/blob/master/CODE_OF_CONDUCT.md|code of conduct&amp;gt;'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which fails:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot &lt;span class="o"&gt;(&lt;/span&gt;6_add_code_of_conduct&lt;span class="o"&gt;)]&lt;/span&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;
→ npm &lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;greeter_bot@1.0.0 &lt;span class="nb"&gt;test&lt;/span&gt; /Users/tansaku/Documents/GitHub/AgileVentures/greeter_bot
&lt;span class="gp"&gt;&amp;gt; &lt;/span&gt;mocha &lt;span class="nb"&gt;test&lt;/span&gt;/&lt;span class="k"&gt;**&lt;/span&gt;/&lt;span class="k"&gt;*&lt;/span&gt;.js

  Bot
    ✓ should include linked techtalk channel &lt;span class="k"&gt;in &lt;/span&gt;greeting
    ✓ should include linked new_members channel &lt;span class="k"&gt;in &lt;/span&gt;greeting
    ✓ should include linked random channel &lt;span class="k"&gt;in &lt;/span&gt;greeting
    1&lt;span class="o"&gt;)&lt;/span&gt; should include link to our code of conduct


  3 passing &lt;span class="o"&gt;(&lt;/span&gt;14ms&lt;span class="o"&gt;)&lt;/span&gt;
  1 failing

  1&lt;span class="o"&gt;)&lt;/span&gt; Bot should include link to our code of conduct:
     AssertionError: expected &lt;span class="s1"&gt;'Welcome and great to have you with us! Please do introduce yourself in &amp;lt;#C02G8J689|new_members&amp;gt; (if you haven\'&lt;/span&gt;t already&lt;span class="o"&gt;)&lt;/span&gt;, and &lt;span class="k"&gt;if &lt;/span&gt;you have any general technical thoughts/issues/questions please ask &lt;span class="k"&gt;in&lt;/span&gt; &amp;lt;&lt;span class="c"&gt;#C02AA0ARR|techtalk&amp;gt; - &amp;lt;#C0285CSUH|random&amp;gt; is for everything else :slightly_smiling_face:\n\n\nbtw, are you interested in React, Elixir or RSpec?  We\'re offering a &amp;lt;https://www.agileventures.org/premium-mob-offer|free Premium mob programming session&amp;gt; to anyone who likes us on facebook.com/agileventures or follows us on twitter.com/agileventures ...' to include '&amp;lt;https://github.com/AgileVentures/AgileVentures/blob/master/CODE_OF_CONDUCT.md|code of conduct&amp;gt;'&lt;/span&gt;
      at Context.&amp;lt;anonymous&amp;gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;/greeting_test.js:20:25&lt;span class="o"&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;greeting.js updated:&lt;/p&gt;
&lt;pre class="highlight javascript"&gt;&lt;code&gt;&lt;span class="nx"&gt;greeting&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;"\n\n\nPlease help us make AgileVentures a welcoming place by following our &amp;lt;https://github.com/AgileVentures/AgileVentures/blob/master/CODE_OF_CONDUCT.md|code of conduct&amp;gt;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the tests pass:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot (6_add_code_of_conduct)]$ 
→ npm test

&amp;gt; greeter_bot@1.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/greeter_bot
&amp;gt; mocha test/**/*.js

  Bot
    ✓ should include linked techtalk channel in greeting
    ✓ should include linked new_members channel in greeting
    ✓ should include linked random channel in greeting
    ✓ should include link to our code of conduct

  4 passing (9ms)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So now it&amp;rsquo;s a bit of a pain to do a complete manual test of this as it requires creating a new dummy user and signing up to a slack instance where this bot is installed.  So I just push to production from the branch:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/greeter_bot (6_add_code_of_conduct)]$ 
→ git push -f azure-production 6_add_code_of_conduct:master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A nice feature would be to be able to chat to the bot and get it to spit out the greeting at will, which would be handy for checking the format, if not the complete cycle of the functionality.  I&amp;rsquo;ll add that to the issues as I&amp;rsquo;ve been doing with every other thought as it comes up:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/greeter_bot/issues/17"&gt;Support messaging to bot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/greeter_bot/issues/16"&gt;Improve Templating&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/greeter_bot/issues/15"&gt;Follow Standard JS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but for now I have to wait for someone to join our slack instance to see the effect of the current change.  In the meantime I should get the link to the code of conduct into our Getting Started &amp;hellip; (also thinking that maybe we should migrate it from GitHub to be on our site), but one thing at a time.&lt;/p&gt;

&lt;p&gt;&lt;img src="https://dl.dropboxusercontent.com/s/49uuoke3uap9kpp/Screenshot%202017-09-26%2009.59.43.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d also love to update the project greeter bot to work with the new shared #wiki&lt;em&gt;edu&lt;/em&gt;dash_collab channel that links our Slack to the WikiEdu folks.  There also I now have tests that are passing:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot (master)]$ 
→ npm test

&amp;gt; project_greeter_bot@0.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
&amp;gt; mocha test/**/*.js

  Project Greeter bot
    ✓ should have LocalSupport channel greeting
    ✓ should have WebSiteOne channel greeting
    ✓ should have Rundfunk Mitbestimmen channel greeting
    ✓ should have Wiki EDU dashboard channel greeting

  4 passing (12ms)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A test failed and passed, since I am using the channel ids in tests:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot (25_update_wiki_edu_channel)]$ 
→ npm test

&amp;gt; project_greeter_bot@0.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
&amp;gt; mocha test/**/*.js

  Project Greeter bot
    ✓ should have LocalSupport channel greeting
    ✓ should have WebSiteOne channel greeting
    ✓ should have Rundfunk Mitbestimmen channel greeting
    1) should have Wiki EDU dashboard channel greeting

  3 passing (11ms)
  1 failing

  1) Project Greeter bot should have Wiki EDU dashboard channel greeting:
     AssertionError: expected { Object (C0KK907B5, C029E8G80, ...) } to have own property 'C36MNPWTD'
      at Context.&amp;lt;anonymous&amp;gt; (test/greetings_spec.js:17:35)

npm ERR! Test failed.  See above for more details.

[tansaku@Samuels-MBP:~/Documents/Github/AgileVentures/project_greeter_bot (25_update_wiki_edu_channel)]$ 
→ npm test

&amp;gt; project_greeter_bot@0.0.0 test /Users/tansaku/Documents/GitHub/AgileVentures/project_greeter_bot
&amp;gt; mocha test/**/*.js

  Project Greeter bot
    ✓ should have LocalSupport channel greeting
    ✓ should have WebSiteOne channel greeting
    ✓ should have Rundfunk Mitbestimmen channel greeting
    ✓ should have Wiki EDU dashboard channel greeting


  4 passing (9ms)

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Would be good to be &lt;a href="https://github.com/AgileVentures/project_greeter_bot/issues/27"&gt;looking those up off the slack api&lt;/a&gt;, maybe?  Anyhow, I deployed that branch to production, since the change in the id will only make sense on production, and we&amp;rsquo;ll have to wait for someone to join the new shared channel and see &amp;hellip;&lt;/p&gt;

&lt;p&gt;Phew, so that&amp;rsquo;s all the hanging bot stuff deployed (if not checked), and reminds me of all the little other tasks I&amp;rsquo;d like to do with the bots to make them and their projects friendlier, but I think that&amp;rsquo;s for another week - tomorrow I hope to be on to the Premium pages &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Always One More Test</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/25/av-ecosystem-review-always-one-more-test/"/>
    <id>http://blog.url.com/2017/09/25/av-ecosystem-review-always-one-more-test/</id>
    <published>2017-09-25T01:00:00+01:00</published>
    <updated>2017-11-23T19:59:38+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="one more test" src="/images/one_more_test.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So all of last week&amp;rsquo;s ecosystem review blogs were devoted to this new multiple repository feature.  And I think today too.  I hope today is the last since I really want to get on to clearing up some other content work and getting the new Code of Conduct front and center.  So I&amp;rsquo;ve just pulled out the latest develop and used the new &lt;code&gt;rake vcr_billy_caches:reset&lt;/code&gt; command to clean up the caches.  Bit difficult to remember, and did I update the docs?  The answer is no :-( but done now.  So I think I already have tests of rake commands, the style of which I can copy to test our data migration &amp;hellip; unlike &lt;a href="https://robots.thoughtbot.com/test-rake-tasks-like-a-boss"&gt;thoughtbot&lt;/a&gt; I&amp;rsquo;ve been going with Cucumber, which might run a little slower, but I can more easily see the data setup, so I stamp out a devops feature like so:&lt;/p&gt;
&lt;pre class="highlight gherkin"&gt;&lt;code&gt;&lt;span class="nt"&gt;@vcr&lt;/span&gt; &lt;span class="nt"&gt;@rake&lt;/span&gt;
&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Update from github urls to source repository model
  As a website admin,
  I want to move existing github urls to source repositories
  So that the system supports multiple repositories per project

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; projects have been added to database
    &lt;span class="err"&gt;Given the following legacy projects exist&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;description&lt;/span&gt;         &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;github_url&lt;/span&gt;                                    &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;commit_count&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WebsiteTwo&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;awesome&lt;/span&gt; &lt;span class="n"&gt;autograder&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/WebsiteTwo&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WebsiteOne&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;website&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/WebsiteOne&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;inactive&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;edx&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;MOOC&lt;/span&gt; &lt;span class="n"&gt;platform&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/edx&lt;/span&gt;                        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Unity&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Unity&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt;       &lt;span class="p"&gt;|&lt;/span&gt;                                               &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LocalSupport&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Scheduler&lt;/span&gt; &lt;span class="n"&gt;queue&lt;/span&gt;     &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/LocalSupport&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;1&lt;/span&gt;            &lt;span class="p"&gt;|&lt;/span&gt;

  &lt;span class="kn"&gt;Scenario&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Run the data migration to copy github urls to source repositories
    &lt;span class="nf"&gt;When&lt;/span&gt; I run the rake task for migrating github urls
    &lt;span class="err"&gt;Then I should see projects with following details&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;github_url&lt;/span&gt;                                    &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WebsiteTwo&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/WebsiteTwo&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;WebsiteOne&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;inactive&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/WebsiteOne&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;edx&lt;/span&gt;          &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/edx&lt;/span&gt;                        &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Unity&lt;/span&gt;        &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;                                               &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;LocalSupport&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;active&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;https://github.com/AgileVentures/LocalSupport&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which means I need a couple of new step definitions:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;When&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^I run the rake task for migrating github urls$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="vg"&gt;$rake&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'db:migrate_from_github_url_to_source_repository'&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;Given&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the following legacy projects exist:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="c1"&gt;# table is a table.hashes.keys # =&amp;gt; [:title, :description, :github_url, :status, :commit_count]&lt;/span&gt;
  &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;default_test_author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save!&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which as usual requires an update to the &lt;code&gt;@rake&lt;/code&gt; hook:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Before&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'@rake'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;scenario&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="k"&gt;unless&lt;/span&gt; &lt;span class="vg"&gt;$rake&lt;/span&gt;
    &lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'rake'&lt;/span&gt;
    &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rake_require&lt;/span&gt; &lt;span class="s1"&gt;'tasks/scheduler'&lt;/span&gt;
    &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rake_require&lt;/span&gt; &lt;span class="s1"&gt;'tasks/migrate_plans'&lt;/span&gt;
    &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rake_require&lt;/span&gt; &lt;span class="s1"&gt;'tasks/create_plans'&lt;/span&gt;
    &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;application&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;rake_require&lt;/span&gt; &lt;span class="s1"&gt;'tasks/db'&lt;/span&gt;
    &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;define_task&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:environment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="vg"&gt;$rake&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Rake&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Task&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which allowed me to isolate one syntax error in my rake task with this error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    When I run the rake task for migrating github urls                        # features/step_definitions/devops_steps.rb:67
      undefined method `create' for #&amp;lt;Project:0x007ffabb789318&amp;gt;
      Did you mean?  created_at (NoMethodError)
      ./lib/tasks/db.rake:5:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'
      ./lib/tasks/db.rake:4:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/devops_steps.rb:68:in `/^I run the rake task for migrating github urls$/'
      features/devops/migrate_github_urls.feature:17:in `When I run the rake task for migrating github urls'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;so I updated the task to:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;namespace :db do
  desc "migrate from github url to source repository domain model (copies github_url field to source repo model)"
  task migrate_from_github_url_to_source_repository: :environment do
    Project.all.each do |project|
      project.source_repositories.create(url: project[:github_url])
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which got the task running, but I was not seeing the projects I wanted:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Scenario: Run the data migration to copy github urls to source repositories # features/devops/migrate_github_urls.feature:16
    When I run the rake task for migrating github urls                        # features/step_definitions/devops_steps.rb:67
    Then I should see projects with following details:                        # features/step_definitions/projects_steps.rb:126
      | title        | status   | github_url                                    |
      | WebsiteTwo   | active   | https://github.com/AgileVentures/WebsiteTwo   |
      | WebsiteOne   | inactive | https://github.com/AgileVentures/WebsiteOne   |
      | edx          | active   | https://github.com/edx                        |
      | Unity        | active   |                                               |
      | LocalSupport | active   | https://github.com/AgileVentures/LocalSupport |

      expected: 0
           got: 1

      (compared using ==)
       (RSpec::Expectations::ExpectationNotMetError)
      ./features/step_definitions/projects_steps.rb:131:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'
      ./features/step_definitions/projects_steps.rb:129:in `each'
      ./features/step_definitions/projects_steps.rb:129:in `/^I should see projects with following details:$/'
      features/devops/migrate_github_urls.feature:18:in `Then I should see projects with following details:'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(wish I could get the green red and blue in github syntax markup for cuke and rspec output &amp;hellip;) and I see that the step definition appears to be hard coded to be doing something for commit counts:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^I should see projects with following details:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="c1"&gt;# table is a Cucumber::Core::Ast::DataTable&lt;/span&gt;
   &lt;span class="n"&gt;projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;
   &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; 
      &lt;span class="n"&gt;updated_project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updated_project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit_count&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"commit_count"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
   &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I guess I&amp;rsquo;ll rename that to be more explicit about what it&amp;rsquo;s doing and similarly for my own one (could create some generic method that did what the step said, but not now):&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^I should see projects looked up by title with first source repository same as github_url:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="c1"&gt;# table is a Cucumber::Core::Ast::DataTable&lt;/span&gt;
  &lt;span class="n"&gt;projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;
  &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;updated_project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updated_project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;github_url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"github_url"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updated_project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"github_url"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Then&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^I should see projects looked up by title with the correct commit count:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="c1"&gt;# table is a Cucumber::Core::Ast::DataTable&lt;/span&gt;
  &lt;span class="n"&gt;projects&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;
  &lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="n"&gt;updated_project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"title"&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;updated_project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;commit_count&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;eq&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"commit_count"&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;to_i&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which all now passes, but since I created the task before the test, I need to break the test; which I can do by commenting out the rake step and pleasingly that gives me the right fail.  Okay, I think I can pack this up and if the CI passes we can get it onto develop and start some manual tests there&amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review That Domain Review Step</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/22/av-ecosystem-review-that-domain-review-step/"/>
    <id>http://blog.url.com/2017/09/22/av-ecosystem-review-that-domain-review-step/</id>
    <published>2017-09-22T01:00:00+01:00</published>
    <updated>2017-11-22T21:32:51+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="domain review" src="/images/domain_review.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Okay, so I have the multiple repository functionality basically working, but it&amp;rsquo;s time to clear up and make things right &amp;hellip; here&amp;rsquo;s my checklist from yesterday:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the acceptance test does not check that the second repo has been stored&lt;/li&gt;
&lt;li&gt;the acceptance test is not very readable&lt;/li&gt;
&lt;li&gt;currently the project page does not display all the repos&lt;/li&gt;
&lt;li&gt;the project has various unit tests based on being able to set the github_url&lt;/li&gt;
&lt;li&gt;the project model validates the URL&lt;/li&gt;
&lt;li&gt;the process for safely migrating the existing data on production&lt;/li&gt;
&lt;li&gt;the old hand rolled js from my initial attempt is hanging around&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So attacking from the unit test side I notice that we do not mention the &lt;code&gt;with_github_url&lt;/code&gt; scope anywhere in our tests, which I can rectify with the following:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;context&lt;/span&gt; &lt;span class="s1"&gt;'.with_github_url'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'returns all projects that have at least one source repository'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;FactoryGirl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;url: &lt;/span&gt;&lt;span class="s1"&gt;'https://github.com/AgileVentures/shf-project'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;project2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;FactoryGirl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;project2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;url: &lt;/span&gt;&lt;span class="s1"&gt;'https://github.com/AgileVentures/shf-project2'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;with_github_url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;project2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="s1"&gt;'does not return projects that do not have a source repository'&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;FactoryGirl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="n"&gt;expect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;with_github_url&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;not_to&lt;/span&gt; &lt;span class="kp"&gt;include&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;although I can&amp;rsquo;t actually run it as I&amp;rsquo;m waiting for a cucumber run to complete (got to work on the performance there).  That gap allows me to agonize about whether this unit test is sufficiently rigorous, or if it simply testing the existing Rails architecture?  I think it&amp;rsquo;s the right thing.  It&amp;rsquo;s providing an executable check that the class method &lt;code&gt;.with_github_url&lt;/code&gt; is doing what we expect it to do.  &lt;/p&gt;

&lt;p&gt;Bigger picture quickly, I&amp;rsquo;m not planning to immediately remove the github_url field from the projects model.  We&amp;rsquo;ll need a task to migrate all of them in to source repository models, and based on previous pain I&amp;rsquo;ll be ensuring we have a follow up task in a different PR that we deploy to production separately to delete that field later on when the dust has settled.&lt;/p&gt;

&lt;p&gt;Okay so the cukes finished running.  I got a couple of errors in the way I&amp;rsquo;m using FactoryGirl/build_stubbed.  Fix those and I&amp;rsquo;ve got the following Project RSpec output:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ be rspec -fd spec/models/project_spec.rb 
[Coveralls] Using SimpleCov's 'rails' settings.

Randomized with seed 34619

Project
  #github_repo_user_name
    deals with hyphen gracefully
  #codeclimate_gpa
    returns the CodeClimate GPA
  #search
    should return paginated projects with 5 per page
  #url_for_me
    returns correct url for show action
    returns correct url for other actions
  #members
    returns followers of the project who have a public profile
  #contribution_url
    returns the url for the project github contribution page
  #jitsi_room_link
    returns correct link
  .with_github_url
    returns all projects that have at least one source repository
    does not return projects that do not have a source repository
  #youtube_tags
    returns the tags for project including the project title
  #github_repo
    returns the proper repo name if github url exists
    returns blank if github url does not exist
  #members_tags
    returns the tags for project members with thier youtube user names
  #save
    should not accept invalid Pivotal Tracker URL
    should throw error for incomplete github url
    should be invalid without status
    should be invalid without description
    should not accept invalid github url
    has public-activity enabled
    should respond to #create_activity
    should be a valid with all the correct attributes
    should be invalid without title
    Pivotal Tracker URL
      should accept new pivotal traker url format
      should accept the subject id and convert that into a valid URL
      should correct mistakes in pivotal tracker url
    Updating friendly ids
      should still be able to find the project by its old id
      should regenerate the project's friendly id when the title changes

Finished in 0.65804 seconds (files took 8.15 seconds to load)
28 examples, 0 failures
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;m not sure that this output is telling the domain story that I&amp;rsquo;d like, but let&amp;rsquo;s move on.  I was thinking that we would have to move the github url validation into source repositories, and I think we will ultimatley, but it seems to be currently allowing us to validate urls on the first repo, if I&amp;rsquo;m reading this all correctly.&lt;/p&gt;

&lt;p&gt;Since I&amp;rsquo;ve created the test (for the scope) after the code (bad programmer) I quickly break the the scope and check that the test fails, which it does.  This code&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="ss"&gt;:with_github_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:source_repositories&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;source_repositories: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;causes this error&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;  1&lt;span class="o"&gt;)&lt;/span&gt; Project.with_github_url returns all projects that have at least one &lt;span class="nb"&gt;source &lt;/span&gt;repository
     Failure/Error: expect&lt;span class="o"&gt;(&lt;/span&gt;Project.with_github_url&lt;span class="o"&gt;)&lt;/span&gt;.to include&lt;span class="o"&gt;(&lt;/span&gt;project, project2&lt;span class="o"&gt;)&lt;/span&gt;

       expected &lt;span class="c"&gt;#&amp;lt;ActiveRecord::Relation []&amp;gt; to include #&amp;lt;Project id: 1, title: "Title 1", description: "Warp fields stabilize.", status: "We feel your prese...l, pitch: "'I AM the greatest!' - M. Ali", commit_count: 0, image_url: nil, last_github_update: nil&amp;gt; and #&amp;lt;Project id: 2, title: "Title 2", description: "Warp fields stabilize.", status: "We feel your prese...l, pitch: "'I AM the greatest!' - M. Ali", commit_count: 0, image_url: nil, last_github_update: nil&amp;gt;&lt;/span&gt;
       Diff:
       @@ -1,3 +1,2 @@
       -[#&amp;lt;Project id: 1, title: &lt;span class="s2"&gt;"Title 1"&lt;/span&gt;, description: &lt;span class="s2"&gt;"Warp fields stabilize."&lt;/span&gt;, status: &lt;span class="s2"&gt;"We feel your presence."&lt;/span&gt;, created_at: &lt;span class="s2"&gt;"2017-09-22 09:12:29"&lt;/span&gt;, updated_at: &lt;span class="s2"&gt;"2017-09-22 09:12:29"&lt;/span&gt;, user_id: nil, slug: &lt;span class="s2"&gt;"title-1"&lt;/span&gt;, github_url: nil, pivotaltracker_url: nil, pitch: &lt;span class="s2"&gt;"'I AM the greatest!' - M. Ali"&lt;/span&gt;, commit_count: 0, image_url: nil, last_github_update: nil&amp;gt;,
       - &lt;span class="c"&gt;#&amp;lt;Project id: 2, title: "Title 2", description: "Warp fields stabilize.", status: "We feel your presence.", created_at: "2017-09-22 09:12:29", updated_at: "2017-09-22 09:12:29", user_id: nil, slug: "title-2", github_url: nil, pivotaltracker_url: nil, pitch: "'I AM the greatest!' - M. Ali", commit_count: 0, image_url: nil, last_github_update: nil&amp;gt;]&lt;/span&gt;
       +[]

     &lt;span class="c"&gt;# ./spec/models/project_spec.rb:174:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;So then I quickly add a simple test of the SourceRepository:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="n"&gt;describe&lt;/span&gt; &lt;span class="no"&gt;SourceRepository&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;type: :model&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;belong_to&lt;/span&gt; &lt;span class="ss"&gt;:project&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which failed in the way I expected when I broke the SourceRepository.  The verbose RSpec output here is much more like what I expect as a description of my domain model:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;SourceRepository
  should belong to project
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I add the following to the Project spec:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_many&lt;/span&gt; &lt;span class="ss"&gt;:source_repositories&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_many&lt;/span&gt; &lt;span class="ss"&gt;:documents&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_many&lt;/span&gt; &lt;span class="ss"&gt;:event_instances&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;have_many&lt;/span&gt; &lt;span class="ss"&gt;:commit_counts&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="n"&gt;it&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;is_expected&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;to&lt;/span&gt; &lt;span class="n"&gt;belong_to&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and I get some more domain model oriented chatter from RSpec when running the Project spec:&lt;/p&gt;
&lt;pre class="highlight shell"&gt;&lt;code&gt;Project
  should belong to user
  should have many source_repositories
  should have many documents
  should have many event_instances
  should have many commit_counts
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I remove the hand-rolled js I started this feature on.   I rebase to develop so that I can do &lt;code&gt;git diff develop&lt;/code&gt; and look through the specific changes I made, which are:&lt;/p&gt;

&lt;p&gt;1) upgrade poltergeist and add the cocoon gem
2) adjust the projects controller to allow source repository attributes and to build a single default source repo for new projects
3) adjust the way the &lt;code&gt;with_github_url&lt;/code&gt; scope works
4) update the project form to give it an id, and replace the current &lt;code&gt;github_url&lt;/code&gt; text field with a nested source repo field(s) (cocoon gem syntax)
5) added js to update source repository form field names to include numerics
6) added a partial for creating new source repo fields
7) migration to add the source repos table
8) added a create projects feature and moved the create related scenarios there
9) added a remote debugging step for cucumber
10) removed the puffing billy proxy from the poltergeist config to allow remote debugging
11) added factories and specs for source repo model
12) adjusted various tests to work with the updated domain model
13) addded more tests to Project to make the domain model more explicit
14) deleted view specs&lt;/p&gt;

&lt;p&gt;Hmmmm.  So the key missing thing in some ways is that we&amp;rsquo;re not displaying the multiple repos and the acceptance tests are not as extensive or as readable as I would like, but I have a hunch that I need to get this into production with some kind of rake task to move the data in the github&lt;em&gt;url in the Project model into the source&lt;/em&gt;repository, but I&amp;rsquo;ve created a new getter that&amp;rsquo;s blocking my access.  This &lt;a href="https://stackoverflow.com/questions/21835116/how-can-i-overwrite-a-getter-method-in-an-activerecord-model"&gt;SO post&lt;/a&gt; tells me I can reference the original active-record field via self[:github_url], so I could have a task like this:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;namespace :db do
  desc "migrate from github url to source repository domain model (copies github_url field to source repo model)"
  task migrate_from_github_url_to_source_repository: :environment do
    Project.all.each do |project|
      project.create(:source_repository, url: project[:github_url])
    end
  end

end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;btw, creating the task outline with &lt;code&gt;rails g task db migrate_from_github_url_to_source_repository&lt;/code&gt; was handy - thanks Rails!&lt;/p&gt;

&lt;p&gt;So then I agonize about whether I should write a test for this one off task &amp;hellip; of course thoughtbot has an &lt;a href="https://robots.thoughtbot.com/test-rake-tasks-like-a-boss"&gt;article&lt;/a&gt; on it.  But I&amp;rsquo;m out of time, will have to push that to next week, or to a refactoring chore - that&amp;rsquo;s where all the acceptance test changes will be going anyway.  This migration is the pivotal componet so I&amp;rsquo;ll test that first thing on Monday I guess &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Another free refill?</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/22/another-free-refill/"/>
    <id>http://blog.url.com/2017/09/22/another-free-refill/</id>
    <published>2017-09-22T01:00:00+01:00</published>
    <updated>2017-09-27T21:07:18+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="free refill" src="/images/freerefill.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;Earlier this year, I undertook a training session targeting small business manager to teach them how to improve profitability of business projects. The course instructor showed us a rather clear way to deal with profitabiliy. First, you estimate your break-even hourly rate, based on your history. Then, you don&amp;rsquo;t sell any project under the bottom line. After that, you prioritize your work to put the highest priority on the most profitable projects. Finally, you keep any accepted project above the bottom line. &lt;/p&gt;

&lt;p&gt;The idea is quite simple. It&amp;rsquo;s all down to the execution. I began to schedule my workday according to business priorities preferably to a sense of urgency that overcame me before. Then, everytime I felt I was at risk to hit the bottom line, I shifted my attention towards what I really sold to the client annd I reduced my objectives accordingly. Finally, I was trying to become a project reviewer for a well known MOOC platform. But the hourly rate was much too low. I felt relief to drop my candidature. Paid projects management improved greatly. But, a significant part of my workday, dedicated to volunteer projects, was out of the scope of this effort.  &lt;/p&gt;

&lt;p&gt;Too many commitments, workaholism, things we begin and we never achieve, any freelance worker faces these contradictions. The inherent contradiction is even stronger when you work on non-paid project. How to prioritize your volunteer works?&lt;/p&gt;

&lt;p&gt;Ten working hours a day is my upper limit, considering that I&amp;rsquo;m not a computer nerd, I&amp;rsquo;ve got a family, hobbies, and a social life &amp;hellip; I was already busy ten hours a day. Adding anything to my schedule implied removing something else. I have been more or less active on professional social networks for three years. I first thought this commitment would improve my reputation and fuel my prospect pipeline. But in three years, the return was not very encouraging. I felt that my social network activity was fueled by bitterness or anxiety or ego or the three rather than by a clear sense of business opportunity! I decided to forget social networks. Two to three hours a week were freed thanks to this good resolution.&lt;/p&gt;

&lt;p&gt;I chose to devote these hours to Agile Venture mob programming sessions. It&amp;rsquo;s a real community, with real developers. You can both learn by observing how skilled developers work and by doing things by yourself. &lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m still in the midstream of my prioritization effort. I&amp;rsquo;ve been very actively participating in MOOCs for five years. My skills greatly improved as a result of this effort.  But choosing which courses to invest on is not easy. Knowledge is a bit like indirects costs. You don&amp;rsquo;t really know how to assign it to your achievements. During the first years, the offer flourished. I tried many courses, from Economy to Computer Sciences. I progressively focused on Computer Science and left courses as they switched to paid offers. &lt;/p&gt;

&lt;p&gt;As I was giving up, a prominent MOOC platform offers me to beta-test courses for free. Free refill is the end of resolution and the beginning of passive hyperactivity! You may begin your training week with a course on Embedded systems and end, on friday, with a course on PythonML on friday, without completing any. Does it make sense to participate in a mob programming session about RSPEC on monday, another one about phoenix on wednesday, on the last one about React on friday, when you only need to develop a small web app with React?&lt;/p&gt;

&lt;p&gt;AgileVenture Premium Mob includes some kind of Professional Development Planning Support. I may ask the team to help me clean my training plan. But I&amp;rsquo;m still afraid they will tell me to stop learning Tensor Flow or the nitty gritty of Intel Parallel Architecture if I don&amp;rsquo;t have any prospect to work in these fields in the next year! &lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>AV EcoSystem Review Cocoon Home Straight</title>
    <link rel="alternate" href="http://blog.url.com/2017/09/21/av-ecosystem-review-cocoon-home-straight/"/>
    <id>http://blog.url.com/2017/09/21/av-ecosystem-review-cocoon-home-straight/</id>
    <published>2017-09-21T01:00:00+01:00</published>
    <updated>2017-11-21T21:45:17+00:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;&lt;img alt="home straight" src="/images/Home_Straight.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;So the answer to my question of yesterday, &amp;ldquo;Why is Acceptance Testing so hard&amp;rdquo; is that any coding is hard when you can&amp;rsquo;t get error messages.  The remote debug inspector I set up yesterday allowed me to see that our Capybara/Poltergeist/PhantomJS setup could not handle ES6 string interpolations.  It raises the question about why not, but I want to push on with this feature.&lt;/p&gt;

&lt;p&gt;The test is now failing on this error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    And I should see a link to "multiple repo project" on github            # features/step_definitions/projects_steps.rb:84
      undefined method `split' for nil:NilClass (NoMethodError)
      ./features/step_definitions/projects_steps.rb:86:in `/^I (should not|should) see a link to "(.*?)" on github$/'
      features/projects/create_projects.feature:84:in `And I should see a link to "multiple repo project" on github'
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;because the GitHub URL is being stored in a new location that&amp;rsquo;s not reflected in the project page.  The project page currently shows the GitHub link via this code:&lt;/p&gt;
&lt;pre class="highlight erb"&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;span&lt;/span&gt; &lt;span class="na"&gt;class=&lt;/span&gt;&lt;span class="s"&gt;"small"&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;link_to&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="vi"&gt;@project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;github_url&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;last&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; "&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="vi"&gt;@project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;github_url&lt;/span&gt; &lt;span class="cp"&gt;%&amp;gt;&lt;/span&gt;on GitHub&lt;span class="nt"&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which explains the error in the test.  Just to see if it worked I threw the following into the project model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;github_url&lt;/span&gt;
    &lt;span class="n"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;url&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and I was rewarded with a completely passing acceptance test.  However I have various issues to address:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the acceptance test does not check that the second repo has been stored&lt;/li&gt;
&lt;li&gt;the acceptance test is not very readable&lt;/li&gt;
&lt;li&gt;the project page does not currently display all the repos&lt;/li&gt;
&lt;li&gt;the project has various unit tests based on being able to set the github_url&lt;/li&gt;
&lt;li&gt;the project model validates the URL&lt;/li&gt;
&lt;li&gt;the process for safely migrating the existing data on production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and maybe others I haven&amp;rsquo;t thought of yet, so I&amp;rsquo;m tempted to run the other project acceptance tests and see what breaks &amp;hellip; other acceptance tests are breaking because the create project form has changed and they can&amp;rsquo;t now find the form fields they expect.  I updated a few label strings in the tests and that project code to:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;github_url&lt;/span&gt;
    &lt;span class="n"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;first&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;try&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:url&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and all the project &amp;ldquo;create&amp;rdquo; acceptance tests are green; so I kick off a run of the rest of the project acceptance tests.  Am I being bad here?  Shouldn&amp;rsquo;t I be clearly setting out my domain model and getting all my unit tests in place first?  My defense is that I&amp;rsquo;m sidling up on that, trying to use the existing tests from the outside in to give me the bigger picture here.  I very definitely don&amp;rsquo;t plan to just hack the app code until all the acceptance tests pass :-)&lt;/p&gt;

&lt;p&gt;I get the project &amp;ldquo;show&amp;rdquo; acceptance tests to pass with the following changed step definition:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;Given&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sr"&gt;/^the following projects exist:$/&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="n"&gt;table&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;hashes&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;each&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:author&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;present?&lt;/span&gt;
      &lt;span class="n"&gt;u&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;User&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;find_by_first_name&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:author&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;user_id: &lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;id&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;default_test_author&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;projects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;except&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'author'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'tags'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:github_url&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;present?&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;url: &lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:github_url&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="c1"&gt;# &amp;lt;-- change here&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:tags&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;tag_list&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:tags&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="ss"&gt;parse: &lt;/span&gt;&lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
    &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;save!&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and the project &amp;ldquo;edit&amp;rdquo; acceptance failures look pretty much like form field names just need to be changed, but actually the step definition needs a further change, specifically:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:github_url&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nf"&gt;present?&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;build&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;url: &lt;/span&gt;&lt;span class="nb"&gt;hash&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="ss"&gt;:github_url&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
      &lt;span class="n"&gt;project&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;source_repositories&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;build&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to ensure the projects created in the background steps have the default single source repository when they start up; and with that I have all the project acceptance tests green.  Now I attack the RSpec unit and integration tests, where I expect a slew of failures that should push me towards updating the domain model effectively.&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;→ be rspec spec/models/project_spec.rb 
[Coveralls] Using SimpleCov's 'rails' settings.

Randomized with seed 60909
.F...F...F....F...........

Failures:

  1) Project#github_repo returns the proper repo name if github url exists
     Failure/Error: expect(project.github_repo).to eq 'AgileVentures/WebsiteOne'

       expected: "AgileVentures/WebsiteOne"
            got: ""

       (compared using ==)
     # ./spec/models/project_spec.rb:131:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  2) Project#github_repo_user_name deals with hyphen gracefully
     Failure/Error: expect(subject.github_repo_user_name).to eq 'shf-project'

       expected: "shf-project"
            got: ""

       (compared using ==)
     # ./spec/models/project_spec.rb:145:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  3) Project#save should throw error for incomplete github url
     Failure/Error: expect{ subject.github_repo_name }.to raise_error(NoMethodError, "undefined method `[]' for nil:NilClass")
       expected NoMethodError with "undefined method `[]' for nil:NilClass" but nothing was raised
     # ./spec/models/project_spec.rb:38:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  4) Project#save should not accept invalid github url
     Failure/Error: expect(subject).to_not be_valid
       expected #&amp;lt;Project id: 1020, title: "Title 19", description: "Warp fields stabilize.", status: "We feel your presence.", created_at: nil, updated_at: nil, user_id: nil, slug: "title-19", github_url: "https:/github.com/google/instant-hangouts", pivotaltracker_url: nil, pitch: "'I AM the greatest!' - M. Ali", commit_count: 0, image_url: nil, last_github_update: nil&amp;gt; not to be valid
     # ./spec/models/project_spec.rb:33:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

Finished in 0.65807 seconds (files took 8.4 seconds to load)
26 examples, 4 failures

Failed examples:

rspec ./spec/models/project_spec.rb:129 # Project#github_repo returns the proper repo name if github url exists
rspec ./spec/models/project_spec.rb:144 # Project#github_repo_user_name deals with hyphen gracefully
rspec ./spec/models/project_spec.rb:36 # Project#save should throw error for incomplete github url
rspec ./spec/models/project_spec.rb:31 # Project#save should not accept invalid github url
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;let&amp;rsquo;s take these in turn.  The first failing spec is&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    it 'returns the proper repo name if github url exists' do
      project = build_stubbed(:project, github_url: 'https://github.com/AgileVentures/WebsiteOne')
      expect(project.github_repo).to eq 'AgileVentures/WebsiteOne'
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which I adjusted  to:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;    it 'returns the proper repo name if github url exists' do
      project = build_stubbed(:project)
      project.source_repositories.create(url: 'https://github.com/AgileVentures/WebsiteOne')
      expect(project.github_repo).to eq 'AgileVentures/WebsiteOne'
    end
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and then passes, and I assume we&amp;rsquo;re not &lt;a href="https://robots.thoughtbot.com/use-factory-girls-build-stubbed-for-a-faster-test"&gt;hitting the database&lt;/a&gt;.  Using other similar fixes I have all the project specs passing, so I guess I&amp;rsquo;ll run all the other specs to see if there are any other angles I&amp;rsquo;m missing.  The other thing that occurs to me is that we should have some specs for the new SourceRepository model.  I&amp;rsquo;m also unsure of the namings.  Should I have called it GitHubUrl or GitHubLink?  Does it matter?  I&amp;rsquo;d love us to be able to support BitBucket and other source repositories in the future &amp;hellip; anyhow, running the rest of the specs shows me that we&amp;rsquo;ve got a few more issues:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Failures:

  1) GithubCommitsJob.job stores total commit count only for projects that have a github_url
     Failure/Error: expect(project.commit_count).to be &amp;gt; 1

       expected: &amp;gt; 1
            got:   0
     # ./spec/jobs/github_commits_job_spec.rb:28:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  2) GithubCommitsJob.job stores commit counts only for users that have a github_profile_url
     Failure/Error: expect(project.commit_counts.map(&amp;amp;:user)).to match_array(@users_with_github_profile_urls)

       expected collection contained:  [#&amp;lt;User id: 3, email: "trey@howe.co", encrypted_password: "$2a$04$plCVt32oux72jZ5KZxe9weafqhT1Uo41SIF... receive_mailings: true, timezone_offset: nil, country_code: nil, status_count: 0, deleted_at: nil&amp;gt;]
       actual collection contained:    []
       the missing elements were:      [#&amp;lt;User id: 3, email: "trey@howe.co", encrypted_password: "$2a$04$plCVt32oux72jZ5KZxe9weafqhT1Uo41SIF... receive_mailings: true, timezone_offset: nil, country_code: nil, status_count: 0, deleted_at: nil&amp;gt;]
     # ./spec/jobs/github_commits_job_spec.rb:33:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  3) GithubCommitsJob.job stores correct total commit count for projects
     Failure/Error: expect(project.commit_count).to eq 3116

       expected: 3116
            got: 0

       (compared using ==)
     # ./spec/jobs/github_commits_job_spec.rb:42:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  4) GithubCommitsJob.job stores commit counts only for projects that have a github_url
     Failure/Error: expect(project.commit_counts.count).to eq(1)

       expected: 1
            got: 0

       (compared using ==)
     # ./spec/jobs/github_commits_job_spec.rb:23:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  5) GithubCommitsJob.job stores correct commit counts by user and project
     Failure/Error: expect(CommitCount.find_by!(project: project, user: @users[0]).commit_count).to eq 481

     ActiveRecord::RecordNotFound:
       Couldn't find CommitCount
     # /Users/tansaku/.rvm/gems/ruby-2.3.1/gems/activerecord-4.2.8/lib/active_record/core.rb:196:in `find_by!'
     # ./spec/jobs/github_commits_job_spec.rb:37:in `block (3 levels) in &amp;lt;top (required)&amp;gt;'

  6) GithubLastUpdatesJob#run shf-project with hyphen has correct last commit date after job run
     Failure/Error: expect(project.reload.last_github_update).not_to be_nil

       expected: not nil
            got: nil
     # ./spec/jobs/github_last_updates_job_spec.rb:9:in `block (4 levels) in &amp;lt;top (required)&amp;gt;'

  7) projects/show.html.erb renders a link to the project's github page
     Failure/Error: expect(rendered).to have_link("#{project.github_url.split('/').last}", :href =&amp;gt; project.github_url)

     NoMethodError:
       undefined method `split' for nil:NilClass
     # ./spec/views/projects/show.html.erb_spec.rb:42:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'

  8) projects/edit.html.erb renders project form labels
     Failure/Error: expect(rendered).to have_text('GitHub link')
       expected to find text "GitHub link" in "edit the Title 400 project Title Image url Description Warp fields stabilize. Status Active Closed Pending Add more repos Issue Tracker link Back $(document).on('ready', function(){ $('#source_repositories').on('cocoon:after-insert', function(e, added_repo) { var sourceRepositories = $('#project_form').find('.nested-fields'); var sourceRepositoriesSize = $(sourceRepositories).size(); if (sourceRepositoriesSize &amp;gt; 1) { for(var i = 1; i &amp;lt; sourceRepositoriesSize; i++){ $(sourceRepositories[i]).find('.repo_field_label').html('GitHub url ('+(i+1)+')') } } }); })"
     # ./spec/views/projects/edit.html.erb_spec.rb:16:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'

  9) projects/edit.html.erb renders project form fields
     Failure/Error: expect(rendered).to have_field('GitHub link')
       expected to find field "GitHub link" but there were no matches
     # ./spec/views/projects/edit.html.erb_spec.rb:26:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'

Finished in 1 minute 4.01 seconds (files took 9.28 seconds to load)
940 examples, 9 failures, 2 pending

Failed examples:

rspec ./spec/jobs/github_commits_job_spec.rb:27 # GithubCommitsJob.job stores total commit count only for projects that have a github_url
rspec ./spec/jobs/github_commits_job_spec.rb:32 # GithubCommitsJob.job stores commit counts only for users that have a github_profile_url
rspec ./spec/jobs/github_commits_job_spec.rb:41 # GithubCommitsJob.job stores correct total commit count for projects
rspec ./spec/jobs/github_commits_job_spec.rb:22 # GithubCommitsJob.job stores commit counts only for projects that have a github_url
rspec ./spec/jobs/github_commits_job_spec.rb:36 # GithubCommitsJob.job stores correct commit counts by user and project
rspec ./spec/jobs/github_last_updates_job_spec.rb:7 # GithubLastUpdatesJob#run shf-project with hyphen has correct last commit date after job run
rspec ./spec/views/projects/show.html.erb_spec.rb:39 # projects/show.html.erb renders a link to the project's github page
rspec ./spec/views/projects/edit.html.erb_spec.rb:11 # projects/edit.html.erb renders project form labels
rspec ./spec/views/projects/edit.html.erb_spec.rb:21 # projects/edit.html.erb renders project form fields
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Code relating to checking commits on Github is failing &amp;hellip;, although those can probably be fixed by creating the projects with associated source reposiories, and those view spec failures can probably be addressed by deleting the view specs.  Although I did also need to update this scope on the Project model:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;  &lt;span class="n"&gt;scope&lt;/span&gt; &lt;span class="ss"&gt;:with_github_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;includes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:source_repositories&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nf"&gt;where&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;not&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;source_repositories: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="kp"&gt;nil&lt;/span&gt; &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and with that I think I may have gotten all the specs green.  There&amp;rsquo;s still a lot to do, but I&amp;rsquo;m reassured that I&amp;rsquo;m covering the majority of the angles.  I&amp;rsquo;ll push up this code into the PR and tomorrow I can work on cleaning up the domain model, tightening up the unit tests, and maybe even complete the first phase of this feature?  I note also that we have a load of cruft in the spec output - would love to clear that out, but can I prioritise it?&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;Randomized with seed 51520
.....................................................Unused parameters passed to Capybara::Queries::SelectorQuery : ["/users/sign_in"]
Unused parameters passed to Capybara::Queries::SelectorQuery : ["/users/password/new"]
..Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/github"]
ou attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:244)
.DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:239)
........DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:158)
.DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:174)
.DEPRECATION WARNING: You attempted to assign a value which is not explicitly `true` or `false` ("never") to a boolean column. Currently this value casts to `false`. This will change to match Ruby's semantics, and will cast to `true` in Rails 5. If you would like to maintain the current behavior, you should explicitly handle the values you would like cast to `false`. (called from block (3 levels) in &amp;lt;top (required)&amp;gt; at /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/event_spec.rb:142)
............................Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/event-131"]
..Unused parameters passed to Capybara::Queries::SelectorQuery : ["/projects/title-240"]
......................................*...............................Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/github?origin="]
Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/gplus?origin="]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/users/sign_up"]
Unused parameters passed to Capybara::Queries::SelectorQuery : ["/users/password/new"]
..Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/github"]
Unused parameters passed to Capybara::Queries::SelectorQuery : ["/auth/gplus"]
......................................WARNING: Using the `raise_error` matcher without providing a specific error or message risks false positives, since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing the expectation to pass without even executing the method you are intending to call. Actual error raised was #&amp;lt;ActiveRecord::StatementInvalid: PG::NotNullViolation: ERROR:  null value in column "user_id" violat...
: UPDATE "authentications" SET "user_id" = $1, "updated_at" = $2 WHERE "authentications"."id" = $3&amp;gt;. Instead consider providing a specific error class or message. This message can be suppressed by setting: `RSpec::Expectations.configuration.on_potential_false_positives = :nothing`. Called from /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/models/authentication_spec.rb:12:in `block (2 levels) in &amp;lt;top (required)&amp;gt;'.
.............................*.......WARNING: Using the `raise_error` matcher without providing a specific error or message risks false positives, since `raise_error` will match when Ruby raises a `NoMethodError`, `NameError` or `ArgumentError`, potentially allowing the expectation to pass without even executing the method you are intending to call. Actual error raised was #&amp;lt;ActiveRecord::RecordNotFound: User has not exposed his profile publicly&amp;gt;. Instead consider providing a specific error class or message. This message can be suppressed by setting: `RSpec::Expectations.configuration.on_potential_false_positives = :nothing`. Called from /Users/tansaku/Documents/GitHub/AgileVentures/WebsiteOne/spec/controllers/users_controller_spec.rb:67:in `block (4 levels) in &amp;lt;top (required)&amp;gt;'.
..................................................................Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1574"]
..Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1576"]
..Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1578"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1579"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1580"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/code"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/grow"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/learn"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/pair"]
.Unused parameters passed to Capybara::Queries::SelectorQuery : ["/events/1585"]
.......................................................Unused parameters passed to Capybara::Queries::SelectorQuery : ["/sponsors"]
...............................
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;hmmm &amp;hellip;&lt;/p&gt;
</content>
  </entry>
</feed>
