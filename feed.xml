<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-09-23T01:00:00+01:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Longer than Expected</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/23/longer-than-expected/"/>
    <id>http://blog.url.com/2016/09/23/longer-than-expected/</id>
    <published>2016-09-23T01:00:00+01:00</published>
    <updated>2016-09-23T18:42:57+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Adding the function to give Karma credit for attending hangouts took longer than expected.  Ironically spiking it had been fast, but adding a test for it was time consuming and frustrating.  I&amp;rsquo;m trying to dissect why that was.  Looking back I can see a few things that caused us to spin our wheels:&lt;/p&gt;

&lt;p&gt;1) the EventInstance FactoryGirl was creating a participants structure that was different to our assumptions
2) the &lt;code&gt;after_validation&lt;/code&gt; hook on user causes the Karma calculation to take place during FactoryGirl object creation
3) the EventInstance FactoryGirl was creating an additional user object
4) the version of FactoryGirl we are on (4.5) does not &lt;a href="https://robots.thoughtbot.com/getting-sequential-a-look-into-a-factory-girl"&gt;reset sequence integers between test runs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s have a quick look at the original EventInstance FactoryGirl factory:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;FactoryGirl&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;define&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="ss"&gt;:participant&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;:person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;displayName: &lt;/span&gt;&lt;span class="s2"&gt;"Participant_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="s2"&gt;"youtube_id_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;isBroadcaster: &lt;/span&gt;&lt;span class="s1"&gt;'false'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="n"&gt;sequence&lt;/span&gt; &lt;span class="ss"&gt;:broadcaster&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
    &lt;span class="p"&gt;[&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;:person&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="ss"&gt;displayName: &lt;/span&gt;&lt;span class="s2"&gt;"Broadcaster&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;id: &lt;/span&gt;&lt;span class="s2"&gt;"youtube_id_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;isBroadcaster: &lt;/span&gt;&lt;span class="s1"&gt;'true'&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;]&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;factory&lt;/span&gt; &lt;span class="ss"&gt;:event_instance&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
    &lt;span class="n"&gt;transient&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;created&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;
      &lt;span class="n"&gt;updated&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;now&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;

    &lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;"uid_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;"Hangout_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:category&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;"Category_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;hangout_url&lt;/span&gt; &lt;span class="s2"&gt;"http://hangout.test"&lt;/span&gt;
    &lt;span class="n"&gt;sequence&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:yt_video_id&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="s2"&gt;"yt_video_id_&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;project&lt;/span&gt;
    &lt;span class="n"&gt;event&lt;/span&gt;
    &lt;span class="n"&gt;user&lt;/span&gt;

    &lt;span class="n"&gt;participants&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="ss"&gt;:broadcaster&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="ss"&gt;:participant&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;created_at&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; UTC"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
    &lt;span class="n"&gt;updated_at&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="no"&gt;Time&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;parse&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;updated&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; UTC"&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note the creation of the participants field to be an array consisting of a broadcaster and a participant.  Notice also the use of sequences to generate that participant and broadcaster.  That&amp;rsquo;s a custom structure that&amp;rsquo;s only somewhat related to what comes back from the database in the real system.  Without going into all the details I think we fell a foul of working with a legacy test and legacy object that had more interrelationships than we expected.  It&amp;rsquo;s not quite a mock train wreck as there are no mocks here.  Effectively what we were working on, after our acceptance test of pulling some Karma data into a new AR model, was an integration test, which had more moving parts than we anticipated.&lt;/p&gt;

&lt;p&gt;It makes me think of Avdi&amp;rsquo;s &amp;ldquo;MacGyver method&amp;rdquo; where we got wrapped up in using the existing tools, rather than writing our own compelling narrative.  My own &amp;ldquo;drive-by&amp;rdquo; coding strategy is often one of just going with the existing grain to make the smallest change possible, so I&amp;rsquo;m definitely one who can get wrapped up in the existing tool set.  Maybe we would have done better to complete the planned refactoring of the EventInstance participants field, which as I mentioned is currently a micro-noSQL database inside our SQL database.&lt;/p&gt;

&lt;p&gt;I think we might also want to look at our pairing strategy.  I think Michael was getting frustrated at the speed with which I window switched from stack trace to code and back again as we tried to hunt bugs through the legacy test infrastructure.  There&amp;rsquo;s the lag of the hangout screenshare as well, but I think it&amp;rsquo;s more an indication of my keyboard hogging.  We seem to have fallen into a pattern of switching roles about once an hour, and I wonder if that&amp;rsquo;s too infrequent.  There are other issues with me having less available time to code due to family commitments.  I wonder if we might benefit from having an enforced 10 min switch as I&amp;rsquo;ve seen in some companies.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s also what we are doing to the domain model.  I&amp;rsquo;m still conflicted about the dissonance between the terms &amp;ldquo;EventInstance&amp;rdquo; and &amp;ldquo;Hangout&amp;rdquo;.  EventInstances do represent data from Google Hangouts in our system.  EventInstances is nicely generic - maybe in the future we&amp;rsquo;ll support alternatives to Google Hangouts, but our hangouts are very often associated with events, but not always.  Actually Michael and I mainly pair in spontaneous hangouts that are associated with the project, so EventInstance is a misnomer there.&lt;/p&gt;

&lt;p&gt;We were feeling good about pulling Karma out of the User table, and given that we have a Karma calculator it certainly seems like we are moving towards evolving a Karma entity in our domain.  It occurs to me that all the logic in the KarmaCalculation service could be moved to the Karma model.  Much as I love recombinable services, given that we now have a need to persist the intermediate calculations from the other Karma Calculator, I&amp;rsquo;m moving to think that the sensible next step is a real &amp;ldquo;unit&amp;rdquo; and not &amp;ldquo;integration&amp;rdquo; test of the Karma model so that we can avoid getting bogged down in too much complexity, i.e. dependencies on many other elements of the system.&lt;/p&gt;

&lt;p&gt;Following that logic, it would be nice if the Karma calculation could avoid depending on the structure of the data coming back from the hangout, i.e. that lump of JSON that gets transformed into a ruby data-structure by the serialise method.  That&amp;rsquo;s a bigger operation which might involve developing a domain model like so:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Participant&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;AR&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:hangouts&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:hangout_events&lt;/span&gt; &lt;span class="c1"&gt;# join at x time, leave at y time&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Hangout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;AR&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;
  &lt;span class="n"&gt;has_many&lt;/span&gt; &lt;span class="ss"&gt;:participants&lt;/span&gt;
  &lt;span class="n"&gt;belongs_to&lt;/span&gt; &lt;span class="ss"&gt;:initiator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;class_name: &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;At the end of day&amp;rsquo;s pairing we had got the tests green, but not without removing the &lt;code&gt;after_validation&lt;/code&gt; Karma calculation from the User class, and having to adjust a number of other tests to adapt to how we had adjusted the EventInstance FactoryGirl participant model.  Part of the issue there was that the serialise operation gives us &amp;ldquo;indifferent access&amp;rdquo; to the returned data structure, i.e. strings and symbols are interchangeable.  That was only part of the difference between the data structure the Factory was creating and that real data-structure coming back from the DB.  That pushes me to want to refactor away from that, but that&amp;rsquo;s a bigger task&amp;hellip;. &lt;/p&gt;

&lt;p&gt;We were then asking ourselves how to slice and dice to try and stick with our &amp;ldquo;drive-by&amp;rdquo; methodology.  What was the simplest thing we could release?  And what activities should be pushed off into other tickets?  The following three seemed sensible other tickets:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;remove Karma total from user table&lt;/li&gt;
&lt;li&gt;create all the other Karma breakdown elements in Karma table&lt;/li&gt;
&lt;li&gt;ensure that any reference to these throughout codebase is linked correctly to the Karma table&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In principle the work of the day could be a PR, and the only additional thing required to release it would be the creation of a separate Karma update task.  We&amp;rsquo;d be losing the feature that Karma would be updated whenever users saved their profiles, but that seems like something we could easily add back in later, without using these dangerous AR lifecycle hooks.&lt;/p&gt;

&lt;p&gt;The real question would be should we get that simpler PR in, and then immediately start more tickets based on it?  The danger there, as we&amp;rsquo;d seen before, is that particularly with the new &amp;ldquo;squash and merge&amp;rdquo; feature on GitHub PRs, building on an unmerged PR would guarantee merge conflicts down the line.  That would seem to point us towards reviewing all the tickets and working on a different corner of the codebase until this got merged.  That feels challenging in that I&amp;rsquo;m now itching to do that bigger participant refactoring, and try and get some clean confident code.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ll see - I guess after a day in which a lot of your assumptions are thrown, it makes sense to allow a bit of time for the dust to settle.  Reflect on what worked and what didn&amp;rsquo;t work, and maybe work on something else before coming back to the code face &amp;hellip;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Can't We Go Any Faster?</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/22/cant-we-go-any-faster/"/>
    <id>http://blog.url.com/2016/09/22/cant-we-go-any-faster/</id>
    <published>2016-09-22T01:00:00+01:00</published>
    <updated>2016-09-23T09:17:20+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Got the pairing times right today, but didn&amp;rsquo;t get started as early as we could.  Having a family and working from home means that things can easily come up, like suddenly my eldest needs a new school approved calculator which is sold out on Amazon.  Anyway, we managed two and a half hours or so.  The new JavaScript vendor pipeline&amp;rsquo;s looking good due to Michael&amp;rsquo;s solo follow up work.  We created a small flurry of tickets of possible follow up issues.  We were close to sliding into working on them, and in the background Michael actually resolved one issue about un-needed JavaScript files before we&amp;rsquo;d completed an async vote on the subject.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s become increasingly clear to me that it&amp;rsquo;s counter-productive to stand on ceremony with these things.  Running the async votes is definitely an overhead that I would like to automate away, but let&amp;rsquo;s see if perhaps we don&amp;rsquo;t want to return to the kickoff/retro meeting.  I notice Armando Fox&amp;rsquo;s students voting to &lt;a href="http://saasbook.blogspot.co.uk/2016/09/flipped-classroom-no-thanks-id-rather.html"&gt;return to a lecture format&lt;/a&gt;, but that&amp;rsquo;s getting off my main point that if your pair partner or colleague has just got something working, it&amp;rsquo;s not the time to say &amp;ldquo;you should have waited for the vote to complete&amp;rdquo; or make any similar objections.  There are lots of great heuristics like &amp;ldquo;not working on issues that haven&amp;rsquo;t been voted on&amp;rdquo;, but that&amp;rsquo;s not a suggestion, not a law to be enforced.  Working effectively is not about getting everyone to adopt your latest thinking on how things should be done, it&amp;rsquo;s about accepting the way they work and finding a collaborative path.&lt;/p&gt;

&lt;p&gt;I guess some people get away with &amp;ldquo;It&amp;rsquo;s my way, or the highway&amp;rdquo; but that&amp;rsquo;s not much fun, and what I really don&amp;rsquo;t want is to &lt;em&gt;accidentally&lt;/em&gt; go that way.  Anyhow, so I had a backlog of tickets in my mind, which I also got into the issues list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1281"&gt;Relace CoreJS-Typeahead (to remove bower dependency)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1283"&gt;investigate removing or replacing cubeportfolio.js/confy.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1284"&gt;investigate options for other items in vendor/assets/javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1286"&gt;updating installation documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1287"&gt;replacing nearest_timezone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1288"&gt;investigate other possible sources of memory leak&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So Michael had removed cubeportfolio.js/confy.js before the dust had settled.  We could have followed up on other items relating to the JavaScript vendor upgrade such as removing the bower dependency, or trying to modularise other libraries, but I was itching to make some different kinds of changes.  I closed out our existing memory investigation ticket and replaced it with two new ones - one for more investigation in general and another for removing a heavyweight gem.  There was also the issue of the install documentation.&lt;/p&gt;

&lt;p&gt;The two other things on my mind were improving our hangout telemetry and the profile of our premium plan.  The former might allow us to better understand how the pairing sessions would go in this next run of the MOOC, while the later might improve our balance sheet. As we investigated, it seemed we didn&amp;rsquo;t have tickets for some of the things that Michael and I had been regularly discussing, specifically for giving members Karma credit for &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1290"&gt;participating in, rather than just starting, hangouts&lt;/a&gt;.  I had been thinking that this would require a refactoring of the way we represented hangout data that would also be part of improving our telemetry (which we also didn&amp;rsquo;t have an explicit &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1291"&gt;ticket&lt;/a&gt; for).  In fact the ticket we did have was focused on improving hangout participant &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1197"&gt;identity tracking&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To explain, from our hangout plugin, we get a hangout participants G+ id.  Those AgileVenture members who have authenticated with G+ on our site have a G+ id associated with their account.  For those members we can connect their presence in a hangout with their AV account.  This allows us to display more information about who was in a hangout in the &lt;a href="http://www.agileventures.org/hangouts"&gt;past events view&lt;/a&gt;.  In order to encourage people to link up with their G+ accounts we&amp;rsquo;d already increased the amount of Karma you get for making that connection.  A quick check on the production DB indicated that a third of our members were connected up.  We should have checked that number several months back when we made the change to give us a hint if the change had an impact.  Doh!&lt;/p&gt;

&lt;p&gt;Given that we&amp;rsquo;d had a long period when the G+ signup was not working at all, I was pleasantly surprised to find a third of our members connected, and while I&amp;rsquo;m not sure if that&amp;rsquo;s due to our change to the Karma, or fixing the G+ signup (although I guess I could do more mining to get more hints), it drew me away from the ticket&amp;rsquo;s focus of increasing G+ identity match up.  Or at least it pushed me to say, we have the incentive in place, we&amp;rsquo;ll need to make Karma more visible so that the incentive has greater chance of working.  I threw a load of thoughts about that into the ticket itself:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;[ ] G+ link up might improve if we give more credit for participating in hangouts #1290 potentially helps here&lt;/li&gt;
&lt;li&gt;[ ] perhaps more importantly we need more people to be aware of karma

&lt;ul&gt;
&lt;li&gt;[ ] linking karma number to breakdown on user page #1245&lt;/li&gt;
&lt;li&gt;[ ] breakdown on user page is hidden in sub-tab&lt;/li&gt;
&lt;li&gt;[ ] breakdown doesn&amp;rsquo;t look so nice&lt;/li&gt;
&lt;li&gt;[ ] need to mail members about their karma scores?  slack ping them?&lt;/li&gt;
&lt;li&gt;[ ] tooltips to explain things&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And I found myself making tickets that I thought should have already existed (I did search) on these things that Michael and I had been discussing a lot.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1290"&gt;improve hangout telemetry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1291"&gt;give karma credit for participating in a hangout&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And Michael also started speculating about further &lt;a href="https://github.com/AgileVentures/WebsiteOne/issues/1292"&gt;gamification&lt;/a&gt; of Karma, which I&amp;rsquo;d love to get into.  Anyhow, a little playing on the production DB showed that actually we could grab an indication of hangout participation without needing a big refactor (although it might give Avdi a coronary for its timidity):&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="no"&gt;EventInstance&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;select&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;nil?&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;participants&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;any?&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;p&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'person'&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;"103524399391704001670"&lt;/span&gt;&lt;span class="p"&gt;}}.&lt;/span&gt;&lt;span class="nf"&gt;count&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The EventInstance (or hangout) class currently stores a text string representation of the JSON that comes back from the HangoutPlugin, which looks like this:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"0"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hangoutA749C12C_ephemeral.id.google.com^6285825550"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasMicrophone"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasCamera"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasAppEnabled"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"isBroadcaster"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"isInBroadcast"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"displayIndex"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"person"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"108104108523167071445"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;"displayName"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Michael C"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;"image"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"https://lh5.googleusercontent.com/-AtamIgns520/AAAAAAAAAAI/AAAAAAAAAAA/4TTnoJlntEM/s96-c/photo.jpg"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="s2"&gt;"qa"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="s2"&gt;"locale"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"qa"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
 &lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"hangoutEDC38696_ephemeral.id.google.com^4f0e2ab2d8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasMicrophone"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasCamera"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"hasAppEnabled"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"isBroadcaster"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"isInBroadcast"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"true"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"displayIndex"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"person"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"id"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"103524399391704001670"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;"displayName"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"Sam Joseph"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
     &lt;span class="s2"&gt;"image"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"url"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"https://lh3.googleusercontent.com/-Kt12k8aqqTs/AAAAAAAAAAI/AAAAAAAAAAA/TL0ZFPtM2Tc/s96-c/photo.jpg"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
     &lt;span class="s2"&gt;"qa"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
   &lt;span class="s2"&gt;"locale"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"en"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
   &lt;span class="s2"&gt;"qa"&lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="s2"&gt;"false"&lt;/span&gt;&lt;span class="p"&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It&amp;rsquo;s stored using the serialise method, so we get back a ruby object, which allows for the above code to work without requiring a parsing step.  Effectively we&amp;rsquo;ve got a micro noSQL database inside our bigger SQL relational database.  The computation over the entire dataset for an individual is not particularly fast, but it doesn&amp;rsquo;t take more than a second, and since we&amp;rsquo;re largely calculating Karma offline, it seems like we could get this into production relatively quickly.&lt;/p&gt;

&lt;p&gt;The logic here is that we want to encourage hangout participation by giving Karmic credit for it, and in particular you&amp;rsquo;ll need to be G+ up&amp;rsquo;d on our site in order to get the benefit, so a potentially happy side effect is an increase in the fidelity of our tracking, and improvements in the results of our data mining.  All this virtuous circle will hopefully just help us to help everyone to help charities, and of course ultimately save the world, haha.  Anyway, just as long as we get to play with cool tech along they way, eh? :-)&lt;/p&gt;

&lt;p&gt;So I was still on the fence about what to do, when Michael pointed out that our Karma overview calculated all this directly in real time and could slow down the load of the user&amp;rsquo;s profile page.  We talked about caching that in the User table.  Felt ill about how bloated that table has got, and the technical debt we were building up, which pushed me up to wanting to work on premium and pull the Stripe components out of the user table; but then I had a breakthrough.  We could pull the karma components into a separate table, cache them all, improve load times on the profile page, and also quickly deliver the incentives we wanted.  I could tell Michael wished I had been able to come to that conclusion without the previous 45 minutes of discussion, but I was still pleased with the tickets we had created and the ideas we had had.&lt;/p&gt;

&lt;p&gt;In the remaining 45 minutes or so we managed to knock off a quick acceptance test driven creation of a separate Karma table. It also involved using a funky delegation pattern:&lt;/p&gt;
&lt;pre class="highlight ruby"&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;User&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;ActiveRecord&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="no"&gt;Base&lt;/span&gt;

  &lt;span class="kp"&gt;extend&lt;/span&gt; &lt;span class="no"&gt;Forwardable&lt;/span&gt;

  &lt;span class="n"&gt;def_delegator&lt;/span&gt; &lt;span class="ss"&gt;:karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:hangouts_attended_with_more_than_one_participant&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
  &lt;span class="n"&gt;def_delegator&lt;/span&gt; &lt;span class="ss"&gt;:karma&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:hangouts_attended_with_more_than_one_participant&lt;/span&gt;

  &lt;span class="n"&gt;has_one&lt;/span&gt; &lt;span class="ss"&gt;:karma&lt;/span&gt;

  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="nf"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I&amp;rsquo;m sure there&amp;rsquo;s a tighter way to do that, but it breaks up our mammoth user table, and we can now write a separate test for quickly calculating hangout participation offline, and then get on to the bigger refactoring to see details about when people join hangouts, break the user table up further with better support for premium, and improve the installation documentation.  These are the key things for me in the next few weeks, although they could certainly be derailed if the memory issues turn out to be more serious than we thought.  The question remains, can&amp;rsquo;t we go any faster?  One drag is me spending all this time with my kids.  Maybe I can get them to code for AV too? :-)&lt;/p&gt;

&lt;p&gt;Related videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PliTRMoNrR8"&gt;Pairing part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=6zO-FCmJQSk"&gt;Pairing part 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=_dXb5QASWeU"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Missed Ships</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/21/missed-ships/"/>
    <id>http://blog.url.com/2016/09/21/missed-ships/</id>
    <published>2016-09-21T01:00:00+01:00</published>
    <updated>2016-09-21T21:00:32+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I got confused yesterday about adjustments to the pairing schedule.  I thought Michael was going to be available later in the day, but actually he had to leave early.   As a result our pairing was contracted to an hour, and he started on a new task working solo.  Michael was looking at adjusting the way we managed our 3rd party JavaScript assets in the WebSiteOne Rails app.  We&amp;rsquo;ve been storing them in the vendor directory and checking them into our source code repository.  This doesn&amp;rsquo;t make for a smooth upgrade and dependency management strategy.  &lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve been hearing that npm is becoming the standard for JavaScript dependency management, with bower falling out of favour.  Although clearly the &lt;a href="https://www.quora.com/Why-use-Bower-when-there-is-npm"&gt;conversation is still ongoing&lt;/a&gt;.  Anyhow, Michael started some &lt;a href="https://github.com/AgileVentures/WebsiteOne/pull/1278"&gt;solo work&lt;/a&gt;, adding a package.json and a script to copy files from the node_modules directory into the rails vendor directory.  In our quick pairing session we got his spike working on my machine, and updated the install documentation.  After Michael had to go I made some adjustments to our CI and the heroku build packs to ensure that this would all work with the rest of our development pipeline.  I think I sorted the CI, but not the heroku, which required another solo pass from Michael after I got back, although the fact that I was migrating our servers from group to individual accounts means I&amp;rsquo;m not sure we&amp;rsquo;ve been able to run a final check that the Heroku install works.&lt;/p&gt;

&lt;p&gt;Anyhow, it&amp;rsquo;s interesting that I would not have picked this particular task off the backlog if Michael and I were choosing together.  I&amp;rsquo;d have been pushing for things that might have a more direct impact for our users.  Michael chose this one because he was interested in it, which is a great motivation.  I would also have been worried about opening a can of worms here.  However it seems like we might have been able to sort it in an otherwise chaotic day, and we&amp;rsquo;ve explored an important part of our stack, as well as revealing some JavaScript files that shouldn&amp;rsquo;t have been checked in.&lt;/p&gt;

&lt;p&gt;Modern software engineer management often talks about groups like Steam or Github where groups of programmers just experiment with things that interest them and those things turn into &amp;ldquo;product&amp;rdquo; as a function of programmer interest.  I&amp;rsquo;d find it easier to take that attitude if I was independently wealthy and not worrying about whether I&amp;rsquo;ll have to go find a different job or completely pivot in three months or so :-)  However as I was saying in the heuristics blog yesterday, once you&amp;rsquo;ve started a task &amp;hellip; my strong temptation is often to try and switch tasks, or rebuild something, but maybe that&amp;rsquo;s just too disruptive?  Strains the social bonds of the people you&amp;rsquo;re working with?  Pick your battles they say :-)&lt;/p&gt;

&lt;p&gt;Michael is looking ahead to interesting vistas involving replacing the whole Rails asset pipeline with npm and gulp, which is apparently the in-thing these days.  The issue that was highlighted to me yesterday is how we need to improve and update our installation documentation.  We&amp;rsquo;ve migrated the wiki into the repo doc directory, but there&amp;rsquo;s still a lot of cleanup to do.  I&amp;rsquo;m also reminded that this stuff needs to be tested with installs on fresh machines.  I did an install on C9 yesterday which went smoothly, but made it look like this could be turned into an install script.&lt;/p&gt;

&lt;p&gt;I also installed docker and used it to create a vanilla ubuntu instance, that I started installing WSO on.  Docker was great - installing WSO on ubuntu less so, with a series of sticking issues for the upfront install of phantomjs using npm.  I was pleased to find a way round my old friend:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@8c7aad239bc9:~# npm install -g phantomjs
npm WARN deprecated phantomjs@2.1.7: Package renamed to phantomjs-prebuilt. Please update 'phantomjs' package references to 'phantomjs-prebuilt'
npm WARN deprecated tough-cookie@2.2.2: ReDoS vulnerability parsing Set-Cookie https://nodesecurity.io/advisories/130
/root/.nvm/versions/node/v5.10.1/bin/phantomjs -&amp;gt; /root/.nvm/versions/node/v5.10.1/lib/node_modules/phantomjs/bin/phantomjs

&amp;gt; phantomjs@2.1.7 install /root/.nvm/versions/node/v5.10.1/lib/node_modules/phantomjs
&amp;gt; node install.js

sh: 1: node: Permission denied
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;with http://sourcode.net/sh-1-node-permission-denied/&lt;/p&gt;

&lt;p&gt;but that only lead me to a follow up error:&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;root@8c7aad239bc9:~# npm install phantomjs
npm WARN deprecated phantomjs@2.1.7: Package renamed to phantomjs-prebuilt. Please update 'phantomjs' package references to 'phantomjs-prebuilt'
npm WARN deprecated tough-cookie@2.2.2: ReDoS vulnerability parsing Set-Cookie https://nodesecurity.io/advisories/130

&amp;gt; phantomjs@2.1.7 install /root/node_modules/phantomjs
&amp;gt; node install.js

PhantomJS not found on PATH
Download already available at /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
Verified checksum of previously downloaded file
Extracting tar contents (via spawned process)
Error extracting archive
Phantom installation failed { Error: Command failed: tar jxf /tmp/phantomjs/phantomjs-2.1.1-linux-x86_64.tar.bz2
tar (child): bzip2: Cannot exec: No such file or directory
tar (child): Error is not recoverable: exiting now
tar: Child returned status 2
tar: Error is not recoverable: exiting now
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and it was getting late.  I did try a few things, but I left that to tinker with later.  I probably should get more into docker and look into not accessing that ubuntu image as root.  I&amp;rsquo;m intrigued by the idea of publishing a WSO docker image and/or docker install script.  What would be really nice would be if our install scripts (docker or otherwise) could be run via acceptance tests.  It&amp;rsquo;s ironic that our CI is installing the app from scratch a dozen times a day.  We really should have an instantaneous deploy for anyone wanting to get set up with the project.&lt;/p&gt;

&lt;p&gt;So anyway, maybe me screwing up the pairing schedule was serendipitous.  I often find myself shy of things that I think will take a long time, but then my intuitions are also wrong sometimes.  I remember when an AV volunteer (Pavel) first set up Travis for us.  Not knowing much about it it felt like a big thing to get into; and then I saw that all Pavel had done was flick a switch and add a .travis.yml file.  Of course there&amp;rsquo;s a lot more to go wrong with CI as your project gets bigger, but sometimes the younger person just giving things a try, reveals that the older person&amp;rsquo;s fears of a briar patch are unfounded.  And then there are other times when the older person&amp;rsquo;s fears are correct and you get stuck in a sticky mess.  If only one could predict reliably which way round it&amp;rsquo;s going to end up &amp;hellip; :-)  &lt;/p&gt;

&lt;p&gt;So my moral for today is pair with people of all levels, and don&amp;rsquo;t beat yourself up too much when you screw up the schedule, or start on a task you have misgivings about.  Better to enjoy the process and see what emerges :-)&lt;/p&gt;

&lt;p&gt;Related Videos:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=OihKyI6SEew"&gt;Pairing on AV main site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=hbO9l328TR0"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Related Links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/rstacruz/npm-pipeline-rails"&gt;https://github.com/rstacruz/npm-pipeline-rails&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gofore.com/stop-using-bower/"&gt;https://gofore.com/stop-using-bower/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb"&gt;https://medium.com/@nickheiner/why-my-team-uses-npm-instead-of-bower-eecfe1b9afcb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Clearing the Decks</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/20/clearing-the-decks/"/>
    <id>http://blog.url.com/2016/09/20/clearing-the-decks/</id>
    <published>2016-09-20T01:00:00+01:00</published>
    <updated>2016-09-20T17:14:36+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Monday involved continuing on two &amp;ldquo;clear the decks&amp;rdquo; tickets that Michael and I had started on the previous Thursday and Friday. The heuristics in my mind thus included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;clear the decks before starting on something else big&lt;/li&gt;
&lt;li&gt;finish what you&amp;rsquo;ve started&lt;/li&gt;
&lt;li&gt;deal with things in the &amp;ldquo;in progress&amp;rdquo; column in your Kanban board to reduce cognitive overload for the team&lt;/li&gt;
&lt;li&gt;drive-by coding, i.e. try not to get too bogged down in any one thing, make tickets for additional features, refactorings and so forth&lt;/li&gt;
&lt;li&gt;focus on completing one task rather than constantly worrying if it is the right task&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;and that&amp;rsquo;s forming a nice-ish set, even if some of them aren&amp;rsquo;t that pithy :-) Lots of room for improvement there.  There are parallel collections of heuristics being applied in the actual coding going on, e.g.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;be confident (don&amp;rsquo;t keep nil checking)&lt;/li&gt;
&lt;li&gt;don&amp;rsquo;t mock what you don&amp;rsquo;t own; prefer to introduce adapters you control&lt;/li&gt;
&lt;li&gt;follow the testing pyramid (few acceptance, some integration and lots of unit tests)&lt;/li&gt;
&lt;li&gt;keep methods/classes short&lt;/li&gt;
&lt;li&gt;try to name methods/classes for understandability and maintainability&lt;/li&gt;
&lt;li&gt;start DRYing once it&amp;rsquo;s clear there is a pattern&lt;/li&gt;
&lt;li&gt;use Dependency Injection to avoid locking what objects collaborate with&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many more could be added to the list, but the above are the set that are more to the forefront of my mind at the moment.  There&amp;rsquo;s a cross-talk between the two levels though, because seeing a place where you could use dependency injection, or introduce an adapter can extend the amount of time on task.  If you&amp;rsquo;re practising &amp;ldquo;drive-by&amp;rdquo; coding, then that&amp;rsquo;s a key place to ask if that refactoring needs to be done now, or if it&amp;rsquo;s something to create a ticket for.&lt;/p&gt;

&lt;p&gt;You might say, you must immediately do any refactoring you think of, and if you put it in a ticket it&amp;rsquo;ll never get done.  However there&amp;rsquo;s a counter-example from the LocalSupport project, where we had a nasty case statement, I created a refactoring ticket, and worked on it with someone later, and we eventually completely removed the case statement and replaced it with a gem using the strategy pattern; so that&amp;rsquo;s at least a proof that it&amp;rsquo;s possible in principle :-)&lt;/p&gt;

&lt;p&gt;The thing about refactoring is that there&amp;rsquo;s always a little more you could do, but fundamentally we don&amp;rsquo;t know what the future holds.  As needs change maybe that refactoring will have to be undone, or that code thrown out.  That isn&amp;rsquo;t to disregard general code smells, but it is all relative.  Either way you have the interplay of the different heuristics.  Say you notice you could use some dependency injection, and/or some adapters, which do you work on first?  Or put both in a ticket?&lt;/p&gt;

&lt;p&gt;For the set of heuristics at the higher level there&amp;rsquo;s less conflict for me at the moment.  Focusing on completing one task in a drive-by fashion is all about not getting too distracted, and if the distraction is important, get that distraction into a ticket that you can review later for relative importance and complexity.  Huge ideas about a different direction?  Sure, but let&amp;rsquo;s clear the decks by finishing what we started, especially those things we identified as going in the ready/backlog column in the current sprint.&lt;/p&gt;

&lt;p&gt;So that&amp;rsquo;s all well and good, however the memory leak task that Michael and I started on from the &amp;ldquo;in progress&amp;rdquo; column &amp;ndash; taking on something another developer didn&amp;rsquo;t seem to be progressing on &amp;ndash; was not simple to resolve quickly.  Just investigating the task involves leaving a process running overnight to see what the memory profile is like after 12 hours.  That wasn&amp;rsquo;t too hard to fit into the heuristic since once we had set up a memory profiling experiment we could leave that and move on to something else, but the ticket was still in the &amp;ldquo;in progress&amp;rdquo; column. Hmm &amp;hellip;&lt;/p&gt;

&lt;p&gt;Mixed shout out to Heroku; positive for their memory profiling beta tools, negative for not getting back to me about the sudden spike in charging us for our group account without warning.  Still I&amp;rsquo;m enjoying seeing memory traces like this one that show the critical memory errors our app is generating in the resting state on develop.&lt;/p&gt;

&lt;p&gt;&lt;img alt="memory trace with errors" src="https://www.dropbox.com/s/z20m133bcd4b3ph/Screenshot%202016-09-20%2009.09.00.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Interestingly those errors are removed from develop by having the setup match production:  &lt;/p&gt;

&lt;p&gt;&lt;img alt="lower trace with from matching production puma workers and threads" src="https://www.dropbox.com/s/jqwv7pxtdw41nd0/Screenshot%202016-09-20%2009.09.46.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Production itself still experiences memory errors, but it&amp;rsquo;s under a higher load:&lt;/p&gt;

&lt;p&gt;&lt;img alt="production memory errors" src="https://www.dropbox.com/s/poi23wzp8i0wvg8/Screenshot%202016-09-20%2009.34.00.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re basically following Heroku&amp;rsquo;s tips on getting better &lt;a href="https://devcenter.heroku.com/articles/ruby-memory-use"&gt;memory performance from Ruby apps&lt;/a&gt; which has pointed us to the &lt;code&gt;nearest_time_zone&lt;/code&gt; gem as being our biggest memory hog.  Removing it cuts our baseline by about 10% (based on leaving things running overnight):&lt;/p&gt;

&lt;p&gt;&lt;img alt="reduced baseline profile after removing nearest_timezone" src="https://www.dropbox.com/s/8zg6xgvbzz1nn2x/Screenshot%202016-09-20%2009.10.12.png?dl=1" /&gt;&lt;/p&gt;

&lt;p&gt;Which leaves us with a complicated choice.  Would that 10% reduction actually help us reduce memory errors in production? Can we re-arrange the way the main app works so that we don&amp;rsquo;t use that gem?  Is that worth it?  Following the heuristics, it feels to me we are getting to the end of the &amp;ldquo;investigating the memory errors&amp;rdquo; issue, and into new issues of trying different solutions to the memory errors, as well as needing to consider how serious these memory errors are, in that the app still seems to be running despite them.&lt;/p&gt;

&lt;p&gt;The other task we&amp;rsquo;re bashing away at in parallel is setting up an admin mailer to notify us when the slack invites fail (as they sometimes do).  I&amp;rsquo;d love to drive that with an acceptance test, but the difference in settings in test from production (invites are turned off), and the use of async tasks, means that is a more involved process to create an acceptance test than usual.  We&amp;rsquo;ve gone for a couple of unit tests and pushed the acceptance test into a separate ticket.  This is an example of the higher level heuristics overriding the lower level ones; which makes intuitive sense.  The admin mailer was something we spiked somewhat to get a tracer bullet to see the end to end connection, i.e. see the emails sent.  Although it was ultimately wrapped in a unit test, I berated myself at the end that &lt;em&gt;if&lt;/em&gt; I&amp;rsquo;d written a really clear unit test at the start I&amp;rsquo;d have spent less time in the spike, but then again it was seeing the output from the email spike that helped me understand what I needed to be testing.&lt;/p&gt;

&lt;p&gt;Drive with tests?  Sure, but let me spike to understand the problem.  More importantly, please let me drive with an acceptance test.  An architecture that doesn&amp;rsquo;t let me easily add an acceptance test always makes me a little uncomfortable.   More heuristics at the coding level.  My intuition is that it&amp;rsquo;s the higher level heuristics that should over-rule the lower level ones.  So on with clearing the decks.  We&amp;rsquo;ll see how that goes &amp;hellip;.&lt;/p&gt;

&lt;p&gt;Related Videos&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=Qveh4RtiWN4"&gt;Pairing on AV main site&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=UBo8d0Yebyw"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
  <entry>
    <title>Business as Usual</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/19/business-as-usual/"/>
    <id>http://blog.url.com/2016/09/19/business-as-usual/</id>
    <published>2016-09-19T01:00:00+01:00</published>
    <updated>2016-09-19T20:29:13+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Trying to run a business is notoriously hard.  How about a charity?  A volunteer organisation?  I&amp;rsquo;m starting to see some patterns from the last few years.  I notice at the Karate classes that I do with my kids that there&amp;rsquo;s been a huge turnover of participants in the last three years we&amp;rsquo;ve been doing it.  There are people who come once or twice and then you never see them again.  There are people who show up for a period and seem quite committed, like the group of students doing their Duke of Edinburgh award who were saying they wanted to go all the way to black belt, and then there are people who are there every time for a couple of years and then just disappear.  The funny thing, to me, is that pretty much everyone strikes a post of &amp;ldquo;see you next week&amp;rdquo;.  No one says &amp;ldquo;I think I won&amp;rsquo;t come any more&amp;rdquo;.  Maybe they&amp;rsquo;re saying it to the Karate instructor?&lt;/p&gt;

&lt;p&gt;I speculate that Karate is aspirational, a bit like coding for some people.  I also coach kids football (soccer).  We have a similar sort of pattern with participants coming and going, and generally you&amp;rsquo;re not going to be informed about a change of attendance.   People vary of course.  Sometimes I might get a &amp;ldquo;sorry we&amp;rsquo;ve signed up for another club&amp;rdquo; message on WhatsApp, but it&amp;rsquo;s almost never the kind of thing that&amp;rsquo;s said to you in person.  I&amp;rsquo;ve always found this a little strange.  The other day I mentioned the rough ride I had at 13 telling my music teacher I didn&amp;rsquo;t want to play in the orchestra, while my friends slinked off to avoid any confrontation.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m guilty of the same thing online sometimes.  One that springs to mind was that I was getting stuck on an issue related to the simplecov gem, and was having an interaction with the gem author in an &lt;a href="https://github.com/colszowka/simplecov-html/issues/41"&gt;issue&lt;/a&gt; and I remember that there were huge currents of work on different things going on at the time, and I just totally failed to respond.  Now I found the issue again I&amp;rsquo;m tempted to go back and at least thank the gem author for their input.  It must be a pretty common experience for open source projects.  You&amp;rsquo;ve potentially got the whole world working on getting something done.  They start a conversation and sometimes it just gets cut off.&lt;/p&gt;

&lt;p&gt;If you&amp;rsquo;re unlikely to interact with the person again then you&amp;rsquo;re not strongly incentivised to give them warning about your plans.  I guess the majority of people just want to avoid any conflict and usually won&amp;rsquo;t make the time to say sorry.  In May last year there were lots of people I was meeting daily face to face who were getting my priority attention over open source projects.  Oh yes, and if I remember correctly I did collapse with pneumonia a few days later, so perhaps I can be forgiven :-)&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s something to the scale of our modern civilisation.  In the past I imagine you&amp;rsquo;d have known everyone in your village and it would be much more important to let people know that you were or weren&amp;rsquo;t going to keep on doing something with them.  Maybe not.  Maybe it&amp;rsquo;s always been like this.  If someone asks you if you want to get involved in something, you express an interest, even if really what you&amp;rsquo;re feeling is a no; and then just don&amp;rsquo;t show up on the date.  Of course sometimes people will make the effort to give an explicit no, but most of the time it&amp;rsquo;s easier to say &amp;ldquo;yes/probably/maybe&amp;rdquo; and that keeps your options open.  &lt;/p&gt;

&lt;p&gt;Something we observed when we were using G+ to organise pairing events, and something that is common to most meetup gatherings I&amp;rsquo;ve seen, is that out of the people that sign up to say they will attend, 50% or less will actually turn up.  If you&amp;rsquo;re trying to run a voluntary organisation then people who sound like they are committing but don&amp;rsquo;t show up can be incredibly draining.  I remember when we started AgileVentures, talking to the AirPair founder who said he was just sick of volunteering groups.  He&amp;rsquo;d been trying to organise a voluntary rock-climbing group for people to find rock-climbing partners, and at the time it didn&amp;rsquo;t dissuade me from trying AgileVentures as a purely voluntary organisation.  We had such numbers as a result of the interest in the MOOC that I thought why not give it a try, and we certainly accomplished a lot of cool things, but it is frustrating when you put a lot of effort and energy answering someone&amp;rsquo;s questions, helping them get set up and then they just disappear without so much as a word.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s an aspect of this in business too.  For every 10 people that you explain your product to, you might be lucky to get one customer; but in a business at least when you get that customer they&amp;rsquo;re paying for all the &amp;ldquo;marketing/sales&amp;rdquo; work (if you&amp;rsquo;ve priced things right).  In a voluntary organisation that&amp;rsquo;s much more draining.  I gave up doing face to face AgileVentures meetups in central London after it seemed that I would spend all my time greeting, being friendly, answering questions, for not much follow up.  Sometimes people would be really intense, asking lots and lots of questions, monopolising the discussion when other people were waiting to ask, or move on; talk about how involved they were going to get, and then totally disappear.  At least by being completely online, I don&amp;rsquo;t have to deal with the logistical overhead of getting into central London, arranging a place for a meet up, and so on.&lt;/p&gt;

&lt;p&gt;Personally it would make quite a big difference to me if people emailed or texted to say, thanks for your help the other night, but I think this isn&amp;rsquo;t for me; and then give a little more input on why it&amp;rsquo;s not a match.  However the chances are they will never encounter me again, so there&amp;rsquo;s not much upside for them in doing that, and the downside of risking all that unpleasant confrontation that everyone fears.  Honest feedback would be truly valuable but there isn&amp;rsquo;t much incentive for people to give it.  It&amp;rsquo;s difficult to get that feedback from the people who know you best, such as family, friends and work colleagues, let alone total strangers.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s funny, though; we had some people in the last few weeks I&amp;rsquo;d love to have got that feedback from.  We had one person jumping into a scrum (after a series of emails and slacks) who wanted to propose a new project, which sounded really interesting, and the guy was really keen.  We set up a chat room for him, promoted it, got a few people in there, and then nothing.  No communication whatsoever, my follow up emails ignored.  Of course he may have dropped with pneumonia like I did last year, who knows.  However it leads me to question the whole concept of the AgileVentures &amp;ldquo;open to all to make a pitch&amp;rdquo; - I mean I guess we did&amp;rsquo;t lose that much, but it&amp;rsquo;s just strange not to have any follow up.&lt;/p&gt;

&lt;p&gt;There&amp;rsquo;s similarity with onboarding to projects like LocalSupport.  There&amp;rsquo;s some people we&amp;rsquo;ve spent the time to onboard who go on to contribute loads, but others were we spend a fair amount of time trying to get them setup, and then we just don&amp;rsquo;t hear from them again.  I mean fair enough - people work out the project isn&amp;rsquo;t for them, other stuff in their life comes up.  However, it would just be nice to get a text or email saying &amp;ldquo;this isn&amp;rsquo;t for me&amp;rdquo; and maybe a bit of feedback.  I&amp;rsquo;m left confused about whether there&amp;rsquo;s anything we can do to make a difference.  Better onboarding documentation?  More friendly in the chatroom? Our whole site and setup just looking more professional? Maybe there&amp;rsquo;s nothing we can do to make a difference.  The question in my mind is do people realise that when they are asking for help to get setup that they are taking up valuable resources from our voluntary organisation?&lt;/p&gt;

&lt;p&gt;Moving forward I think I have to assume this is just the way people are.  Part of the valuable offering of a bootcamp or university is the filtering mechanism that means that, rather than a random group of people you might get in a MOOC, you get a group of smart, motivated people, who are really committed to studying together.  Having members of a group that are not as committed can be really draining on everybody, particularly in terms of logistics, e.g. team members not showing up etc.  Hence our switch to providing a premium level of AgileVentures.  Those in the premium tier are necessarily more committed.  Similarly for the new &amp;ldquo;Agile Development using Ruby on Rails&amp;rdquo; project course, which will be paid-only.&lt;/p&gt;

&lt;p&gt;It would be nice to think that super UX and value proposition by themselves could lead to the critical mass we&amp;rsquo;re looking forward.  That&amp;rsquo;s what FreeCodeCamp is going for, but trying to extract revenue from companies that hire their graduates.  I&amp;rsquo;d be interested to know how that&amp;rsquo;s really going. I&amp;rsquo;m certainly very impressed with their interface.  Still maybe there&amp;rsquo;s something in the saying that if you&amp;rsquo;re NOT paying for something, then YOU are the product.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>DriveBy Coding</title>
    <link rel="alternate" href="http://blog.url.com/2016/09/16/driveby-coding/"/>
    <id>http://blog.url.com/2016/09/16/driveby-coding/</id>
    <published>2016-09-16T01:00:00+01:00</published>
    <updated>2016-09-16T18:51:40+01:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Had another day of trying to work quick and light. I&amp;rsquo;m thinking of calling it &amp;ldquo;drive-by coding&amp;rdquo;.  The idea is to try and avoid getting stuck for too long on any one thing.&lt;/p&gt;

&lt;p&gt;I managed to be good to my word of yesterday and get to work on some of the static site content issues that I had been putting off.  These were suggestions that had come out of feedback on the site from Charles and Freeranger.  Charles is a Sales specialist and we&amp;rsquo;d been working with him before the summer on the design of the static site.  We&amp;rsquo;d been having regular meetings with Charles and he was pushing for detailed documentation on what we would be offering to charities and non-profits in terms of hourly rates and detailed breakdowns of inception events and so forth. The attempts to pin us down on hourly rates up front, and then add his own hourly-rate to the inception packages made me feel &amp;hellip; strange.  It felt very &amp;ldquo;big design up-front&amp;rdquo; and not very Agile.  I felt like we needed to talk to individual non-profits about their needs; although part of it is that I wanted to focus on coding, and also that as more people signed up for our premium memberships we effectively had &amp;ldquo;customers&amp;rdquo; who we could talk to directly and try and evolve our service to make them happier and bring others on board.&lt;/p&gt;

&lt;p&gt;Of course as Michael has pointed out, if we could land a good sizeable charity project, then that would dwarf the amounts coming in from premium memberships.  The difficulty for me is that the approach Charles was taking seemed to involve lots and lots of paperwork up front - trying to make decisions with little data about the market.  Maybe that&amp;rsquo;s the way businesses should run?  Make a detailed business plan before talking to anybody outside, relying on your instinct to put the right kind of plan together.  Charles has lots of experience selling IT related things in the corporate world and some experience of the charity sector, so maybe I should be trusting his intuition, but my instinct told me to go with a softer incremental launch of the static site.&lt;/p&gt;

&lt;p&gt;So I&amp;rsquo;d told Charles we&amp;rsquo;d do that soft launch and get back to him.  We pushed out the site to our internal group on Slack, and got some immediate feedback.  In particular we got very detailed feedback from Freeranger in a set of five issues on Github (see issues 36 through 40 on &lt;a href="https://github.com/AgileVentures/av-static-website/issues"&gt;https://github.com/AgileVentures/av-static-website/issues&lt;/a&gt;), in which he wrote almost stream of consciousness as he explored the site.  Very valuable stuff, but also quite overwhelming.  I&amp;rsquo;ve talked about overloading before.  I think I do it to people a lot.  Freeranger and I have some things in common there :-)  Anyway, the concerns that Freeranger was raising were valid ones, but I was emotionally knocked back by the thought of what we needed to do.&lt;/p&gt;

&lt;p&gt;Well, that&amp;rsquo;s not entirely accurate.  We had made good progress before the summer on trying to address a number of the issues.  Probably the most complex was switching from the ghost blog as a separate site, to an integrated middleman-blog, which was a round about way of addressing a number of the navigation issues that Freeranger raised, and also reduced our need to maintain two separate copies of the CSS design.  Actually we created a summary ticket called &lt;a href="https://github.com/AgileVentures/av-static-website/issues/42"&gt;&amp;ldquo;Tweaking Ready for Release&amp;rdquo;&lt;/a&gt; that only had a single thing outstanding on it, adding some more links in the about section.  Trying to pin down my feelings here, I think the concerns raised by Freeranger had knocked my confidence in the site.  Michael and I had done a fair amount of work to get it to a point for a soft launch.  We&amp;rsquo;d set about fixing the issues, but we&amp;rsquo;d done the engineering work and finally there was just content work (more or less) which I was loathe to subject Michael too, so I&amp;rsquo;d been putting it off and other items in my administrative agenda kept seeming to trump it.&lt;/p&gt;

&lt;p&gt;So yesterday I forced it to the top of my morning agenda, at least partly inspired by enthusiasm from Marouen about getting some charity clients in, and I knocked off that immediate content work, and completed our tweaking for release ticket, yay!  I also went back through Freeranger&amp;rsquo;s issues again slowly and carefully.  A lot of the feedback was great UX feedback about buttons vs nav and the consistency of using the back-button etc.  I spent some time responding how I thought some of our changes had now addressed some of the issues, and created other tickets for those we hadn&amp;rsquo;t been able to quickly resolve (see issues 55 through 58 on &lt;a href="https://github.com/AgileVentures/av-static-website/issues"&gt;https://github.com/AgileVentures/av-static-website/issues&lt;/a&gt;.  I didn&amp;rsquo;t get to the thing that probably concerns me the most, which is improving the images associated with some of the projects in the case-studies section; and that will have to wait till next week now.  That&amp;rsquo;s more complex as it involves liasing with different project groups &amp;hellip;&lt;/p&gt;

&lt;p&gt;But so I made progress in the morning with &amp;ldquo;drive-by administration&amp;rdquo; and got down to some coding in the afternoon with Michael.  It didn&amp;rsquo;t feel like we made as much progress as the previous day, but in drive-by coding style we moved through the ProjectScope project where we spiked a time report that would help us assess if the heroku schedule was working as expected, and then on to WebSiteOne where, although I was getting all excited about a new event telemetry, creation flow, karma and premium promotion, I thought that if we were serious about keeping the Waffle board under control we really should address tickets in terms of their position in the board.&lt;/p&gt;

&lt;p&gt;In my experience a project board can become a kind of dumping ground unless you are ruthless with it.  At least it&amp;rsquo;s easy to leave a ticket hanging in the &amp;ldquo;in progress&amp;rdquo; column because it hasn&amp;rsquo;t quite been resolved, and/or you&amp;rsquo;re not sure what to do with it.  I&amp;rsquo;m starting to think that it&amp;rsquo;s more dangerous to leave it there, eating up some of everyone&amp;rsquo;s cognitive resources every time they review the board.  There&amp;rsquo;s nothing like some empty columns to give people the motivation to take on new stuff.  Of course this means the process for getting tickets into the right columns and in priority order in the first place has to be good, but that&amp;rsquo;s another story.  My new resolution is to close out old tickets with what we&amp;rsquo;ve learnt and then create new tickets based on more complex or uncertain stuff that arises.&lt;/p&gt;

&lt;p&gt;So Michael and I &amp;ldquo;drove by&amp;rdquo; the WebSiteOne board taking on tickets where we could in the in-progress column. We fixed up some outstanding work on the stripe credit card change sad path, and got the PR ready for review. We jumped on the &amp;ldquo;out of memory&amp;rdquo; issue and got in a quick PR that might help us explore (if not fix) the issue.  Drive on - we started on the issue that the site admin is not alerted when slack invites fail, since we were realising we wanted a similar alert system as an extension to the card change fail for stripe.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m liking the narrative that&amp;rsquo;s emerging about sticking to what&amp;rsquo;s organised on the board to help you work with the team, and keep the decks clear for when bigger issues arise.  Avoid things gathering dust.  And then also driving-by tickets, getting a little action, furiously making other tickets so that a sliver of work can be marked closed. Then longer more complex follow-ups can be evaluated on subsequent passes.&lt;/p&gt;

&lt;p&gt;Now I really must go sort Heroku who&amp;rsquo;s now charging us to high heaven for our group account.  There&amp;rsquo;s no point in us bringing in loads of new premium members if we can&amp;rsquo;t keep our server costs down.  Heroku might give us leniency as a charity, but I won&amp;rsquo;t hold my breath.  Mustn&amp;rsquo;t let this one slide &amp;hellip;&lt;/p&gt;

&lt;h2&gt;Videos associated with this blog:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=Gx4mgVQuyzo"&gt;ProjectScope Video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=GDPrd9ixTAU"&gt;WebSiteOne Video&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://www.youtube.com/watch?v=E5bH5F-EaOc"&gt;&amp;ldquo;Kent Beck&amp;rdquo; scrum&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
  </entry>
</feed>
